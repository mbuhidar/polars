var searchIndex = new Map(JSON.parse('[\
["polars",{"t":"","n":["VERSION","apply_method_all_arrow_series","chunked_array","datatypes","df","docs","enable_string_cache","error","frame","functions","io","lazy","prelude","series","testing","time","using_string_cache","ChunkIdIter","ChunkedArray","ChunkedArrayLayout","FAST_EXPLODE_LIST","Multi","MultiNoNull","SORTED_ASC","SORTED_DSC","Settings","Single","SingleNoNull","__clone_box","__clone_box","_can_fast_explode","add","add","add","add","add","add","add","add","add","add","add","add","add_to","agg_list","agg_list","agg_list","agg_list","agg_list","agg_list","agg_list","all","all","all_kleene","amortized_iter","amortized_iter","amortized_iter_with_name","amortized_iter_with_name","any","any_kleene","append","apply","apply","apply","apply","apply","apply","apply_amortized","apply_amortized_generic","apply_amortized_generic","apply_amortized_same_type","apply_as_ints","apply_as_ints","apply_generic","apply_in_place","apply_kernel","apply_kernel","apply_kernel","apply_kernel","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_mut","apply_mut","apply_mut","apply_nonnull_values_generic","apply_to_buffer","apply_to_inner","apply_to_inner","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_values","apply_values","apply_values","apply_values","apply_values","apply_values","apply_values_generic","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_unique","arg_unique","arithmetic","as_array","as_binary","as_binary","as_list","as_ref","as_ref_dtype","as_string","as_string","binary_zip_and_apply_amortized","bitand","bitand","bitand","bitand","bitand_assign","bitor","bitor","bitor","bitor","bitor_assign","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","builder","cast","cast","cast","cast","cast","cast","cast","cast","cast_and_apply_in_place","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","checked_div","checked_div_num","chunk_id","chunks","chunks_mut","clear","clone","clone","clone_into","clone_into","collect","comparison","complement","cont_slice","contains","data_views","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","difference","div","div","div","div","divide","drop","drop","drop","drop","dtype","empty","eq","equal","equal","equal","equal","equal","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","explode_and_offsets","explode_and_offsets","explode_and_offsets","extend","extend","fill_null_with_values","fill_null_with_values","fill_null_with_values","filter","filter","filter","filter","filter","filter","filter","filter","first_non_null","float","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each","for_each_amortized","for_each_amortized","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_fallible_iter","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_iterator_par","from_name","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter_with_dtype","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_trusted_len_iter_rev","from_trusted_len_iter_rev","from_vec","from_vec_validity","full","full","full","full","full","full","full","full","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null_like","full_null_with_dtype","full_null_with_dtype","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_as_series","get_as_series","get_flags","get_inner","get_inner","get_object","get_object_unchecked","get_sorted_flag","get_unchecked","get_values_size","get_values_size","get_values_size","get_values_size","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples_perfect","gt","gt","gt","gt","gt","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","has_validity","head","init","init","init","init_rand","inner_dtype","inner_dtype","insert","intersection","intersects","into","into","into","into_date","into_datetime","into_decimal","into_decimal_unchecked","into_duration","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_no_null_iter","into_series","into_series","into_time","is_all","is_empty","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter","iter_names","iter_validities","iterator","last","last_non_null","layout","legacy_div","legacy_div","legacy_div_scalar","legacy_div_scalar","legacy_div_scalar_lhs","legacy_div_scalar_lhs","len","lhs_div","lhs_rem","lhs_sub","limit","lt","lt","lt","lt","lt","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","max","max","max_as_series","max_as_series","max_as_series","max_as_series","mean","mean","median","median","median","median_as_series","median_as_series","median_as_series","min","min","min_as_series","min_as_series","min_as_series","min_as_series","min_max","mmap_slice","mmap_slice","mul","mul","mul","mul","multiply","n_unique","n_unique","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_vec","new_from_vec_and_validity","new_vec","none_to_nan","not","not","not","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","null_count","object","offsets","offsets","offsets","ops","par_iter","par_iter","par_iter_indexed","par_iter_indexed","prod_as_series","prune_empty_chunks","quantile","quantile","quantile","quantile_as_series","quantile_as_series","quantile_as_series","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","ref_field","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","rem","rem","rem","rem","remainder","remove","rename","reverse","reverse","reverse","reverse","reverse","reverse","reverse","reverse","rolling_map","rolling_map_float","sample_frac","sample_n","scatter","scatter","scatter","scatter_single","scatter_single","scatter_single","scatter_single","scatter_with","scatter_with","scatter_with","scatter_with","set","set","set","set","set","set_fast_explode","set_inner_dtype","set_null_count","set_sorted_flag","set_sorted_flag","shift","shift","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shrink_to_fit","slice","sort","sort","sort","sort","sort","sort_with","sort_with","sort_with","sort_with","sort_with","std","std_as_series","std_as_series","std_as_series","sub","sub","sub","sub","sub","sub_assign","subtract","sum","sum","sum_as_series","sum_as_series","sum_as_series","sum_as_series","symmetric_difference","tail","take","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","to_logical","to_ndarray","to_ndarray","to_owned","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","toggle","true_div","true_div","true_div_scalar","true_div_scalar","true_div_scalar_lhs","true_div_scalar_lhs","try_apply_amortized","try_apply_amortized_generic","try_apply_amortized_generic","try_apply_amortized_same_type","try_apply_amortized_to_list","try_apply_generic","try_apply_nonnull_values_generic","try_from","try_from","try_from","try_from_chunk_iter","try_into","try_into","try_into","try_zip_and_apply_amortized","type_id","type_id","type_id","union","unique","unique","unique","unique","unique","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_as_series","var_as_series","var_as_series","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vzip","vzip","vzip","width","with_chunk","with_chunks","with_name","with_nullable_idx","with_sorted_flag","wrapping_abs","wrapping_abs","wrapping_add","wrapping_add","wrapping_add_scalar","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul","wrapping_mul_scalar","wrapping_mul_scalar","wrapping_neg","wrapping_neg","wrapping_sub","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","wrapping_trunc_div_scalar_lhs","zip_and_apply_amortized","zip_and_apply_amortized_same_type","zip_with","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","AnonymousListBuilder","AnonymousOwnedListBuilder","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","__clone_box","__clone_box","__clone_box","append_array","append_empty","append_empty","append_iter","append_iter","append_iter_values","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_opt_array","append_opt_series","append_opt_series","append_opt_slice","append_option","append_option","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_slice","append_trusted_len_iter","append_trusted_len_iter","append_value","append_value","append_value","append_value","append_values_iter","append_values_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fast_explode","fast_explode","fast_explode","fast_explode","fast_explode","field","field","field","field","field","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","fixed_size_list","from","from","from","from","from","from","from","from","from","from","from","from_iter_options","from_iter_values","from_slice","from_slice_options","get_list_builder","init","init","init","init","init","init","init","init","init","init","init","inner_array","inner_array","inner_array","inner_array","inner_array","into","into","into","into","into","into","into","into","into","into","into","list","new","new","new","new","new","new","new","new","new","new","new","new_with_values_type","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_null","append_opt_series","append_series","builder","fast_explode","field","finish","get_list_builder","inner_array","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","FixedSizeListIterNoNull","PolarsIterator","SomeIterator","StructIter","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","from","from","from","from","init","init","init","init","into","into","into","into","into_iter","into_iter","into_iter","into_iter","new","new","next","next","next","next","next_back","next_back","next_back","par","size_hint","size_hint","size_hint","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","list","string","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","arr_from_iter","arr_from_iter","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","as_any","as_any_mut","borrow","borrow_mut","builder","clone","clone_into","data_type","deref","deref_mut","drop","eq","equal","fmt","from","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","is_valid_unchecked","iter","iter","len","null_count","registry","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","to_boxed","to_boxed","to_owned","try_arr_from_iter","try_arr_from_iter","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","type_name","validity","value","value_unchecked","value_unchecked","values","values_iter","values_iter","vzip","with_validity","with_validity","with_validity_typed","ObjectChunkedBuilder","append_null","append_null","append_option","append_value","append_value","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","Max","MaxBound","Mean","Min","MinBound","None","One","Reinterpret","SlicedArray","Some","SortMultipleOptions","SortOptions","Zero","__clone_box","__clone_box","__clone_box","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast","cast_unchecked","clone","clone","clone","clone_into","clone_into","clone_into","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","descending","descending","drop","drop","drop","eq","eq","eq","equal","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","fmt","fmt","from","from","from","from","from","full","full","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","hash","hash","init","init","init","into","into","into","is_first_distinct","is_last_distinct","lt","lt_eq","maintain_order","maintain_order","max","mean","median","min","min_max","multithreaded","multithreaded","n_unique","new","new","new_from_index","not_equal","not_equal_missing","nulls_last","nulls_last","offsets","quantile","reinterpret_signed","reinterpret_unsigned","reverse","rolling_map","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","slice_typed","slice_typed_unchecked","sort","sort","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unique","var","vzip","vzip","vzip","with_maintain_order","with_maintain_order","with_multithreaded","with_multithreaded","with_nulls_last","with_nulls_last","with_order_descending","with_order_descending","with_order_descendings","with_order_reversed","with_order_reversed","zip","zip_with","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_array","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","slice_sorted_non_null_and_offset","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_descending","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","descending","descending","maintain_order","maintain_order","multithreaded","multithreaded","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","parse_fixed_offset","parse_time_zone","time_to_time64ns","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","Any","AnyValue","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date","Date32","Date64","DateChunked","DateType","Datetime","Datetime","DatetimeChunked","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","Duration","DurationChunked","DurationType","Enum","Enum","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","IsNested","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Second","StaticArray","Str","String","String","StringChunked","StringOwned","StringType","Struct","Struct","Struct","StructChunked","StructOwned","Time","Time","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_apply_fields","_can_fast_unique","_iter_struct_av","_materialize_struct_av","_with_fast_unique","add","add","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","agg_list","append","append","append_null","append_value","arg_sort","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_borrowed","as_date_iter","as_datetime_iter","as_ref","as_ref","as_ref_dtype","as_slice","as_time_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","build_local","call_categorical_merge_operation","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast_time_unit","cast_time_unit","categorical","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","chunks","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","contains_categoricals","contains_objects","contains_views","create_enum_data_type","data_type","days","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","divide","divide","divide","divide","divide","divide","divide","divide","divide","divide","divide","drain_iter_and_finish","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","field","field_by_name","fields","fields_mut","find","finish","finish","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arrow","from_cats_and_rev_map_unchecked","from_duration","from_duration_options","from_global_indices_unchecked","from_naive_date","from_naive_date_options","from_naive_datetime","from_naive_datetime_options","from_naive_time","from_naive_time_options","from_owned","from_string_to_enum","from_vec","from_zeroable_vec","full","full_null","full_null","full_null","get","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_categories","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_optional","get_rev_map","get_str","get_unchecked","get_unchecked","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","hash","hash","hash","hash","hash","hash","hash_impl","hour","hours","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner_dtype","inner_dtype","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_series","into_series","into_series","into_series","into_series","into_series","into_series","into_static","is_array","is_binary","is_bool","is_boolean","is_categorical","is_decimal","is_empty","is_empty","is_enum","is_enum","is_float","is_float","is_global","is_integer","is_integer","is_known","is_list","is_local","is_logical","is_nested","is_nested_null","is_nested_null","is_null","is_null","is_numeric","is_numeric","is_object","is_ord","is_primitive","is_signed_integer","is_signed_integer","is_string","is_struct","is_temporal","is_unsigned_integer","is_unsigned_integer","is_view","iter","iter","iter_str","last","len","len","len","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","max_as_series","merge_dtypes","merge_map","microseconds","milliseconds","min_as_series","minute","minutes","month_end","month_end","month_start","month_start","mul","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","n_unique","name","name","name","name","nanosecond","nanoseconds","new","new","new","new","new","new","new","new","new","new","new","new","new","new","next","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","null_count","null_count","parse_from_str_slice","parse_from_str_slice","partial_cmp","partial_cmp","physical","precision","rechunk","ref_field","register_value","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","rename","round","round","rows_encode","same_src","scale","second","seconds","set_name","set_time_unit","set_time_unit","set_time_zone","size_hint","sort","sort_with","strftime","strftime","strftime","strict_cast","sub","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","time_unit","time_unit","time_zone","to_arrow","to_arrow","to_arrow","to_arrow","to_arrow_field","to_ascii","to_enum","to_global","to_local","to_logical_type","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string","to_string","to_string","total_null_count","truncate","truncate","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_strict_cast","try_to_arrow","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","underlying_physical_type","unique","unnest","uses_lexical_ordering","value","value_counts","value_unchecked","value_within_range","values_iter","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_capacity","with_capacity","with_validity_typed","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","drop","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","eager","lazy","performance","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","Err","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","Ok","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","constants","context","context_trace","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","feature_gated","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","get_warning_function","init","init","init","into","into","into","map_err","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","error","error","msg","msg","FALSE","LENGTH_LIMIT_MSG","TRUE","Any","ArrowChunk","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","__clone_box","__clone_box","_add_columns","_apply_columns","_apply_columns_par","_filter_seq","_select_impl","_select_impl_unchecked","_slice_and_realloc","agg_chunks","align_chunks","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone_into","clone_into","clone_into","column","columns","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","eq","eq","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","explode","explode_impl","extend","fields","fill_null","filter","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","group_by","group_by_dynamic","group_by_stable","group_by_with_series","hash","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","index","index","index","index","index","index","index","init","init","init","init","init","insert_column","into","into","into","into","into","into_iter","into_iter","into_struct","is_duplicated","is_empty","is_unique","iter","iter_chunks","iter_chunks_physical","lazy","max_horizontal","mean_horizontal","melt","melt2","min_horizontal","n_chunks","new","new_no_checks","new_no_length_checks","next","next","null_count","pipe","pipe_mut","pipe_with_args","pop","ptr_equal","rename","replace","replace_column","replace_or_add","reverse","rolling","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_physical","select_series","select_with_schema","select_with_schema_unchecked","set_column_names","shape","shift","should_rechunk","shrink_to_fit","size_hint","size_hint","slice","slice_par","sort","sort_in_place","split_chunks","split_chunks_by_n","sum_horizontal","tail","take","take_unchecked","take_unchecked_impl","to_df","to_ndarray","to_owned","to_owned","to_owned","to_string","top_k","transpose","try_apply","try_apply_at_idx","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_rows_iter_and_schema","try_get_column_index","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unique","unique_impl","unique_stable","unnest","upsample","upsample_stable","vstack","vstack_mut","vzip","vzip","vzip","vzip","vzip","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","MeltArgs","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","id_vars","init","into","streamable","to_owned","try_from","try_into","type_id","value_name","value_vars","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","Idx","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","Slice","SlicedGroups","Std","Sum","Var","__clone_box","__clone_box","__clone_box","__clone_box","agg_list","aggregations","all","apply","as_list_chunked","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","count","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","df","drive_unindexed","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expr","first","first","first","first_mut","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","from","from","from","from","from","from","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","groups","idx_mut","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_idx","into_iter","into_iter","into_iter","into_par_iter","into_par_iter","into_par_iter","is_empty","is_empty","is_sorted_flag","iter","iter","keys","keys_sliced","last","len","len","max","mean","median","min","n_unique","new","new","next","nth","par_apply","par_iter","par_iter","quantile","select","slice","sort","sort","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unroll","unwrap_idx","unwrap_slice","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","All","AnyValueBuffer","AnyValueBufferTrusted","Boolean","Boolean","Date","Datetime","Duration","Float32","Float32","Float64","Float64","Int16","Int16","Int32","Int32","Int64","Int64","Int8","Int8","Null","Null","Row","String","String","Struct","Time","UInt16","UInt16","UInt32","UInt32","UInt64","UInt64","UInt8","UInt8","__clone_box","__clone_box","__clone_box","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","coerce_data_type","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","infer_schema","init","init","init","into","into","into","into_series","into_series","new","new","new","reset","reset","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","concat_df_diagonal","concat_df_horizontal","Abs","Agg","AggExpr","AggGroups","AggregationContext","Alias","All","AllColumns","AllColumnsSingle","AllHorizontal","AllowedOptimizations","Always","Ambiguous","And","AnonymousFunction","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Any","Any","Any","Any","AnyHorizontal","AnyValue","Arc","ArgAgg","ArgUnique","ArgWhere","ArithmeticChunked","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayExpr","ArrayFromIter","ArrayFromIterDtype","ArrayNameSpace","ArrayRef","ArrowDataType","ArrowField","ArrowSchema","ArrowTimeUnit","AsBinary","AsList","AsOf","AsOfOptions","AsRefDataType","AsString","AsStruct","AsofJoin","AsofJoinBy","AsofStrategy","Auto","Average","BOOLEAN_RE","Backward","Backward","BackwardFill","BatchedCsvReaderMmap","BatchedCsvReaderRead","BatchedParquetReader","Binary","Binary","Binary","Binary","BinaryChunked","BinaryChunkedBuilder","BinaryExpr","BinaryExpr","BinaryNameSpaceImpl","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryUdfOutputField","BinaryView","Boolean","Boolean","Boolean","Boolean","Boolean","BooleanChunked","BooleanChunkedBuilder","BooleanFunction","BooleanType","BorrowIdxItem","Both","Both","Bounds","BoundsIter","Brotli","BrotliLevel","C","Cache","Cast","CatIter","Categorical","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalFunction","CategoricalMergeOperation","CategoricalNameSpace","CategoricalOrdering","CategoricalType","Cbrt","Ceil","ChainedThen","ChainedWhen","ChunkAgg","ChunkAggSeries","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkId","ChunkJoinOptIds","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","ChunkedSet","Clip","ClosedInterval","ClosedWindow","Coalesce","CoalesceColumns","Column","ColumnNotFound","Columns","Columns","CommentPrefix","ComputeError","ConcatExpr","Context","Count","Count","Cross","CrossJoin","CsvEncoding","CsvReader","CsvReaderOptions","CsvWriter","CsvWriterOptions","CumCount","CumMax","CumMin","CumProd","CumSum","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataFrame","DataFrameJoinOps","DataFrameOps","DataFrameScan","DataPoint","DataPoint","DataType","Date","Date","Date","Date32","Date64","DateChunked","DateMethods","DateTime","DateType","Datetime","Datetime","DatetimeArgs","DatetimeChunked","DatetimeMethods","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dense","DfTake","Dictionary","Diff","Distinct","Divide","DropNans","DropNulls","DslPlan","Dtype","DtypeColumn","Duplicate","Duration","Duration","Duration","Duration","Duration","DurationArgs","DurationChunked","DurationMethods","DurationType","DynArgs","DynamicGroupOptions","Earliest","Enum","Enum","Eq","EqValidity","Err","Exclude","Excluded","Explode","Explode","Expr","ExprEvalExtension","ExprNameNameSpace","ExtContext","ExtendConstant","Extension","FLOAT_RE","FLOAT_RE_DECIMAL","FalseT","Field","FieldRef","FieldsMapper","FieldsNameMapper","FileMetaData","FileMetaDataRef","FillNull","FillNullLimit","FillNullStrategy","FillNullWithStrategy","Filter","Filter","First","First","First","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float","Float16","Float32","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64","Float64Chunked","Float64Type","Floor","FloorDivide","Fortran","Forward","Forward","ForwardFill","Friday","FromData","FromDataBinary","FromDataUtf8","FuncRet","Function","FunctionExpr","FunctionOutputField","Gather","GatherEvery","Generic","GetAnyValue","GetCategories","GetOutput","Global","GlobalRevMapMerger","GroupBy","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","GroupsToRows","Gt","GtEq","Gzip","GzipLevel","HConcat","HStack","HasViews","HashMap","HashMap","Higher","IDX_DTYPE","INTEGER_RE","IO","Idx","Idx","IdxArr","IdxCa","IdxItem","IdxSize","IdxType","Implode","Implode","InProcessQuery","IndexOfSchema","IndexOrder","IndexToUsize","InitHashMaps","InitHashMaps2","Inner","InnerJoinIds","Int","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8","Int8Chunked","Int8Type","Interpolate","InterpolationMethod","Interval","IntoGroupsProxy","IntoLazy","IntoListNameSpace","IntoSeries","IntoVec","InvalidOperation","IpcCompression","IpcReader","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOption","IpcWriterOptions","IsBetween","IsFinite","IsFirstDistinct","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLastDistinct","IsNan","IsNested","IsNotNan","IsNotNull","IsNull","Item","Join","Join","JoinArgs","JoinBuilder","JoinCoalesce","JoinDispatch","JoinOptions","JoinSpecific","JoinType","JoinValidation","Json","JsonFormat","JsonLineReader","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","KeepColumns","KeepName","LZ4","Label","LargeBinary","LargeBinaryArray","LargeList","LargeListArray","LargeStringArray","LargeUtf8","Last","Last","Last","Latest","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","Left","Left","Left","Left","Left","Left","LeftJoinIds","Len","Lexical","LhsNumOps","Linear","Linear","List","List","List","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListChunked","ListExpr","ListFromIter","ListNameSpace","ListNameSpaceExtension","ListNameSpaceImpl","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","ListType","Literal","Literal","LiteralValue","Local","Logical","LogicalAnd","LogicalOr","LogicalType","LossyUtf8","Lower","LowerBound","Lt","LtEq","Lz4Raw","Lzo","ManyToMany","ManyToOne","Map","MapFunction","Max","Max","Max","Max","MaxBound","MaxHorizontal","Mean","Mean","Mean","MeanHorizontal","Median","Median","MeltArgs","Microsecond","Microseconds","Midpoint","Millisecond","Milliseconds","Min","Min","Min","Min","MinBound","MinHorizontal","Minus","Mode","Modulus","Monday","Multi","Multiply","NULL","NUnique","NUnique","Name","Named","NamedFrom","NamedFromOwned","NanMax","NanMin","Nanosecond","Nanoseconds","Native","Nearest","Nearest","Nearest","Necessary","Negate","Never","NewChunkedArray","NoData","NoNull","NonExistent","NonNumeric","None","None","None","None","None","None","Not","NotEq","NotEqValidity","Nth","Null","Null","Null","Null","Null","Null","Null","NullCount","NullValues","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","Ok","One","OneToMany","OneToOne","Operator","OptState","Or","Ordinal","Out","OutOfBounds","Outer","Output","Over","OwnedBatchedCsvReader","OwnedBatchedCsvReaderMmap","OwnedObject","ParallelStrategy","ParquetCompression","ParquetOptions","ParquetReader","ParquetStatistics","ParquetWriteOptions","ParquetWriter","PartitionedAggregation","PathIterator","Physical","Physical","PhysicalExpr","PhysicalIoHelper","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","Plus","PolarsArray","PolarsDataType","PolarsError","PolarsFloatType","PolarsIntegerType","PolarsIterator","PolarsMonthEnd","PolarsMonthStart","PolarsNumericType","PolarsObject","PolarsResult","PolarsRound","PolarsTemporalGroupby","PolarsTruncate","PolarsType","PolarsUpsample","Pow","PowFunction","PrimitiveChunkedBuilder","Quantile","Quantile","QuantileAggSeries","QuantileInterpolOptions","QuoteStyle","Raise","Raise","Random","Random","Range","Range","Rank","RankMethod","RankOptions","Reinterpret","RenameAlias","RenameAliasFn","RepeatBy","Replace","Reshape","RevMapping","Reverse","Right","Right","Right","Right","Right","Rolling","RollingCovOptions","RollingExpr","RollingGroupOptions","RollingOptions","RollingOptionsDynamicWindow","RollingOptionsFixedWindow","RollingOptionsImpl","RollingQuantileParams","RollingSeries","RollingVarParams","Round","RoundSF","RoundSeries","RowGroupIter","RowGroups","Saturday","Scalar","Scan","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","Schema","SchemaFieldNotFound","SchemaMismatch","SchemaRef","SearchSortedSide","Second","Select","Selector","SerReader","SerWriter","SerializeOptions","Series","Series","SeriesBinaryUdf","SeriesJoin","SeriesMethods","SeriesOpsTime","SeriesRank","SeriesSealed","SeriesTrait","SeriesUdf","SetSortedFlag","ShapeMismatch","Shift","ShiftAndFill","ShrinkType","Single","Sink","Slice","Slice","Slice","Slice","SlicedArray","SlicedGroups","Snappy","Some","Some","Sort","Sort","SortBy","SortMultipleOptions","SortOptions","SpecialEq","SplitNChars","Sqrt","StartBy","StaticArray","Std","Std","Str","StrCat","String","String","String","StringCacheHolder","StringCacheMismatch","StringChunked","StringChunkedBuilder","StringExpr","StringMethods","StringNameSpaceImpl","StringOwned","StringType","StrptimeOptions","Struct","Struct","Struct","StructArray","StructChunked","StructExpr","StructFieldNotFound","StructNameSpace","StructOwned","SubPlan","Sum","Sum","SumHorizontal","Sunday","TakeChunked","TemporalExpr","TemporalMethods","Ternary","Then","Thursday","Time","Time","Time","Time32","Time64","TimeChunked","TimeMethods","TimeType","TimeUnit","TimeZone","Timestamp","ToDummies","ToPhysical","TrueDivOut","TrueDivPolarsType","TrueDivide","TrueT","Tuesday","UInt16","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","UdfSchema","Uncompressed","Union","Union","UnionArgs","Unique","UniqueKeepStrategy","Unknown","Unknown","UnknownKind","UpperBound","UserDefinedFunction","Utf8","Utf8","Utf8View","ValueCounts","ValueIterT","ValueT","Var","Var","VarAggSeries","VecHash","Wednesday","When","Wildcard","Window","Window","WindowBound","WindowMapping","WindowType","Xor","ZSTD","Zero","ZeroablePhysical","ZeroableValueT","Zstd","ZstdLevel","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_coalesce_outer_join","_collect_post_opt","_create_left_df_from_slice","_finish_left_join","_join_suffix_name","_left_join_from_series","_outer_join_from_series","_sum_as_series","_take_chunked_unchecked","_take_chunked_unchecked_seq","_take_opt_chunked_unchecked","_take_opt_chunked_unchecked_seq","_to_dummies","_with_comment_prefix","_with_eager","abs","abs","add","add","add_ms","add_ns","add_to","add_us","agg","agg_groups","aggregations","alias","all","all","all_horizontal","allocator","allow_parallel","allow_parallel","allows_predicate_pushdown","allows_projection_pushdown","allows_projection_pushdown","allows_slice_pushdown","ambiguous","and","anonymous_scan","any","any_horizontal","append","append_null","append_null","append_opt_series","append_option","append_series","append_value","apply","apply","apply","apply_binary","apply_children","apply_kernel","apply_kernel_cast","apply_many","apply_many_private","apply_multiple","apply_to_slice","apply_values","arange","arced","arg_max","arg_max","arg_max","arg_max","arg_min","arg_min","arg_min","arg_min","arg_sort","arg_sort","arg_sort","arg_sort_by","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_where","args","arity","arr","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","array","arrow_schema","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_binary","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_expression","as_fd","as_list","as_partitioned_aggregator","as_ptr","as_raw_fd","as_ref","as_ref","as_ref_dtype","as_series","as_single_ptr","as_slice","as_stats_evaluator","as_stats_evaluator","as_string","as_struct","as_time","assume_init","assume_init","avg","backward_fill","base64_decode","base64_encode","base_utc_offset","batch_size","batched","batched","batched","batched","batched_borrowed_mmap","batched_borrowed_read","batched_mmap","batched_read","binary","binary","binary_expr","bitand","bitor","bitxor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","boxed","builder","by","by","by","cache","cache","cache","cache","call","call","call_categorical_merge_operation","call_udf","call_udf","call_unchecked","cancel","cast","cast","cast","cast","cast","cast","cast_all","cast_unchecked","cat","cat","cause","cbrt","ceil","ceil","center","center","center","century","check_projected_arrow_schema","check_projected_schema","check_projected_schema_impl","check_sorted","check_sorted","checked_div","checked_div","checked_div_num","chunk_lengths","chunkedarray","chunks","chunks_mut","clip","clip","clip_max","clip_max","clip_min","clip_min","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_inner","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","closed_window","closed_window","closed_window","closed_window","closed_window","cloud","cloud_options","cloud_options","cloud_options","cmp","cmp","coalesce","coalesce","coalesce","coalesce","coalesce_series","col","collect","collect_all","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","collect_concurrently","cols","column_order","column_orders","columns_to_dummies","comment_prefix","compare","compare","compression","compression","compute_schema","concat","concat","concat_expr","concat_impl","concat_impl","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","contains","contains","contains","contains","contains","contains_chunked","contains_chunked","contains_literal","convert_inner_type","convert_to_unsigned_index","count","count","count_matches","count_matches_many","count_rows","create_enum_data_type","create_left_df_chunked","create_writer","create_writer","created_by","cross_join","cross_join","cross_join_dfs","cum_count","cum_count","cum_fold_exprs","cum_max","cum_max","cum_min","cum_min","cum_prod","cum_prod","cum_reduce_exprs","cum_sum","cum_sum","cumulative_eval","data_pagesize_limit","data_type","data_type","data_type","datatypes","date_format","date_ranges","datetime","datetime","datetime_format","datetime_range","datetime_ranges","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","day","day","day","day","days","days","days","days_only","ddof","ddof","decimal_comma","decrement_strong_count","decrement_strong_count_in","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default_arrays","default_join_ids","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","descending","descending","descending","describe","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","describe_tree_format","description","deserialize","df","df","diagonal","diff","diff","diff","distinct_count","div","div","divide","dot","dot","downcast","downcast_unchecked","downgrade","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_nans","drop_nulls","drop_nulls","drop_nulls","dst_offset","dt","dt","dtype","dtype","dtype","dtype_col","dtype_cols","duration","eager","eager","encode_hex","encode_hex_upper","encoding","ends_with","ends_with_chunked","ensure_duration_matches_data_type","ensure_is_constant_duration","eol_char","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","eval","evaluate","evaluate_io","evaluate_on_groups","evaluate_partitioned","every","exact","exclude","exclude_dtype","execute","explain","explode","explode","explode","explode_and_offsets","expr","expr","extend_constant","extension","extension","extract","extract","extract_all","extract_all_many","extract_groups","fast_explode","fast_projection","fast_projection","fetch","fetch","fetch_blocking","field","field","field_by_index","field_by_name","fields","fields","file_caching","file_caching","fill_nan","fill_nan","fill_null","fill_null","fill_null","fill_null_with_strategy","fill_null_with_values","filter","filter","filter","filter","filter","finalize","find","find_chunked","find_literal","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish_no_glob","finish_no_glob","finish_no_glob","finish_with_scan_ops","finishes_this_batch","first","first","first","first","fixed_size_list","flatten","float_precision","float_sorted_arg_max","float_type","floor","floor","floor_div","floor_div_series","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","fmt_str","fn_params","fn_params","fn_params","fn_params","fold_exprs","force_parallel","force_parallel","format","format_str","forward_fill","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_data_default","from_data_unchecked_default","from_data_unchecked_default","from_fallible_iter","from_fallible_iter","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_options","from_iter_primitive_trusted_len","from_iter_trusted_length","from_iter_trusted_length","from_iter_utf8_trusted_len","from_iter_values","from_par_iter","from_par_iter","from_partitioned_ds","from_path","from_path","from_raw","from_raw_in","from_slice","from_slice_options","from_str","from_trusted_len_iter_rev","from_trusted_len_iter_rev","from_type","from_vec","from_vec","from_zeroable_vec","full","full","full","full_null","full_null","fun","function_expr","function_with_options","gather","gather","gather_every","ge","get","get","get","get","get","get","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_at_index","get_at_index_mut","get_categories","get_current_optimizations","get_datatype","get_dtype","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_field","get_field","get_field","get_fields","get_fields_lens","get_full","get_metadata","get_mut","get_mut_unchecked","get_names","get_names","get_names","get_object","get_object_chunked_unchecked","get_output","get_overlapping_bounds_iter","get_reader_bytes","get_schema","get_sequential_row_statistics","get_unchecked","get_unchecked","get_unchecked","glob","glob","glob","group_by","group_by_dynamic","group_by_dynamic","group_by_stable","group_by_values","group_by_windows","group_tuples","gt","gt","gt","gt_eq","gt_eq","has_header","has_header","has_header","has_validity","has_validity","has_window_function","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash_join_inner","hash_join_outer","head","head","head","hex_decode","hex_encode","hive_options","hor_str_concat","hour","hour","hour","hour","hours","hours","how","how","id_vars","idx","ignore_errors","impl_replace_time_zone","impl_replace_time_zone_fast","implode","in_nanoseconds_window","include_bom","include_bom","include_boundaries","include_header","include_header","increment_strong_count","increment_strong_count_in","index_column","index_column","index_of","index_of","index_of","indexes_to_usizes","infer_file_schema","infer_schema","infer_schema_len","infer_schema_len","infer_schema_length","infer_schema_length","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner_array","inner_join","inner_join","inner_mut","input_fields","insert_at_index","int_range","int_ranges","interpol","interpolate","interpolate","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_data","into_inner","into_inner","into_iter","into_iter","into_iter","into_iter","into_iter","into_list_name_space","into_list_name_space","into_raw","into_series","into_series","into_thrift","into_vec","into_vec","into_vec","is_asof","is_between","is_between","is_cloud_url","is_compressed","is_constant_duration","is_empty","is_empty","is_empty","is_finished","is_finite","is_first_distinct","is_first_distinct","is_first_distinct","is_full_days","is_in","is_in","is_infinite","is_last_distinct","is_last_distinct","is_last_distinct","is_leap_year","is_leap_year","is_leap_year","is_literal","is_nan","is_not_nan","is_not_null","is_not_null","is_not_null","is_null","is_null","is_null","is_null","is_null_idx","is_nullable","is_positive_idx_uncertain","is_read_vectored","is_series","is_sorted","is_tty","is_valid_bit_pattern","is_write_vectored","is_zero","iso_year","iso_year","iso_year","iter","iter","iter","iter_dtypes","iter_dtypes_mut","iter_fields","iter_names","iter_paths","join","join","join","join","join_asof","join_asof_by","join_builder","join_literal","join_many","join_nulls","join_nulls","json_encode","keep","key_value_metadata","key_value_metadata","label","last","last","last","last","last","lazy","lazy","le","left_by","left_join","left_join","left_on","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","len","len","len","len","len","len","len","limit","limit","limit_reached","line_terminator","list","lit","lit","lit","lit","logical_and","logical_or","logical_plan","logical_plan","low_memory","low_memory","low_memory","low_memory","low_memory","low_memory","low_memory","lower_bound","lst_arg_max","lst_arg_min","lst_concat","lst_diff","lst_get","lst_join","lst_lengths","lst_max","lst_mean","lst_median","lst_min","lst_n_unique","lst_reverse","lst_shift","lst_slice","lst_sort","lst_std","lst_sum","lst_unique","lst_unique_stable","lst_var","lt","lt","lt","lt_eq","lt_eq","maintain_order","maintain_order","maintain_order","maintain_order","maintain_order","maintain_order","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","map","map","map","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","map_dtype","map_dtypes","map_expr","map_field","map_fields","map_fields","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","materialize","materialize_empty_df","materialize_projection","max","max","max","max","max","max","max_as_series","max_as_series","max_value","mean","mean","mean","mean","mean","mean","median","median","median","median","median","median","median","median_as_series","median_as_series","melt","memory_map","memory_map","memory_mapped","merge","merge_dtypes","metadata","metadata","method","microsecond","microseconds","microseconds","millennium","milliseconds","milliseconds","min","min","min","min","min","min","min_as_series","min_as_series","min_max","min_periods","min_periods","min_periods","min_periods","min_periods","min_value","minute","minute","minute","minute","minutes","minutes","mode","mode","month","month","month","month","month_end","month_start","months","months_only","mul","mul","mul","multiply","multithreaded","multithreaded","n_chunks","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","n_threads","n_threads","n_unique","n_unique","n_unique","n_unique","n_unique","name","name","name","name","name","name","nan_max","nan_min","nan_propagating_aggregate","nanosecond","nanosecond","nanosecond","nanoseconds","nanoseconds","nanoseconds","ne","needs_checks","neg","negate","negate_bitwise","negative","negative_to_usize","neq","neq_missing","nested_sum_type","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_cyclic","new_empty","new_from_index","new_from_index","new_from_str","new_in","new_inserting_at_index","new_int_range","new_multi","new_null","new_paths","new_paths","new_single","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","next","next","next_batches","next_batches","next_batches","next_batches","next_batches","nodes","nodes_owned","not","not","not_equal","not_equal_missing","null","null","null","null","null_count","null_count","null_count","null_count","null_values","nulls_last","nulls_last","num_rows","num_rows","offset","offset","offset","offsets","on","optimize","options","or","ordinal","ordinal","ordinal_day","ordinal_year","otherwise","otherwise","outer_join","outer_join","output_schema","over","over_with_options","parallel","parallel","parallel","parse","parse_from_str_slice","parse_from_str_slice","parse_from_str_slice","parsed_int","partial_cmp","partial_cmp","path","path","path","paths","paths","paths","period","period","pi","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","pow","predicate","predicate_pushdown","predicate_pushdown","prefix","prefix_fields","private_left_join_multiple_keys","prob","prod_as_series","product","profile","projection_pushdown","projection_pushdown","provide","ptr_eq","quantile","quantile","quantile","quantile","quantile_as_series","quantile_as_series","quarter","quarter","quarter","queue","quote_char","quote_char","quote_style","raise_if_empty","raise_if_empty","raise_if_empty","rank","rank","read","read_buf","read_parallel","read_to_end","read_to_string","read_varint","read_vectored","rechunk","rechunk","rechunk","rechunk","rechunk","rechunk","rechunk","reduce_exprs","reinterpret_signed","reinterpret_unsigned","rem","rem","remainder","remove","rename","rename","rename","rename_fields","repeat","repeat_by","repeat_by","replace","replace","replace","replace_all","replace_dtype","replace_literal","replace_literal_all","replace_time_zone","reshape","resolve_homedir","return_type","reverse","reverse","reverse","reverse","reverse","reverse","right_by","right_on","rolling","rolling","rolling","rolling_map","rolling_map","rolling_map","rolling_map_float","rolling_max","rolling_max","rolling_mean","rolling_mean","rolling_median","rolling_min","rolling_min","rolling_quantile","rolling_quantile","rolling_std","rolling_std","rolling_sum","rolling_sum","rolling_var","rolling_var","round","round","round","round_ms","round_ns","round_sig_figs","round_sig_figs","round_us","row_estimate","row_estimate","row_group_size","row_groups","row_index","row_index","row_index","row_index","row_index","row_index","rows_left","rows_right","same_type","same_type","sample_frac","sample_n","sample_size","scan","scan","scan_ipc","scan_ipc_files","scan_parquet","scan_parquet_files","scatter","scatter_single","scatter_with","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema_descr","schema_overwrite","search_sorted","second","second","second","second","seconds","seconds","seek","select","select_seq","separator","separator","serialize_options","series","set","set_dtype","set_dtype_at_index","set_low_memory","set_parallel","set_rechunk","set_rechunk","set_rechunk","set_rechunk","set_rechunk","set_sorted_flag","set_validity","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_remove","shift_remove_index","shrink_dtype","shrink_to_fit","shrink_to_fit","shuffle","simplify_expr","simplify_expr","sink_csv","sink_ipc","sink_json","sink_parquet","skip_rows","skip_rows","skip_rows","skip_rows_after_header","slice","slice","slice","slice","slice","slice","slice","slice","slice_pushdown","slice_pushdown","slice_typed","slice_typed","slice_typed_unchecked","slice_typed_unchecked","slice_unchecked","slice_unchecked","sliced","sliced_unchecked","sort","sort","sort","sort","sort","sort","sort_by","sort_by_exprs","sort_with","sort_with","source","split","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","sqrt","start_by","starts_with","starts_with_chunked","statistics","std","std","std","std","std","std","std_as_series","std_as_series","store","str","str_concat","str_head","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strategy","streamable","streaming","streaming","strftime","strict","strict_cast","strings","strip_chars","strip_chars","strip_chars_end","strip_chars_end","strip_chars_start","strip_chars_start","strip_prefix","strip_prefix","strip_suffix","strip_suffix","strong_count","struct_","sub","sub","subtract","suffix","suffix","suffix","suffix","suffix_fields","sum","sum","sum","sum","sum","sum","sum_as_series","super_type","sync_update","tail","tail","tail","tail","take","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_unchecked","take_unchecked","take_validity","ternary_expr","then","then","time_format","time_ranges","time_unit","time_unit","time_zone","timestamp","to_alp","to_alp","to_alp_optimized","to_any_value","to_array","to_arrow","to_boxed","to_byte_slices","to_dot","to_dot","to_dummies","to_dummies","to_field","to_field","to_integer","to_list","to_lowercase","to_lowercase","to_opt","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_supertype","to_supertypes","to_titlecase","to_uppercase","to_uppercase","tolerance","tolerance_str","top_k","true_div","true_div_scalar","true_div_scalar_lhs","truncate","truncate_impl","truncate_ms","truncate_ms","truncate_no_offset_ms","truncate_no_offset_ns","truncate_no_offset_us","truncate_ns","truncate_ns","truncate_ragged_lines","truncate_ragged_lines","truncate_ragged_lines","truncate_us","truncate_us","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_thrift","try_get","try_get_at_index","try_get_field","try_get_full","try_get_mut","try_index_of","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_negative_to_usize","try_new","try_new","try_new","try_new","try_new","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_parse_dates","try_pin","try_pin_in","try_serialize","try_unwrap","tu","tu","type_coercion","type_coercion","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","tz","tz","udf","unique","unique","unique","unique","unique","unique","unique_stable","unique_stable","unique_stable","unique_stable","unnest","unwrap","unwrap_or_clone","upper_bound","upsample","upsample_stable","use_statistics","use_statistics","use_statistics","utf8","validate","validation","validity","validity","value","value_counts","value_counts","value_name","value_unchecked","value_vars","values","values_iter","values_iter","var","var","var","var","var","var","var_as_series","var_as_series","variable_name","vec_hash","vec_hash_combine","version","view","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","warn_if_unsorted","weak_count","week","week","week","weekday","weekday","weekday","weekday","weeks","weeks","weeks_only","weights","weights","weights","when","when","when","window_size","window_size","window_size","window_size","window_size","with","with_ambiguous","with_batch_size","with_batch_size","with_batch_size","with_cache","with_capacity","with_capacity","with_capacity","with_chunk_size","with_chunk_size","with_coalesce","with_column","with_column","with_columns","with_columns","with_columns","with_columns","with_columns","with_columns","with_columns_seq","with_comment_prefix","with_comment_prefix","with_compression","with_compression","with_compression","with_compression","with_compression","with_context","with_data_page_size","with_date_format","with_datetime_format","with_day","with_days","with_decimal_comma","with_decimal_comma","with_dtype","with_dtype_overwrite","with_dtypes","with_dtypes_slice","with_encoding","with_encoding","with_end_of_line_char","with_end_of_line_char","with_extension","with_extension","with_float_precision","with_fractional_seconds","with_glob","with_hive_partition_columns","with_hms","with_hms","with_hour","with_hours","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_infer_schema_length","with_infer_schema_length","with_json_format","with_json_format","with_line_terminator","with_metadata","with_metadata","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_missing_is_null","with_missing_is_null","with_month","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_threads","with_n_threads","with_nanoseconds","with_null_value","with_null_values","with_null_values","with_optimizations","with_options","with_path","with_path","with_path","with_path","with_path","with_paths","with_paths","with_paths","with_pl_flavor","with_pl_flavor","with_predicate","with_predicate","with_predicate_pushdown","with_projection","with_projection","with_projection","with_projection","with_projection","with_projection_pushdown","with_quote_char","with_quote_char","with_quote_char","with_quote_style","with_rechunk","with_rechunk","with_rechunk","with_rechunk","with_rechunk","with_row_estimate","with_row_group_size","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_same_dtype","with_schema","with_schema","with_schema","with_schema","with_schema","with_schema","with_schema_modify","with_schema_overwrite","with_schema_overwrite","with_second","with_seconds","with_separator","with_separator","with_separator","with_simplify_expr","with_skip_rows","with_skip_rows","with_skip_rows_after_header","with_skip_rows_after_header","with_slice_pushdown","with_statistics","with_streaming","with_time_format","with_time_unit","with_time_zone","with_try_parse_dates","with_try_parse_dates","with_type_coercion","with_validity","with_validity","with_validity_typed","with_weeks","with_year","without_optimizations","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","write","write_varint","write_vectored","xor","year","year","year","year","zip","zip_with","expr","input","input","interpol","propagate_nans","propagate_nans","quantile","closed","ignore_nulls","ignore_nulls","aggs","apply","args","by_column","cache_hits","contexts","df","expr","exprs","file_info","file_options","function","id","input","input","input","input","input","input","input","input","input","input","input","input_left","input_right","inputs","inputs","keys","left_on","len","maintain_order","offset","options","options","options","options","options","options","output_schema","paths","payload","predicate","predicate","projection","right_on","scan_type","schema","selection","slice","sort_options","by","by","data_type","expr","expr","expr","expr","expr","falsy","function","function","function","function","idx","input","input","input","input","left","length","offset","op","options","options","options","options","output_type","partition_by","predicate","returns_scalar","right","sort_options","strict","truthy","decimals","digits","has_max","has_min","limit","limit","method","n","offset","options","parallel","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","include_nulls","groups","rolling","data_type","high","low","error","error","msg","msg","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","ArrayNameSpace","AsArray","array_arg_max","array_arg_min","array_get","array_join","array_max","array_median","array_min","array_n_unique","array_reverse","array_shift","array_sort","array_std","array_sum","array_unique","array_unique_stable","array_var","as_array","BinaryNameSpace","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","init","into","starts_with","try_from","try_into","type_id","vzip","CategoricalNameSpace","DateMethods","DatetimeMethods","DurationMethods","RollingOptions","RollingOptionsDynamicWindow","RollingOptionsImpl","SeriesOpsTime","StringMethods","TimeMethods","__clone_box","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_time","borrow","borrow_mut","by","by","by","center","center","clone","clone_into","closed_window","closed_window","closed_window","day","day","days","default","deref","deref_mut","drop","eq","fmt","fn_params","fn_params","fn_params","from","hour","hour","hours","init","into","is_leap_year","is_leap_year","iso_year","iso_year","microseconds","milliseconds","min_periods","min_periods","min_periods","minute","minute","minutes","month","month","nanosecond","nanosecond","nanoseconds","ordinal","ordinal","parse_from_str_slice","parse_from_str_slice","parse_from_str_slice","quarter","quarter","rolling_max","rolling_mean","rolling_min","rolling_quantile","rolling_std","rolling_sum","rolling_var","second","second","seconds","string","to_owned","try_from","try_into","tu","tu","type_id","tz","tz","vzip","warn_if_unsorted","week","week","weekday","weekday","weights","weights","window_size","window_size","window_size","year","year","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","__clone_box","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_string","as_time","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","vzip","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","parse_bytes","parse_bytes","pattern","to_owned","try_from","try_from_with_unit","try_from_with_unit","try_from_with_unit","try_into","type_id","vzip","Aws","Azure","CloudOptions","CloudType","File","Gcp","Http","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","equivalent","equivalent","equivalent","fmt","from","from","from_str","from_untyped_config","hash","init","init","into","into","max_retries","options","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Aws","Azure","CloudOptions","CloudType","File","Gcp","Http","max_retries","Any","AnyValue","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date","Date32","Date64","DateChunked","DateType","Datetime","Datetime","DatetimeChunked","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","Duration","DurationChunked","DurationType","Enum","Enum","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","IsNested","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Second","StaticArray","Str","String","String","StringChunked","StringOwned","StringType","Struct","Struct","Struct","StructChunked","StructOwned","Time","Time","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_ref_dtype","as_slice","call_categorical_merge_operation","cast","categorical","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","create_enum_data_type","dtype","dtype","finish","from_vec","from_zeroable_vec","full","full_null","get","get_any_value","get_any_value_unchecked","get_dtype","get_unchecked","get_unchecked","iter","last","make_categoricals_compatible","make_list_categoricals_compatible","merge_dtypes","name","new","new","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","value","value_unchecked","values_iter","with_capacity","with_capacity","with_validity_typed","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","impl_replace_time_zone","impl_replace_time_zone_fast","replace_time_zone","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","from_data_unchecked_default","DateLikeNameSpace","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","nanosecond","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","PhysicalAggExpr","evaluate","root_name","AnonymousBuilder","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","is_empty","new","push","push_null","try_from","try_into","type_id","vzip","width","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","Abs","All","AllHorizontal","Any","AnyHorizontal","ArgUnique","ArgWhere","ArrayExpr","AsStruct","BackwardFill","BinaryExpr","Boolean","BooleanFunction","Categorical","CategoricalFunction","Cbrt","Ceil","Clip","Coalesce","ConcatExpr","CumCount","CumMax","CumMin","CumProd","CumSum","Diff","DropNans","DropNulls","ExtendConstant","FillNull","FillNullWithStrategy","Floor","ForwardFill","FunctionExpr","GatherEvery","Generic","GetCategories","Interpolate","IsBetween","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsNan","IsNotNan","IsNotNull","IsNull","ListExpr","LowerBound","MaxHorizontal","MeanHorizontal","MinHorizontal","Mode","Negate","Not","NullCount","Pow","PowFunction","Random","Range","Rank","RepeatBy","Replace","Reshape","Reverse","RollingExpr","Round","RoundSF","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sqrt","StringExpr","StructExpr","SumHorizontal","TemporalExpr","ToPhysical","Unique","UpperBound","ValueCounts","cat","pow","rolling","closed","ignore_nulls","ignore_nulls","decimals","digits","has_max","has_min","limit","limit","method","n","offset","options","parallel","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","Max","MaxBy","Mean","MeanBy","Min","MinBy","Quantile","QuantileBy","RollingFunction","Std","StdBy","Sum","SumBy","Var","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","fmt","fmt","from","hash","init","into","to_owned","to_string","try_from","try_into","type_id","vzip","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","mode","group_agg_nan_max_s","group_agg_nan_min_s","nan_max_s","nan_min_s","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","data_type","default","deref","deref_mut","drop","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","Any","Left","Right","SearchSortedSide","binary_search_array","slice_sorted_non_null_and_offset","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","timestamp","to_string","week","weekday","year","SlicedArray","slice_typed","slice_typed_unchecked","SlicedArray","_broadcast_descending","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","descending","descending","maintain_order","maintain_order","multithreaded","multithreaded","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","AsString","SplitNChars","StringNameSpaceImpl","as_string","base64_decode","base64_encode","concat","contains","contains_chunked","contains_literal","count_matches","count_matches_many","extract","extract_all","extract_all_many","extract_groups","find","find_chunked","find_literal","hex_decode","hex_encode","hor_str_concat","replace","replace_all","replace_literal","replace_literal_all","split","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","str_concat","str_head","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strip_chars","strip_chars","strip_chars_end","strip_chars_end","strip_chars_start","strip_chars_start","strip_prefix","strip_prefix","strip_suffix","strip_suffix","to_integer","to_lowercase","to_titlecase","to_uppercase","UserDefinedFunction","fun","input_fields","name","options","return_type","BinaryFromIter","Utf8FromIter","from_values_iter","from_values_iter","Ascending","ChunkCompare","Descending","IntoSeries","IsSorted","Item","Not","Series","SeriesIter","SeriesPhysIter","SeriesTrait","__clone_box","__clone_box","_sum_as_series","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","add","add","add","append","arg_max","arg_min","arg_sort","arg_unique","arithmetic","array","array_ref","as_any","as_any_mut","as_list","as_mut","as_ref","as_ref","as_series","as_series","as_single_ptr","as_single_ptr","binary","binary_offset","bitand","bitor","bitxor","bool","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast","cast","cast_unchecked","categorical","checked_div","checked_div","checked_div_num","chunk_lengths","chunks","chunks_mut","chunks_mut","clear","clone","clone","clone_inner","clone_into","clone_into","compute_len","date","datetime","decimal","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","div","div","div","div","drop","drop","drop","drop_nulls","dtype","duration","eq","eq","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","extend","extend_constant","f32","f64","field","fill_null","filter","filter_threaded","fmt","fmt","fmt","fmt_list","from","from","from","from","from","from","from","from","from_any_values","from_any_values_and_dtype","from_arrow","from_chunks_and_dtype_unchecked","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","full_null","gather_every","get","get_data_ptr","get_flags","get_object","get_object_chunked_unchecked","get_unchecked","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","has_validity","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","init","init","into","into","into","into_frame","into_iter","into_series","into_series","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","is_series","is_sorted_flag","iter","len","limit","list","lit","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","max","max_as_series","mean","mean_as_series","median","median_as_series","min","min_as_series","mul","mul","mul","mul","n_chunks","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_null","next","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","null","null_count","ops","phys_iter","product","quantile_as_series","rechunk","rem","rem","rem","rename","rename","reshape","reverse","reverse","rolling_map","sample_frac","sample_n","set_sorted_flag","shift","shrink_to_fit","shrink_to_fit","shuffle","size_hint","slice","sort","sort_with","std","std_as_series","str","str_value","strict_cast","struct_","sub","sub","sub","sub","sum","sum_as_series","tail","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_slice_unchecked_threaded","take_threaded","take_unchecked","take_unchecked_from_slice","take_unchecked_threaded","time","to_arrow","to_dummies","to_float","to_owned","to_owned","to_physical_repr","to_string","try_add","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","u16","u32","u64","u8","unique","unique_stable","unpack","unstable","var","var_as_series","vzip","vzip","vzip","with_name","wrapping_trunc_div_scalar","zip_with","LhsNumOps","NumOpsDispatch","NumOpsDispatchInner","Output","_struct_arithmetic","add","add_to","add_to","checked","div","divide","divide","mul","multiply","multiply","rem","remainder","remainder","sub","subtract","subtract","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","checked_div","checked_div_num","checked_div_num","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip","ArrayBox","UnstableSeries","__clone_box","as_mut","as_ref","borrow","borrow_mut","clone","clone_into","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array"],"q":[[0,"polars"],[17,"polars::chunked_array"],[866,"polars::chunked_array::arithmetic"],[894,"polars::chunked_array::builder"],[1151,"polars::chunked_array::builder::list"],[1168,"polars::chunked_array::collect"],[1182,"polars::chunked_array::float"],[1184,"polars::chunked_array::from_iterator_par"],[1188,"polars::chunked_array::iterator"],[1258,"polars::chunked_array::iterator::par"],[1260,"polars::chunked_array::object"],[1331,"polars::chunked_array::object::builder"],[1354,"polars::chunked_array::object::registry"],[1382,"polars::chunked_array::ops"],[1582,"polars::chunked_array::ops::arity"],[1617,"polars::chunked_array::ops::float_sorted_arg_max"],[1619,"polars::chunked_array::ops::gather"],[1622,"polars::chunked_array::ops::search_sorted"],[1651,"polars::chunked_array::ops::sort"],[1658,"polars::chunked_array::ops::sort::arg_bottom_k"],[1659,"polars::chunked_array::ops::sort::arg_sort_multiple"],[1666,"polars::chunked_array::ops::sort::options"],[1679,"polars::chunked_array::temporal"],[1686,"polars::chunked_array::temporal::conversion"],[1689,"polars::datatypes"],[3028,"polars::datatypes::categorical"],[3045,"polars::datatypes::categorical::revmap"],[3051,"polars::datatypes::categorical::string_cache"],[3070,"polars::docs"],[3073,"polars::error"],[3159,"polars::error::PolarsError"],[3163,"polars::error::constants"],[3166,"polars::frame"],[3421,"polars::frame::explode"],[3450,"polars::frame::group_by"],[3685,"polars::frame::group_by::GroupByMethod"],[3686,"polars::frame::group_by::GroupsProxy"],[3688,"polars::frame::group_by::aggregations"],[3701,"polars::frame::group_by::expr"],[3704,"polars::frame::row"],[3811,"polars::functions"],[3813,"polars::prelude"],[8677,"polars::prelude::AggExpr"],[8684,"polars::prelude::BooleanFunction"],[8687,"polars::prelude::DslPlan"],[8738,"polars::prelude::Expr"],[8772,"polars::prelude::FunctionExpr"],[8792,"polars::prelude::GroupByMethod"],[8793,"polars::prelude::GroupsProxy"],[8795,"polars::prelude::LiteralValue"],[8798,"polars::prelude::PolarsError"],[8802,"polars::prelude::aggregations"],[8815,"polars::prelude::arity"],[8850,"polars::prelude::array"],[8869,"polars::prelude::binary"],[8885,"polars::prelude::cat"],[8886,"polars::prelude::chunkedarray"],[8987,"polars::prelude::chunkedarray::string"],[9025,"polars::prelude::chunkedarray::string::infer"],[9055,"polars::prelude::cloud"],[9102,"polars::prelude::cloud::options"],[9110,"polars::prelude::datatypes"],[9374,"polars::prelude::datatypes::categorical"],[9391,"polars::prelude::datatypes::categorical::revmap"],[9397,"polars::prelude::datatypes::categorical::string_cache"],[9401,"polars::prelude::datetime"],[9404,"polars::prelude::default_arrays"],[9410,"polars::prelude::dt"],[9462,"polars::prelude::expr"],[9465,"polars::prelude::fixed_size_list"],[9485,"polars::prelude::float_sorted_arg_max"],[9487,"polars::prelude::function_expr"],[9572,"polars::prelude::function_expr::BooleanFunction"],[9575,"polars::prelude::function_expr::FunctionExpr"],[9595,"polars::prelude::function_expr::cat"],[9597,"polars::prelude::function_expr::pow"],[9601,"polars::prelude::function_expr::rolling"],[9637,"polars::prelude::gather"],[9640,"polars::prelude::mode"],[9641,"polars::prelude::nan_propagating_aggregate"],[9645,"polars::prelude::null"],[9675,"polars::prelude::search_sorted"],[9681,"polars::prelude::series"],[9703,"polars::prelude::slice"],[9706,"polars::prelude::sort"],[9713,"polars::prelude::sort::arg_bottom_k"],[9714,"polars::prelude::sort::arg_sort_multiple"],[9721,"polars::prelude::sort::options"],[9734,"polars::prelude::strings"],[9788,"polars::prelude::udf"],[9794,"polars::prelude::utf8"],[9798,"polars::series"],[10199,"polars::series::arithmetic"],[10220,"polars::series::arithmetic::checked"],[10226,"polars::series::ops"],[10252,"polars::series::unstable"],[10276,"dyn_clone::sealed"],[10277,"num_traits"],[10278,"num_traits::cast"],[10279,"core::result"],[10280,"core::option"],[10281,"polars_arrow::array"],[10282,"alloc::boxed"],[10283,"core::iter::traits::iterator"],[10284,"polars_core::chunked_array::list::iterator"],[10285,"core::ops::function"],[10286,"core::marker"],[10287,"alloc::borrow"],[10288,"core::ops::function"],[10289,"core::slice::iter"],[10290,"core::iter::adapters::map"],[10291,"alloc::vec"],[10292,"core::iter::traits::double_ended"],[10293,"polars_arrow::offset"],[10294,"core::iter::traits::collect"],[10295,"core::fmt"],[10296,"core::fmt"],[10297,"polars_core::chunked_array::from_iterator"],[10298,"core::convert"],[10299,"core::borrow"],[10300,"polars_arrow::bitmap::immutable"],[10301,"rayon::iter"],[10302,"core::marker"],[10303,"polars_arrow::trusted_len"],[10304,"core::iter::traits::exact_size"],[10305,"bitflags::iter"],[10306,"bitflags::iter"],[10307,"rayon::iter"],[10308,"core::marker"],[10309,"polars_utils::hashing"],[10310,"ndarray::data_repr"],[10311,"ndarray::dimension::dim"],[10312,"ndarray"],[10313,"ndarray"],[10314,"core::any"],[10315,"core::ops::function"],[10316,"core::clone"],[10317,"polars_core::series::implementations::null"],[10318,"polars_arrow::array::boolean"],[10319,"polars_arrow::array::fixed_size_list"],[10320,"core::any"],[10321,"polars_arrow::bitmap::utils::zip_validity"],[10322,"core::hash"],[10323,"core::error"],[10324,"polars_arrow::array::primitive"],[10325,"polars_row::row"],[10326,"chrono::naive::datetime"],[10327,"chrono_tz::timezones"],[10328,"chrono::naive::time"],[10329,"bytemuck::zeroable"],[10330,"core::convert"],[10331,"polars_arrow::types"],[10332,"chrono::time_delta"],[10333,"chrono::naive::date"],[10334,"smartstring::config"],[10335,"smartstring"],[10336,"core::cmp"],[10337,"polars_arrow::datatypes::physical_type"],[10338,"planus::errors"],[10339,"regex::error"],[10340,"alloc::collections"],[10341,"simdutf8::basic"],[10342,"std::io::error"],[10343,"core::fmt"],[10344,"core::ops::range"],[10345,"polars_utils::idx_vec"],[10346,"rayon::iter::plumbing"],[10347,"polars_plan::logical_plan::aexpr"],[10348,"core::iter::adapters::copied"],[10349,"core::iter::adapters::zip"],[10350,"polars_utils::float"],[10351,"polars_arrow::types::native"],[10352,"polars_utils::arena"],[10353,"polars_plan::logical_plan::alp"],[10354,"polars_utils::arena"],[10355,"core::alloc"],[10356,"polars_plan::logical_plan::visitor"],[10357,"std::io"],[10358,"std::os::fd::owned"],[10359,"std::os::fd::owned"],[10360,"polars_io::predicates"],[10361,"core::mem::maybe_uninit"],[10362,"polars_io::csv::write::writer"],[10363,"std::io"],[10364,"polars_io::parquet::write::batched_writer"],[10365,"hashbrown::map"],[10366,"core::cmp"],[10367,"std::path"],[10368,"core::default"],[10369,"polars_parquet::parquet::metadata::row_metadata"],[10370,"polars_plan::dot"],[10371,"alloc::sync"],[10372,"core::iter::traits::collect"],[10373,"polars_lazy::physical_plan::state"],[10374,"crossterm::command"],[10375,"polars_io::predicates"],[10376,"polars_plan::dsl::function_expr::struct_"],[10377,"polars_plan::dsl::function_expr::strings"],[10378,"polars_plan::dsl::function_expr::binary"],[10379,"polars_plan::dsl::function_expr::datetime"],[10380,"polars_plan::dsl::function_expr::range"],[10381,"polars_plan::dsl::function_expr::array"],[10382,"polars_plan::dsl::function_expr::list"],[10383,"alloc::ffi::c_str"],[10384,"core::ffi::c_str"],[10385,"alloc::borrow"],[10386,"std::ffi::os_str"],[10387,"polars_arrow::array::growable::structure"],[10388,"polars_arrow::array::struct_::mutable"],[10389,"polars_arrow::buffer::immutable"],[10390,"polars_arrow::array::list"],[10391,"polars_plan::logical_plan::options"],[10392,"core::cmp"],[10393,"polars_io::mmap"],[10394,"polars_arrow::array::struct_::iterator"],[10395,"parquet_format_safe::parquet_format"],[10396,"polars_io::parquet::read::read_impl"],[10397,"core::pin"],[10398,"core::error"],[10399,"parquet_format_safe::thrift::varint::decode"],[10400,"std::io"],[10401,"std::io"],[10402,"core::alloc"],[10403,"core::num::nonzero"],[10404,"alloc::collections::btree::map"],[10405,"std::io"],[10406,"polars_arrow::array::utf8"],[10407,"polars_arrow::array::binary"]],"if":"``````{{}b}`````````{{}d}```````````{{cf}b{}}0{{{j{h}}}d}{{{j{c}}{j{c}}}{}l}{{{j{n}}{Ab{A`}}}}{{{j{n}}{j{n}}}}2{{{j{c}}e}{}l{AdAf}}{{{j{Ah}}Aj}}{{{j{Ah}}{j{Ah}}}}0{{{j{Al}}{j{Al}}}}340{{{j{c}}An}{{Bb{AnB`}}}Bd}{{{j{Al}}Bf}An}{{{j{h}}Bf}An}{{{j{n}}Bf}An}{{{j{Ah}}Bf}An}{{{j{{Bh{c}}}}Bf}AnBj}{{{j{Bl}}Bf}An}{{{j{c}}Bf}Anl}{{{j{Al}}}d}{{}Bn}{{{j{Al}}}{{C`{d}}}}{{{j{Bl}}}{{Cj{{`{{Ch{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}}}}}{{{j{h}}}{{Cj{{`{{Ch{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}}}}}{{{j{h}}Aj}{{Cj{{`{{Ch{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}}}}}{{{j{Bl}}Aj}{{Cj{{`{{Ch{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}}}}}64{{{j{c}}{j{c}}}b{{D`{}{{Cl{Cn}}}}}}{{{j{h}}c}{{j{h}}}{{Dd{{C`{An}}}{{Db{{C`{An}}}}}}Df}}{{{j{{Bh{c}}}}e}{{j{{Bh{c}}}}}Bj{{Dd{{C`{c}}}{{Db{{C`{c}}}}}}Df}}{{{j{c}}e}{{j{c}}}l{{Dd{C`}{{Db{C`}}}}Df}}{{{j{Al}}c}{{j{Al}}}{{Dd{{C`{d}}}{{Db{{C`{d}}}}}}Df}}{{{j{Ah}}c}{{j{Ah}}}{{Dd{{C`{Aj}}}{{Db{{C`{{Dh{Aj}}}}}}}}Df}}{{{j{n}}c}{{j{n}}}{{Dd{{C`{{Ab{A`}}}}}{{Db{{C`{{Dh{{Ab{A`}}}}}}}}}}Df}}{{{j{h}}c}{{j{h}}}{{Dl{Dj}{{Db{An}}}}}}{{{j{h}}e}{{j{g}}}{}{{Dl{{C`{Dj}}}{{Db{{C`{c}}}}}}Df}D`}{{{j{Bl}}e}{{j{g}}}{}{{Dl{{C`{Dj}}}{{Db{{C`{c}}}}}}Df}D`}{{{j{Bl}}c}{{j{Bl}}}{{Dl{Dj}{{Db{An}}}}}}{{{j{Dn}}c}An{{Dd{An}{{Db{An}}}}}}{{{j{E`}}c}An{{Dd{An}{{Db{An}}}}}}{{{j{c}}g}{{j{i}}}D`{}{{Dl{C`}{{Db{{C`{e}}}}}}}D`}{{{j{c}}e}{{j{c}}}l{{Dd{}{{Db{}}}}Df}}{{{j{n}}Dd}{{j{n}}}}{{{j{c}}Dd}{{j{c}}}l}{{{j{Ah}}Dd}{{j{Ah}}}}{{{j{Al}}Dd}{{j{Al}}}}{{{j{Al}}Dd}{{j{c}}}D`}{{{j{Ah}}Dd}{{j{c}}}D`}{{{j{c}}Dd}{{j{e}}}lD`}{{{j{n}}Dd}{{j{c}}}D`}{{{j{n}}c}{{j{n}}}{{Dl{{Ab{A`}}}{{Db{{Ab{A`}}}}}}}}{{{j{c}}e}bl{{Dd{}{{Db{}}}}Df}}{{{j{Ah}}c}{{j{Ah}}}{{Dl{Aj}{{Db{Aj}}}}}}{{{j{c}}Ebg}{{j{i}}}D`{}{{Dl{}{{Db{e}}}}}D`}{{{j{Ah}}c}{{j{Ah}}}{{Dl{AjEd}}}}{{{j{h}}Dd}{{Bb{{j{h}}B`}}}}{{{j{Bl}}Dd}{{Bb{{j{Bl}}B`}}}}{{{j{Ah}}e{Ab{c}}}b{}{{Dd{{C`{Aj}}c}{{Db{c}}}}}}{{{j{n}}e{Ab{c}}}b{}{{Dd{{C`{{Ab{A`}}}}c}{{Db{c}}}}}}{{{j{Al}}e{Ab{c}}}b{}{{Dd{{C`{d}}c}{{Db{c}}}}}}{{{j{{Bh{c}}}}g{Ab{e}}}bBj{}{{Dd{{C`{c}}e}{{Db{e}}}}}}{{{j{c}}g{Ab{e}}}bl{}{{Dd{C`e}{{Db{e}}}}}}{{{j{h}}e{Ab{c}}}b{}{{Dd{{C`{An}}c}{{Db{c}}}}}}{{{j{{Bh{c}}}}e}{{j{{Bh{c}}}}}Bj{{Dd{c}{{Db{c}}}}Df}}{{{j{Al}}c}{{j{Al}}}{{Dd{d}{{Db{d}}}}Df}}{{{j{Ah}}c}{{j{Ah}}}{{Dd{Aj}{{Db{{Dh{Aj}}}}}}Df}}{{{j{c}}e}{{j{c}}}l{{Dd{}{{Db{}}}}Df}}{{{j{n}}c}{{j{n}}}{{Dd{{Ab{A`}}}{{Db{{Dh{{Ab{A`}}}}}}}}Df}}{{{j{h}}c}{{j{h}}}{{Dd{An}{{Db{An}}}}Df}}{{{j{c}}g}{{j{i}}}D`{}{{Dl{}{{Db{e}}}}}D`}{{{j{Ah}}Ef}{{j{Eh}}}}{{{j{n}}Ef}{{j{Eh}}}}{{{j{Ej}}Ef}{{j{Eh}}}}{{{j{c}}Ef}{{j{Eh}}}l}{{{j{Al}}Ef}{{j{Eh}}}}{{{j{c}}{Ab{An}}El}{{Bb{{j{Eh}}B`}}}l}{{{j{n}}{Ab{An}}El}{{Bb{{j{Eh}}B`}}}}{{{j{Ej}}{Ab{An}}El}{{Bb{{j{Eh}}B`}}}}{{{j{Al}}{Ab{An}}El}{{Bb{{j{Eh}}B`}}}}{{{j{Ah}}{Ab{An}}El}{{Bb{{j{Eh}}B`}}}}{{{j{Ah}}}{{Bb{{j{Eh}}B`}}}}{{{j{Al}}}{{Bb{{j{Eh}}B`}}}}{{{j{{Bh{c}}}}}{{Bb{{j{Eh}}B`}}}Bj}{{{j{c}}}{{Bb{{j{Eh}}B`}}}l}{{{j{n}}}{{Bb{{j{Eh}}B`}}}}`{{{j{Bl}}}{{j{Bl}}}}{{{j{n}}}{{j{n}}}}{{{j{Ah}}}{{j{n}}}}{{{j{h}}}{{j{h}}}}{{{j{c}}}{{j{c}}}D`}{{{j{c}}}EbD`}{{{j{Ah}}}{{j{Ah}}}}0{{{j{h}}{j{c}}{j{e}}g}{{j{h}}}D`D`{{Dl{{C`{Dj}}C`C`}{{Db{{C`{An}}}}}}}}{{{j{c}}{j{c}}}{}En}{{{j{Al}}{j{Al}}}}0{{BnBn}Bn}{{BnBn}b}32210{BnA`}033421{ce{}{}}00000``{{{j{Ah}}Eb}{{Bb{AnB`}}}}{{{j{Al}}Eb}{{Bb{AnB`}}}}{{{j{Bl}}Eb}{{Bb{AnB`}}}}{{{j{h}}Eb}{{Bb{AnB`}}}}{{{j{n}}Eb}{{Bb{AnB`}}}}{{{j{c}}Eb}{{Bb{AnB`}}}l}{{{j{Ej}}Eb}{{Bb{AnB`}}}}{{{j{c}}e}{{j{g}}}l{{Dd{}{{Db{}}}}Df}l}7346521{{{j{c}}An}{{Bb{AnB`}}}F`}{{{j{c}}e}{{Bb{AnB`}}}F`Af}{{{j{c}}}{{Fh{{Fb{{Cf{Cd}}}}{Ff{{Cf{Cd}}}{{Db{Fd}}}}}}}D`}{{{j{c}}}{{Fj{{Cf{Cd}}}}}D`}0{{{j{c}}}{{j{c}}}D`}0{BnBn}{{ce}b{}{}}0``1{{{j{c}}}{{Bb{AbB`}}}l}{{BnBn}d}{{{j{c}}}{{`{Fl}}}l}{{}{{j{c}}}D`}{{}Bn}{Fdc{}}00000{{BnBn}Bn}{{{j{c}}{j{c}}}{}l}0{{{j{c}}e}{}l{AdAf}}0{{{j{c}}An}{{Bb{AnB`}}}Bd}{{{j{c}}}bD`}{Fdb}00{{{j{c}}}EbD`}8;{{{j{n}}{j{n}}}{{j{Al}}}}{{{j{h}}{j{h}}}{{j{Al}}}}{{{j{Ah}}Aj}{{j{Al}}}}{{{j{c}}{j{c}}}{{j{Al}}}l}{{{j{c}}e}{{j{Al}}}lAf}{{{j{Al}}{j{Al}}}{{j{Al}}}}{{{j{n}}{Ab{A`}}}{{j{Al}}}}{{{j{Bl}}{j{Bl}}}{{j{Al}}}}{{{j{Ah}}{j{Ah}}}{{j{Al}}}}485372061{{{j{Bl}}}{{Bb{{Gb{An{G`{Fn}}}}B`}}}}{{{j{h}}}{{Bb{{Gb{An{G`{Fn}}}}B`}}}}{{{j{Ah}}}{{Bb{{Gb{An{G`{Fn}}}}B`}}}}{{{j{c}}{j{c}}}bl}{{Bnc}b{{Gd{}{{Cb{Bn}}}}}}{{{j{n}}{Ab{A`}}}{{Bb{{j{n}}B`}}}}{{{j{Al}}d}{{Bb{{j{Al}}B`}}}}{{{j{c}}}{{Bb{{j{c}}B`}}}l}{{{j{n}}{j{Al}}}{{Bb{{j{n}}B`}}}}{{{j{c}}{j{Al}}}{{Bb{{j{c}}B`}}}l}{{{j{Al}}{j{Al}}}{{Bb{{j{Al}}B`}}}}{{{j{{Bh{c}}}}{j{Al}}}{{Bb{{j{{Bh{c}}}}B`}}}Bj}{{{j{Ah}}{j{Al}}}{{Bb{{j{Ah}}B`}}}}{{{j{Bl}}{j{Al}}}{{Bb{{j{Bl}}B`}}}}{{{j{Ej}}{j{Al}}}{{Bb{{j{Ej}}B`}}}}{{{j{h}}{j{Al}}}{{Bb{{j{h}}B`}}}}{{{j{c}}}{{C`{Fd}}}D`}`{{{j{Ah}}Gf}{{Bb{bGh}}}}{{{j{{Bh{c}}}}Gf}{{Bb{bGh}}}Bj}{{{j{Bl}}Gf}{{Bb{bGh}}}}{{{j{c}}Gf}{{Bb{bGh}}}l}{{{j{h}}Gf}{{Bb{bGh}}}}{{{j{Al}}Gf}{{Bb{bGh}}}}{{{j{n}}Gf}{{Bb{bGh}}}}{{BnGf}{{Bb{bGh}}}}0000{{{j{c}}e}bD`{{Dl{C`}}}}{{{j{Bl}}c}b{{Dl{{C`{Dj}}}}}}{{{j{h}}c}b{{Dl{{C`{Dj}}}}}}{c{{j{e}}}Cd{{D`{}{{Gj{c}}}}}}{cc{}}00{A`{{C`{Bn}}}}{A`Bn}00{{Ajc}{{j{e}}}Gd{{D`{}{{Gj{}}}}D`}}{{{j{c}}e}{{j{c}}}{{D`{}{{Gj{}}}}D`}Gd}{{Aj{Fj{{Cf{Cd}}}}}{{j{c}}}D`}{{Aj{Fj{{Cf{Cd}}}}Eb}{{j{c}}}D`}{g{{Bb{ic}}}{}{}{{Gl{c}{{Cb{e}}}}}{}}0{c{{j{h}}}{{Gd{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}{e{{j{n}}}{{Gn{{Ab{A`}}}}}{{Gd{}{{Cb{c}}}}}}{e{{j{{Bh{c}}}}}Bj{{Gd{}{{Cb{{C`{c}}}}}}}}{e{{j{Ah}}}{{H`{Aj}}}{{Gd{}{{Cb{{C`{c}}}}}}}}{c{{j{Al}}}{{Gd{}{{Cb{d}}}}}}{c{{j{h}}}{{Gd{}{{Cb{{C`{An}}}}}}}}{e{{j{n}}}{{H`{{Ab{A`}}}}}{{Gd{}{{Cb{{C`{c}}}}}}}}{e{{j{h}}}{{Hb{An}}}{{Gd{}{{Cb{c}}}}}}{c{{j{e}}}{{Gd{}{{Cb{C`}}}}}l}{e{{j{Ah}}}{{Gn{Aj}}}{{Gd{}{{Cb{c}}}}}}{c{{j{Al}}}{{Gd{}{{Cb{{C`{d}}}}}}}}{c{{j{e}}}{{Gd{}{{Cb{{Gb{Fj{C`{Hd}}}}}}}}}l}{cBn{{Gd{}{{Cb{Bn}}}}}}{{Ajc}{{j{Al}}}{{Ch{}{{Cb{{C`{d}}}}}}}}{{Aje}{{j{n}}}{{H`{{Ab{A`}}}}}{{Ch{}{{Cb{{C`{c}}}}}}}}{{Aje}{{j{Ah}}}{{H`{Aj}}}{{Ch{}{{Cb{{C`{c}}}}}}}}{{Ajc}{{j{e}}}{{Ch{}{{Cb{C`}}}}}l}{{Aje}{{j{{Bh{c}}}}}Bj{{Ch{}{{Cb{{C`{c}}}}}}}}={e{{j{Ej}}}{{H`{{Ab{A`}}}}}{{Gd{}{{Cb{{C`{c}}}}}}}}<{e{{j{{Bh{c}}}}}Bj{{Gd{}{{Cb{{C`{c}}}}}}}}{e{{j{Ah}}}{{H`{Aj}}}{{Gd{}{{Cb{{C`{c}}}}}}}}{e{{j{n}}}{{Gn{{Ab{A`}}}}}{{Gd{}{{Cb{c}}}}}}=>{c{{j{h}}}{{Gd{}{{Cb{{C`{An}}}}}}}}={e{{j{Ej}}}{{Gn{{Ab{A`}}}}}{{Gd{}{{Cb{c}}}}}}={{Aje}{{j{{Bh{c}}}}}Bj{{Ch{}{{Cb{c}}}}}}{{Ajc}{{j{Al}}}{{Ch{}{{Cb{d}}}}}}{{Aje}{{j{Ah}}}{{H`{Aj}}}{{Ch{}{{Cb{c}}}}}}{{Aje}{{j{n}}}{{H`{{Ab{A`}}}}}{{Ch{}{{Cb{c}}}}}}{{Ajc}{{j{e}}}{{Ch{}{{Cb{}}}}}l}`{Aj{{C`{Bn}}}}{c{{j{e}}}{{Hf{}{{Cb{C`}}}}}l}{e{{j{n}}}{{H`{{Ab{A`}}}}HhHj}{{Hf{}{{Cb{{C`{c}}}}}}}}{c{{j{h}}}{{Hf{}{{Cb{{C`{An}}}}}}}}{c{{j{Al}}}{{Hf{}{{Cb{d}}}}}}{e{{j{n}}}{{Gn{{Ab{A`}}}}HhHjHl}{{Hf{}{{Cb{c}}}}}}{e{{j{Ah}}}{{H`{Aj}}HhHj}{{Hf{}{{Cb{{C`{c}}}}}}}}{c{{j{Al}}}{{Hf{}{{Cb{{C`{d}}}}}}}}{e{{j{Ah}}}{{Gn{Aj}}HhHjHl}{{Hf{}{{Cb{c}}}}}}{{cAjEb}{{j{h}}}{{Hf{}{{Cb{{C`{An}}}}}}}}{{Aj{Ab{c}}}{{j{n}}}{{H`{{Ab{A`}}}}}}{{AjAb}{{j{c}}}l}{{Aj{Ab{d}}}{{j{Al}}}}{{Aj{Ab{c}}}{{j{Ah}}}{{H`{Aj}}}}{{Aj{Ab{c}}}{{j{{Bh{c}}}}}Bj}{{Aj{Ab{{C`{d}}}}}{{j{Al}}}}{{Aj{Ab{C`}}}{{j{c}}}l}{{Aj{Ab{{C`{c}}}}}{{j{{Bh{c}}}}}Bj}{{Aj{Ab{{C`{c}}}}}{{j{n}}}{{H`{{Ab{A`}}}}}}{{Aj{Ab{{C`{c}}}}}{{j{Ah}}}{{H`{Aj}}}}{c{{j{e}}}{{Hn{}{{Cb{C`}}}}}l}{c{{j{Al}}}{{Hn{}{{Cb{{C`{d}}}}}}}}{{AjFj}{{j{c}}}l}{{AjFj{C`{Hd}}}{{j{c}}}l}{{AjAjFd}{{j{Ah}}}}{{Aj{Ab{A`}}Fd}{{j{Ej}}}}{{AjFd}{{j{c}}}l}{{AjAnFd}{{j{h}}}}{{AjAnFd}{{j{Bl}}}}{{AjcFd}{{j{{Bh{c}}}}}Bj}{{AjdFd}{{j{Al}}}}{{Aj{Ab{A`}}Fd}{{j{n}}}}{{AjFd}{{j{Al}}}}{{AjFd}{{j{Bl}}}}7{{AjFd}{{j{{Bh{c}}}}}Bj}{{AjFd}{{j{Ej}}}}{{AjFd}{{j{n}}}}{{AjFd}{{j{h}}}}{{AjFd}{{j{Ah}}}}{{{j{c}}Fd}{{j{c}}}D`}{{AjFdEb}{{j{h}}}}{{AjFdEbFd}{{j{Bl}}}}{{{j{c}}Fd}C`D`}{{{j{n}}Fd}{{Bb{I`B`}}}}{{{j{Ej}}Fd}{{Bb{I`B`}}}}{{{j{Ah}}Fd}{{Bb{I`B`}}}}{{{j{Bl}}Fd}{{Bb{I`B`}}}}{{{j{c}}Fd}{{Bb{I`B`}}}l}{{{j{Al}}Fd}{{Bb{I`B`}}}}{{{j{h}}Fd}{{Bb{I`B`}}}}{{{j{{Bh{c}}}}Fd}{{Bb{I`B`}}}Bj}{{{j{Ah}}Fd}I`}{{{j{h}}Fd}I`}{{{j{c}}Fd}I`l}{{{j{Bl}}Fd}I`}{{{j{Al}}Fd}I`}{{{j{Ej}}Fd}I`}{{{j{{Bh{c}}}}Fd}I`Bj}{{{j{n}}Fd}I`}{{{j{Bl}}Fd}{{C`{An}}}}{{{j{h}}Fd}{{C`{An}}}}{{{j{c}}}BnD`}{{{j{h}}}An}{{{j{Bl}}}An}{{{j{{Bh{c}}}}Fd}{{C`{Ib}}}Bj}0{BnId}{{{j{c}}Fd}C`D`}{{{j{Ej}}}Fd}{{{j{Bl}}}Fd}{{{j{h}}}Fd}{{{j{Ah}}}Fd}{{{j{Ah}}dd}{{Bb{BfB`}}}}{{{j{Ej}}dd}{{Bb{BfB`}}}}{{{j{{Bh{c}}}}dd}{{Bb{BfB`}}}Bj}{{{j{n}}dd}{{Bb{BfB`}}}}{{{j{c}}dd}{{Bb{BfB`}}}l}{{{j{Al}}dd}{{Bb{BfB`}}}}{{{j{Bl}}dd}{{Bb{BfB`}}}}{{{j{h}}dd}{{Bb{BfB`}}}}{{{j{c}}FddFd}BfEn}{{{j{c}}e}{{j{Al}}}lAf}{{{j{Ah}}{j{Ah}}}{{j{Al}}}}{{{j{n}}{Ab{A`}}}{{j{Al}}}}{{{j{Bl}}{j{Bl}}}{{j{Al}}}}{{{j{Al}}{j{Al}}}{{j{Al}}}}{{{j{Ah}}Aj}{{j{Al}}}}{{{j{n}}{j{n}}}{{j{Al}}}}{{{j{h}}{j{h}}}{{j{Al}}}}{{{j{c}}{j{c}}}{{j{Al}}}l}267504138{{{j{c}}}dD`}{{{j{c}}{C`{Fd}}}{{j{c}}}D`}{{}Fd}00{{FdIf{C`{Ih}}}{{j{c}}}l}{{{j{h}}}Eb}{{{j{Bl}}}Eb}{{BnBn}b}{{BnBn}Bn}{{BnBn}d}{ce{}{}}00{{{j{Ij}}}{{In{IlIj}}}}{{{j{J`}}Jb{C`{Ed}}}{{In{JdJ`}}}}{{{j{Jf}}{C`{Fd}}Fd}{{Bb{{In{JhJf}}B`}}}}{{{j{Jf}}{C`{Fd}}Fd}{{In{JhJf}}}}{{{j{J`}}Jb}{{In{JjJ`}}}}{{{j{Ah}}}}{{{j{Bl}}}}{{{j{n}}}}{{{j{h}}}}{{{j{c}}}{}l}{{{j{Ej}}}}{{{j{{Bh{c}}}}}{}Bj}{{{j{Al}}}}{Bn}{{{j{c}}}{{`{HhHjJlFlHn}}}l}{{{j{c}}}AnD`}{{{j{Jf}}}An}{{{j{J`}}}{{In{JnJ`}}}}{Bnd}{{{j{c}}}dD`}1{{{j{c}}}{{j{Al}}}K`}000{{{j{c}}}{{j{Al}}}D`}02{{{j{c}}}IdD`}{{{j{c}}}{{`{Kb}}}D`}{Bn{{Kd{Bn}}}}{Bn{{Kf{Bn}}}}{{{j{c}}}{{Fh{{Fb{{Cf{Cd}}}}{Ff{{Cf{Cd}}}{{Db{{C`{Hd}}}}}}}}}D`}`{{{j{c}}}C`D`}{{{j{c}}}{{C`{Fd}}}D`}{{{j{c}}}{{Kh{c}}}D`}{{{j{c}}{j{c}}}{}l}0{{{j{c}}}{}l}000{{{j{c}}}FdD`}{{{j{c}}e}{{j{c}}}l{AdKj}}00{{{j{c}}Fd}{{j{c}}}D`}{{{j{c}}{j{c}}}{{j{Al}}}l}{{{j{Al}}{j{Al}}}{{j{Al}}}}{{{j{h}}{j{h}}}{{j{Al}}}}{{{j{n}}{Ab{A`}}}{{j{Al}}}}{{{j{Ah}}{j{Ah}}}{{j{Al}}}}{{{j{n}}{j{n}}}{{j{Al}}}}{{{j{Bl}}{j{Bl}}}{{j{Al}}}}{{{j{Ah}}Aj}{{j{Al}}}}{{{j{c}}e}{{j{Al}}}lAf}472583610{{{j{Al}}}{{C`{d}}}}{{{j{c}}}C`l}{{{j{Ah}}}An}{{{j{n}}}An}{{{j{Al}}}An}{{{j{c}}}Anl}{{{j{Al}}}{{C`{Kl}}}}{{{j{c}}}{{C`{Kl}}}l}{{{j{c}}}{{C`{Kl}}}En}{{{j{Dn}}}{{C`{If}}}}{{{j{E`}}}{{C`{Kl}}}}{{{j{c}}}AnEn}{{{j{Dn}}}An}{{{j{E`}}}An}<=:89;{{{j{c}}}{{C`{Gb}}}l}{{AjAb}{{j{c}}}l}{{Aj{Ab{A`}}FdFd}{{j{Al}}}}{{{j{c}}e}{}l{AdAf}}{{{j{c}}{j{c}}}{}l}01{{{j{c}}An}{{Bb{AnB`}}}Bd}{{{j{c}}}{{Bb{FdB`}}}l}{{{j{n}}}{{Bb{FdB`}}}}{{{j{Ah}}}{{Bb{FdB`}}}}{{{j{c}}}AjD`}{{Aj{Kn{Ih}}}{{j{L`}}}}{{Ajc}{{j{Lb}}}{{H`{{Ab{{C`{Ld}}}}}}}}{{Ajc}{{j{Ah}}}{{H`{{Ab{{C`{Aj}}}}}}}}{{Aj{Kn{Lf}}}{{j{Ij}}}}{{Ajc}{{j{J`}}}{{H`{{Ab{Fn}}}}}}{{Ajc}{{j{Lh}}}{{H`{{Ab{{C`{Lj}}}}}}}}{{Aj{Kn{Ll}}}{{j{Eh}}}}{{Ajc}{{j{Ah}}}{{H`{{Ab{{Dh{Aj}}}}}}}}{{Ajc}{{j{J`}}}{{H`{{Ab{{C`{Fn}}}}}}}}{{Ajc}{{j{n}}}{{H`{{Ab{{C`{{Fj{A`}}}}}}}}}}{{Ajc}{{j{E`}}}{{H`{{Ab{Kl}}}}}}{{Ajc}{{j{Ln}}}{{H`{{Ab{M`}}}}}}{{Ajc}{{j{Mb}}}{{H`{{Ab{A`}}}}}}{{Ajc}{{j{Ah}}}{{H`{{Ab{{C`{Ed}}}}}}}}{{Ajc}{{j{Mb}}}{{H`{{Ab{{C`{A`}}}}}}}}{{Ajc}{{j{L`}}}{{H`{{Ab{Ih}}}}}}{{Aj{Ab{c}}}{{j{{Bh{c}}}}}Bj}{{Ajc}{{j{Lh}}}{{H`{{Ab{Lj}}}}}}{{Ajc}{{j{n}}}{{H`{{Ab{{Dh{{Ab{A`}}}}}}}}}}{{Ajc}{{j{Lb}}}{{H`{{Ab{Ld}}}}}}{{Ajc}{{j{L`}}}{{H`{{Ab{{C`{Ih}}}}}}}}{{Ajc}{{j{Eh}}}{{H`{{Ab{Ll}}}}}}{{Aj{Kn{Fn}}}{{j{J`}}}}{{Ajc}{{j{Ah}}}{{H`{{Ab{Ed}}}}}}{{Ajc}{{j{Ah}}}{{H`{{Ab{Aj}}}}}}{{Ajc}{{j{Dn}}}{{H`{{Ab{{C`{If}}}}}}}}{{Ajc}{{j{Ij}}}{{H`{{Ab{Lf}}}}}}{{Ajc}{{j{Ah}}}{{H`{{Ab{{C`{{Dh{Aj}}}}}}}}}}{{Ajc}{{j{Ij}}}{{H`{{Ab{{C`{Lf}}}}}}}}{{Ajc}{{j{Eh}}}{{H`{{Ab{{C`{Ll}}}}}}}}{{Ajc}{{j{n}}}{{H`{{Ab{{C`{{Ab{A`}}}}}}}}}}{{Ajc}{{j{E`}}}{{H`{{Ab{{C`{Kl}}}}}}}}{{Ajc}{{j{n}}}{{H`{{Ab{{C`{{Dh{{Ab{A`}}}}}}}}}}}}{{Ajc}{{j{n}}}{{H`{{Ab{{Ab{A`}}}}}}}}{{Ajc}{{j{n}}}{{H`{{Ab{{Fj{A`}}}}}}}}{{Ajc}{{j{Al}}}{{H`{{Ab{d}}}}}}{{Ajc}{{j{Al}}}{{H`{{Ab{{C`{d}}}}}}}}{{Ajc}{{j{Dn}}}{{H`{{Ab{If}}}}}}{{Ajc}{{j{Ln}}}{{H`{{Ab{{C`{M`}}}}}}}}{{Aje}{{j{{Bh{c}}}}}Bj{{H`{{Ab{{C`{c}}}}}}}}{Aj{{j{{Bh{c}}}}}Bj}{{{j{Bl}}FdFd}{{j{Bl}}}}{{{j{Ej}}FdFd}{{j{Ej}}}}{{{j{Ah}}FdFd}{{j{Ah}}}}{{{j{c}}FdFd}{{j{c}}}l}{{{j{{Bh{c}}}}FdFd}{{j{{Bh{c}}}}}Bj}{{{j{h}}FdFd}{{j{h}}}}{{{j{Al}}FdFd}{{j{Al}}}}{{{j{n}}FdFd}{{j{n}}}}{{Aj{Fj{c}}}{{j{{Bh{c}}}}}Bj}{{Aj{Fj{c}}Hd}{{j{{Bh{c}}}}}Bj}{{AjFj}{{j{c}}}l}{{{j{c}}}{{j{c}}}K`}{{{j{Al}}}}0{BnBn}{{{j{h}}{j{h}}}{{j{Al}}}}{{{j{Ah}}Aj}{{j{Al}}}}{{{j{Ah}}{j{Ah}}}{{j{Al}}}}{{{j{n}}{Ab{A`}}}{{j{Al}}}}{{{j{c}}e}{{j{Al}}}lAf}{{{j{Bl}}{j{Bl}}}{{j{Al}}}}{{{j{Al}}{j{Al}}}{{j{Al}}}}{{{j{c}}{j{c}}}{{j{Al}}}l}{{{j{n}}{j{n}}}{{j{Al}}}}2{{{j{Bl}}{j{Bl}}}}5281796{{{j{c}}}FdD`}`{{{j{Bl}}}{{Bb{{G`{Fn}}B`}}}}{{{j{Ah}}}{{Bb{{G`{Fn}}B`}}}}{{{j{h}}}{{Bb{{G`{Fn}}B`}}}}`{{{j{h}}}{{`{{Md{}{{Cb{{C`{An}}}}}}}}}}{{{j{Ah}}}{{`{{Md{}{{Cb{{C`{Aj}}}}}}}}}}{{{j{h}}}{{`{Mf}}}}{{{j{Ah}}}{{`{Mf}}}}{{{j{c}}}Anl}{{{j{c}}}bD`}{{{j{Dn}}KlMh}{{Bb{{C`{If}}B`}}}}{{{j{E`}}KlMh}{{Bb{{C`{Kl}}B`}}}}{{{j{c}}KlMh}{{Bb{{C`{Kl}}B`}}}En}{{{j{c}}KlMh}{{Bb{AnB`}}}En}{{{j{Dn}}KlMh}{{Bb{AnB`}}}}{{{j{E`}}KlMh}{{Bb{AnB`}}}}{{AjFdKl}{{Bb{{j{Al}}B`}}}}{{AjFdKlKl}{{Bb{{j{c}}B`}}}l}{{AjFd}{{j{c}}}l}{{AjFdKlKl}{{j{c}}}l}{{{j{c}}}{{j{c}}}D`}{{{j{c}}}MjD`}{{{j{Eh}}}An}{{{j{Mb}}}An}{{{j{Lb}}}An}{{{j{E`}}}An}{{{j{Dn}}}An}{{{j{Ij}}}An}{{{j{Lh}}}An}{{{j{Ln}}}An}{{{j{L`}}}An}{{{j{J`}}}An}{{{j{h}}}An}:3192586407{{{j{c}}{j{c}}}{}l}{{{j{c}}e}{}l{AdAf}}10{{{j{c}}An}{{Bb{AnB`}}}Bd}{{BnBn}b}{{{j{c}}Aj}bD`}{{{j{n}}}{{j{n}}}}{{{j{{Bh{c}}}}}{{j{{Bh{c}}}}}Bj}{{{j{Ej}}}{{j{Ej}}}}{{{j{Al}}}{{j{Al}}}}{{{j{Ah}}}{{j{Ah}}}}{{{j{h}}}{{j{h}}}}{{{j{c}}}{{j{c}}}l}{{{j{Bl}}}{{j{Bl}}}}{{{j{c}}DdMl}{{Bb{AnB`}}}l}{{{j{c}}Fde}{{Bb{{j{c}}B`}}}K`{{Dl{{j{c}}}{{Db{C`}}}}}}{{{j{c}}Kldd{C`{Ih}}}{{Bb{{j{c}}B`}}}D`}{{{j{c}}Fddd{C`{Ih}}}{{Bb{{j{c}}B`}}}D`}{{{j{Ah}}{Ab{Ll}}c}{{Bb{AnB`}}}{{Gd{}{{Cb{{C`{Aj}}}}}}}}{{{j{c}}{Ab{Ll}}e}{{Bb{AnB`}}}Mn{{Gd{}{{Cb{C`}}}}}}{{{j{Al}}{Ab{Ll}}c}{{Bb{AnB`}}}{{Gd{}{{Cb{{C`{d}}}}}}}}{{{j{Al}}c{C`{d}}}{{Bb{{j{Al}}B`}}}{{Gd{}{{Cb{Ll}}}}}}{{{j{Ah}}c{C`{Aj}}}{{Bb{{j{Ah}}B`}}}{{Gd{}{{Cb{Ll}}}}}}{{{j{c}}eC`}{{Bb{{j{c}}B`}}}l{{Gd{}{{Cb{Ll}}}}}}{{{j{n}}c{C`{{Ab{A`}}}}}{{Bb{{j{n}}B`}}}{{Gd{}{{Cb{Ll}}}}}}{{{j{n}}ce}{{Bb{{j{n}}B`}}}{{Gd{}{{Cb{Ll}}}}}{{Dd{{C`{{Ab{A`}}}}}{{Db{{C`{{Fj{A`}}}}}}}}}}{{{j{c}}eg}{{Bb{{j{c}}B`}}}l{{Gd{}{{Cb{Ll}}}}}{{Dd{C`}{{Db{C`}}}}}}{{{j{Ah}}ce}{{Bb{{j{Ah}}B`}}}{{Gd{}{{Cb{Ll}}}}}{{Dd{{C`{Aj}}}{{Db{{C`{Ed}}}}}}}}{{{j{Al}}ce}{{Bb{{j{Al}}B`}}}{{Gd{}{{Cb{Ll}}}}}{{Dd{{C`{d}}}{{Db{{C`{d}}}}}}}}{{{j{c}}{j{Al}}C`}{{Bb{{j{c}}B`}}}l}{{{j{Ah}}{j{Al}}{C`{Aj}}}{{Bb{{j{Ah}}B`}}}}{{{j{Al}}{j{Al}}{C`{d}}}{{Bb{{j{Al}}B`}}}}{{{j{n}}{j{Al}}{C`{{Ab{A`}}}}}{{Bb{{j{n}}B`}}}}{{BnBnd}b}{{{j{h}}}b}{{{j{h}}Eb}b}{{{j{c}}Ll}bD`}{{{j{c}}Id}bD`}{{BnId}b}{{{j{c}}Fn}{{j{c}}}l}{{{j{Al}}Fn}{{j{Al}}}}{{{j{n}}Fn}{{j{n}}}}{{{j{Bl}}Fn}{{j{Bl}}}}{{{j{h}}Fn}{{j{h}}}}{{{j{{Bh{c}}}}Fn}{{j{{Bh{c}}}}}Bj}{{{j{Ej}}Fn}{{j{Ej}}}}{{{j{Ah}}Fn}{{j{Ah}}}}{{{j{Ah}}Fn{C`{Aj}}}{{j{Ah}}}}{{{j{n}}Fn{C`{{Ab{A`}}}}}{{j{n}}}}{{{j{h}}Fn{C`{An}}}{{j{h}}}}{{{j{{Bh{c}}}}Fn{C`{{Bh{c}}}}}{{j{{Bh{c}}}}}Bj}{{{j{Al}}Fn{C`{d}}}{{j{Al}}}}{{{j{Bl}}Fn{C`{An}}}{{j{Bl}}}}{{{j{c}}FnC`}{{j{c}}}l}{{{j{Ej}}Fn{C`{{Ab{A`}}}}}{{j{Ej}}}}{{{j{c}}}bD`}{{{j{c}}FnFd}{{j{c}}}D`}{{{j{c}}d}{{j{c}}}l}{{{j{Al}}d}{{j{Al}}}}{{{j{Ej}}d}{{j{Ej}}}}{{{j{n}}d}{{j{n}}}}{{{j{Ah}}d}{{j{Ah}}}}{{{j{c}}Ef}{{j{c}}}l}{{{j{Ej}}Ef}{{j{Ej}}}}{{{j{Ah}}Ef}{{j{Ah}}}}{{{j{Al}}Ef}{{j{Al}}}}{{{j{n}}Ef}{{j{n}}}}{{{j{c}}A`}{{C`{Kl}}}l}{{{j{c}}A`}AnEn}{{{j{Dn}}A`}An}{{{j{E`}}A`}An}{{{j{c}}{j{c}}}{}l}0{{{j{c}}e}{}l{AdAf}}0{{BnBn}Bn}{{BnBn}b}{{{j{c}}An}{{Bb{AnB`}}}Bd}{{{j{Al}}}{{C`{Ll}}}}{{{j{c}}}C`l}{{{j{Al}}}An}{{{j{n}}}An}{{{j{c}}}Anl}{{{j{Ah}}}An}8{{{j{c}}{C`{Fd}}}{{j{c}}}D`}{{{j{c}}e}{{Bb{{j{c}}B`}}}D`{{H`{{Ab{Ll}}}}N`}}{{{j{c}}{j{Eh}}}{{Bb{{j{c}}B`}}}D`}{{{j{c}}{Ab{Nb}}Id}{{j{c}}}D`}{{{j{c}}{Ab{Nb}}}{{j{c}}}D`}{{{j{n}}{j{Eh}}}{{j{n}}}}{{{j{c}}{j{Eh}}}{{j{c}}}{{D`{}{{Nd{Cn}}}}D`}}{{{j{n}}c}{{j{n}}}{{H`{{Ab{Ll}}}}N`}}{{{j{Ah}}c}{{j{Ah}}}{{H`{{Ab{Ll}}}}N`}}{{{j{c}}e}{{j{c}}}{{D`{}{{Nd{Cn}}}}D`}{{H`{{Ab{Ll}}}}N`}}{{{j{Ah}}{j{Eh}}}{{j{Ah}}}}`{{{j{c}}dNf}{{Fj{{Fj{Nh}}}}}D`}{{{j{c}}}{{j{c}}}K`}{{{j{Ah}}Fd}{{Bb{AnB`}}}}{{{j{h}}Eb}b}{{{j{Bl}}Eb}b}{{{j{h}}}{{Bb{{O`{Nj{Nn{{Nl{Fd}}}}}}B`}}}}{{{j{c}}}{{Bb{{O`{Ob{Nn{{Nl{Fd}}}}}}B`}}}l}{ce{}{}}0{{{j{n}}}{{j{Ah}}}}{{{j{c}}}{{Fj{C`}}}l}{{{j{c}}}{{Od{Fj{Fj{C`}}}}}l}{{BnBn}b}{{{j{c}}{j{c}}}{}l}0{{{j{c}}}{}l}000{{{j{h}}c}{{Bb{{j{h}}B`}}}{{Dl{Dj}{{Db{{Bb{AnB`}}}}}}}}{{{j{h}}e}{{Bb{{j{g}}B`}}}{}{{Dl{{C`{Dj}}}{{Db{{Bb{{C`{c}}B`}}}}}}Df}D`}{{{j{Bl}}e}{{Bb{{j{g}}B`}}}{}{{Dl{{C`{Dj}}}{{Db{{Bb{{C`{c}}B`}}}}}}Df}D`}{{{j{Bl}}c}{{Bb{{j{Bl}}B`}}}{{Dl{Dj}{{Db{{Bb{AnB`}}}}}}}}{{{j{Bl}}c}{{Bb{{j{h}}B`}}}{{Dl{Dj}{{Db{{Bb{AnB`}}}}}}}}{{{j{c}}i}{{Bb{{j{k}}g}}}D`{}{}{{Dl{C`}{{Db{{Bb{{C`{e}}g}}}}}}Df}D`}{{{j{c}}i}{{Bb{{j{k}}g}}}D`{}{}{{Dl{}{{Db{{Bb{eg}}}}}}}D`}{c{{Bb{e}}}{}{}}00{{Ajg}{{Bb{{j{i}}e}}}Cd{}{{Gd{}{{Cb{{Bb{ce}}}}}}}{{D`{}{{Gj{c}}}}D`}}111{{{j{h}}{j{c}}e}{{Bb{{j{h}}B`}}}D`{{Dl{{C`{Dj}}C`}{{Db{{Bb{{C`{An}}B`}}}}}}}}{cOf{}}00{{BnBn}Bn}{{{j{c}}}{{Bb{{j{c}}B`}}}l}{{{j{n}}}{{Bb{{j{n}}B`}}}}{{{j{Al}}}{{Bb{{j{Al}}B`}}}}{{{j{{Bh{c}}}}}{{Bb{{j{{Bh{c}}}}B`}}}Bj}{{{j{Ah}}}{{Bb{{j{Ah}}B`}}}}{{{j{c}}An}{{Bb{{j{c}}B`}}}D`}{{{j{c}}}bD`}{{{j{c}}Fd}{}D`}{{{j{c}}A`}{{C`{Kl}}}l}{{{j{E`}}A`}An}{{{j{c}}A`}AnEn}{{{j{Dn}}A`}An}{{{j{Lb}}Nf{Fj{Ih}}}{{Bb{bB`}}}}{{{j{Ej}}Nf{Fj{Ih}}}{{Bb{bB`}}}}{{{j{n}}Nf{Fj{Ih}}}{{Bb{bB`}}}}{{{j{Dn}}Nf{Fj{Ih}}}{{Bb{bB`}}}}{{{j{{Bh{c}}}}Nf{Fj{Ih}}}{{Bb{bB`}}}Bj}{{{j{E`}}Nf{Fj{Ih}}}{{Bb{bB`}}}}{{{j{Lh}}Nf{Fj{Ih}}}{{Bb{bB`}}}}{{{j{Jf}}Nf{Fj{Ih}}}{{Bb{bB`}}}}{{{j{L`}}Nf{Fj{Ih}}}{{Bb{bB`}}}}{{{j{Al}}Nf{Fj{Ih}}}{{Bb{bB`}}}}{{{j{Eh}}Nf{Fj{Ih}}}{{Bb{bB`}}}}{{{j{Ln}}Nf{Fj{Ih}}}{{Bb{bB`}}}}{{{j{J`}}Nf{Fj{Ih}}}{{Bb{bB`}}}}{{{j{Ij}}Nf{Fj{Ih}}}{{Bb{bB`}}}}{{{j{Mb}}Nf{Fj{Ih}}}{{Bb{bB`}}}}{{{j{Ah}}Nf{Fj{Ih}}}{{Bb{bB`}}}}{{{j{Lb}}Nf{Ab{Ih}}}{{Bb{bB`}}}}{{{j{E`}}Nf{Ab{Ih}}}{{Bb{bB`}}}}{{{j{Mb}}Nf{Ab{Ih}}}{{Bb{bB`}}}}{{{j{Al}}Nf{Ab{Ih}}}{{Bb{bB`}}}}{{{j{{Bh{c}}}}Nf{Ab{Ih}}}{{Bb{bB`}}}Bj}{{{j{Lh}}Nf{Ab{Ih}}}{{Bb{bB`}}}}{{{j{Jf}}Nf{Ab{Ih}}}{{Bb{bB`}}}}{{{j{Dn}}Nf{Ab{Ih}}}{{Bb{bB`}}}}{{{j{n}}Nf{Ab{Ih}}}{{Bb{bB`}}}}{{{j{L`}}Nf{Ab{Ih}}}{{Bb{bB`}}}}{{{j{Ah}}Nf{Ab{Ih}}}{{Bb{bB`}}}}{{{j{Eh}}Nf{Ab{Ih}}}{{Bb{bB`}}}}{{{j{Ln}}Nf{Ab{Ih}}}{{Bb{bB`}}}}{{{j{Ej}}Nf{Ab{Ih}}}{{Bb{bB`}}}}{{{j{Ij}}Nf{Ab{Ih}}}{{Bb{bB`}}}}{{{j{J`}}Nf{Ab{Ih}}}{{Bb{bB`}}}}{ce{}{}}00{{{j{Bl}}}Fd}{{Ajc}{{j{e}}}Cd{{D`{}{{Gj{c}}}}D`}}{{{j{c}}{Fj{{Cf{Cd}}}}}{{j{c}}}D`}{{{j{c}}Aj}{{j{c}}}D`}{{{Ab{Oh}}e}c{}{{Oj{{j{Eh}}}{{Db{c}}}}}}{{{j{c}}Id}{{j{c}}}D`}{{{j{c}}}{}l}0{{{j{c}}{j{c}}}{}l}011001111001111001111001111001111{{{j{h}}{j{c}}e}{{j{h}}}D`{{Dl{{C`{Dj}}C`}{{Db{{C`{An}}}}}}}}{{{j{Bl}}{j{c}}e}{{j{Bl}}}D`{{Dl{{C`{Dj}}C`}{{Db{{C`{An}}}}}}}}{{{j{c}}{j{Al}}{j{c}}}{{Bb{{j{c}}B`}}}D`}````{{{A@b{}{{Ol{c}}{On{e}}{A@`{g}}}}{A@b{}{{Ol{c}}{On{e}}{A@`{g}}}}}e{}{}{}}{{{A@b{}{{Ol{c}}{On{e}}{A@`{g}}}}c}e{}{}{}}{{c{A@b{}{{Ol{c}}{On{e}}{A@`{g}}}}}e{}{}{}}{{{A@b{}{{Ol{c}}{On{e}}{A@`{g}}}}{A@b{}{{Ol{c}}{On{e}}{A@`{g}}}}}g{}{}{}}{{{A@b{}{{Ol{c}}{On{e}}{A@`{g}}}}c}g{}{}{}}{{c{A@b{}{{Ol{c}}{On{e}}{A@`{g}}}}}g{}{}{}}{{{A@b{}{{Ol{c}}{On{e}}{A@`{g}}}}}e{}{}{}}65654654650654654````````````````{{cf}b{}}000{{A@dCd}b}{A@db}{A@fb}{{A@hc}b{{Ch{}{{Cb{{C`{d}}}}}}Hn}}{{{A@j{c}}e}bl{{Ch{}{{Cb{C`}}}}Hn}}{{{A@j{c}}e}bl{{Ch{}{{Cb{}}}}Hn}}{A@lb}{A@nb}65{AA`b}{AAbb}{A@hb}{AAdb}{{{A@j{c}}}bl}{{{AAf{c}}}b{AAhN`}}{AAjb}{AAlb}{{{AAn{c}}}bl}{{A@d{C`{Cd}}}b}{{A@d{C`{An}}}{{Bb{bB`}}}}{{A@l{C`{An}}}{{Bb{bB`}}}}{{{A@j{c}}{C`{Ab}}}bl}{{{AAf{c}}{C`{e}}}b{AAhN`}{{H`{c}}}}{{A@n{C`{c}}}b{}}{{A@lAn}{{Bb{bB`}}}}{{A@dAn}{{Bb{bB`}}}}{{A@fAn}{{Bb{bB`}}}}{{AA`An}{{Bb{bB`}}}}{{AAbAn}{{Bb{bB`}}}}{{A@hAn}{{Bb{bB`}}}}{{AAdAn}{{Bb{bB`}}}}{{{A@j{c}}An}{{Bb{bB`}}}l}{{{A@j{c}}Ab}bl}{{AA`c}b{{Ch{}{{Cb{{C`{Aj}}}}}}Hn}}{{AAbc}b{{Ch{}{{Cb{{C`{{Ab{A`}}}}}}}}Hn}}{{A@nc}b{}}{{{AAf{c}}e}b{AAhN`}{{H`{c}}}}{{AAjd}b}{{{AAn{c}}}bl}{{AA`c}b{{Ch{}{{Cb{Aj}}}}}}{{AAbc}b{{Ch{}{{Cb{{Ab{A`}}}}}}}}{ce{}{}}000000000000000000000`{{{AAf{c}}}{{AAf{c}}}{AAhN`}}{AAjAAj}{AAlAAl}{{{AAn{c}}}{{AAn{c}}}{AB`l}}{{ce}b{}{}}000{{}A@d}{{}A@f}{Fdc{}}000000000000000000000{Fdb}0000000000{AA`d}{AAbd}{A@hd}{{{A@j{c}}}dl}{A@ld}{AA`Mj}{AAbMj}{A@hMj}{{{A@j{c}}}Mjl}{A@lMj}{A@n{{j{c}}}D`}{A@d{{j{h}}}}{A@f{{j{h}}}}{AAd{{j{h}}}}{A@l{{j{h}}}}{{{AAf{{Ab{A`}}}}}{{j{n}}}}{{{AAf{Aj}}}{{j{Ah}}}}{AAj{{j{Al}}}}{AAlABb}{{{AAn{c}}}{{j{c}}}l}`{cc{}}0000000000{{Aje}ABd{}{{Ch{}{{Cb{{C`{c}}}}}}}}{{Aje}ABd{}{{Ch{}{{Cb{c}}}}}}{{Aj{Ab{c}}}ABd{}}{{Aj{Ab{{C`{c}}}}}ABd{}}{{EbFdFdAj}{{Bb{{Cf{A@l}}B`}}}}{{}Fd}0000000000{AA`{{Cf{Cd}}}}{AAb{{Cf{Cd}}}}{A@h{{Cf{Cd}}}}{{{A@j{c}}}{{Cf{Cd}}}l}{A@l{{Cf{Cd}}}}{ce{}{}}0000000000`{{AjFd{C`{Eb}}}A@d}{{AjFd{C`{Eb}}}A@f}{{AjFdFd}AA`}{{AjFdFd}AAb}{{AjFdFd}A@h}{{AjFd}AAd}{{AjFdFdEb}{{A@j{c}}}l}{{AjFd}{{AAf{c}}}{AAhN`}}{{AjFd}AAj}{{AjFd}AAl}{{AjFd}{{AAn{c}}}l}{{AjFdFdEbEb}{{A@j{c}}}l}{A@nb}{AAjb}{AAlb}{{{AAn{c}}}bl}{ce{}{}}000{c{{Bb{e}}}{}{}}000000000000000000000{cOf{}}000000000022222222222````````{A@lb}{{A@l{C`{An}}}{{Bb{bB`}}}}{{A@lAn}{{Bb{bB`}}}}`{A@ld}{A@lMj}{A@l{{j{h}}}}{{EbFdFdAj}{{Bb{{Cf{A@l}}B`}}}}{A@l{{Cf{Cd}}}}``{{ABfAj}{{j{c}}}D`}{{ABh{j{c}}}{{j{c}}}D`}10{{ABhAjEb}{{j{c}}}D`}0{{ABfAj}{{Bb{{j{c}}e}}}D`{}}{{ABh{j{c}}}{{Bb{{j{c}}e}}}D`{}}10{{ABhAjEb}{{Bb{{j{c}}e}}}D`{}}0`{ABjABj}``{{ABlAjEb}e{}{{ABn{c}}}}{{eAjEb}ABn{}{{Hf{}{{Cb{c}}}}}}`````{ce{}{}}0000000{Fdc{}}0000000{Fdb}000{cc{}}000{{}Fd}00044444444{AC`ACb}{{ACdEb}ACf}{ACbC`}{ACfC`}{AChC`}{{{ACj{c}}}C`Ch}32{{{ACj{c}}}C`Fl}`{ACb{{Gb{Fd{C`{Fd}}}}}}{ACf{{Gb{Fd{C`{Fd}}}}}}{{{ACj{c}}}{{Gb{Fd{C`{Fd}}}}}Ch}{c{{Bb{e}}}{}{}}0000000{cOf{}}000{ce{}{}}000``````{{cf}b{}}{e{{ACl{c}}}Bj{{Gd{}{{Cb{{C`{c}}}}}}}}{e{{ACl{c}}}Bj{{Gd{}{{Cb{c}}}}}}{{ACne}g{}{{Gd{}{{Cb{c}}}}}{}}0{IbAD`}{{{ACl{c}}}AD`Bj}066`{{{ACl{c}}}{{ACl{c}}}{AB`Bj}}{{ce}b{}{}}{{{ACl{c}}}ACnBj}{Fdc{}}0{Fdb}{{IbIb}d}0{{{ACl{c}}Gf}{{Bb{bGh}}}{ADbBj}}{cc{}}{{FdACn}{{ACl{c}}}Bj}{{{ACl{c}}Fd}{{C`{c}}}Bj}{{}ACn}{{Hd{ACl{c}}{ACl{c}}}{{ACl{c}}}Bj}{{ACnHd}{{ACl{c}}}Bj}{{Hd{ACl{c}}}{{ACl{c}}}Bj}0{{}Fd}{ce{}{}}{{{ACl{c}}}{}Bj}{{{ACl{c}}Fd}dBj}0{{cFd}d{}}{{{ACl{c}}}{{ADf{ADd}}}Bj}{{{ACl{c}}}{{ADf{c{Fb{c}}ADd}}}Bj}{{{ACl{c}}}FdBj}0`{{{ACl{c}}{C`{Hd}}}bBj}{{{ACl{c}}FdFd}bBj}{{cFdFd}e{}{}}01{Ib{{Cf{Ib}}}}{{{ACl{c}}}{{Cf{Cd}}}Bj};{g{{Bb{{ACl{c}}e}}}Bj{}{{Gd{}{{Cb{{Bb{{C`{c}}e}}}}}}}}{g{{Bb{{ACl{c}}e}}}Bj{}{{Gd{}{{Cb{{Bb{ce}}}}}}}}{{ACng}{{Bb{ie}}}{}{}{{Gd{}{{Cb{{Bb{ce}}}}}}}{}}0{c{{Bb{e}}}{}{}}0{cOf{}}{IbAj}{{}Aj}{{{ACl{c}}}{{C`{Hd}}}Bj}{{{ACl{c}}Fd}cBj}0{{{ACl{c}}Fd}{}Bj}{{{ACl{c}}}{{ADh{{Fj{c}}}}}Bj}{{{ACl{c}}}{}Bj}{{{ACl{c}}}{{Fb{c}}}Bj}{ce{}{}}{{{ACl{c}}{C`{Hd}}}{{Cf{Cd}}}Bj}{{{ACl{c}}{C`{Hd}}}{{ACl{c}}}Bj}0`{{{ADj{c}}}bBj}0{{{ADj{c}}{C`{c}}}bBj}{{{ADj{c}}c}bBj}{{{ADj{c}}AD`}bBj}{{{ADj{c}}AD`}{{Bb{bB`}}}Bj}77{{}{{ADj{c}}}Bj}{Fdc{}}0{Fdb}{{{ADj{c}}}{{j{{Bh{c}}}}}Bj}{cc{}}{{}Fd}={{AjFd}{{ADj{c}}}Bj}{{{ADj{c}}}AnBj}{c{{Bb{e}}}{}{}}0{cOf{}}{ce{}{}}````{ADlb}{{ADl{C`{AD`}}}b}{{ADlAD`}b}33`<<;{{ADnGf}{{Bb{bGh}}}}:{{AjFd}{{Cf{ADl}}}}{{}{{ADh{Dd}}}}{{}ACn}<7{{}d}`{{{Cf{Dd}}{ADh{Dd}}ACn}b}{ADlAn}<<;:``````````````````````````````````````````````{{cf}b{}}00{{{AEb{}{{AE`{c}}}}g}{{AEb{}{{AE`{c}}}}}{}{}{{Dd{{C`{e}}}{{Db{{C`{c}}}}}}Df}}{{AEdDd}AEd}{{AEdDd}{{j{c}}}D`}{{{AEb{}{{AE`{c}}}}i{Ab{g}}}b{}{}{}{{Dd{{C`{e}}g}{{Db{g}}}}}}{{{AEb{}{{AE`{c}}}}g}{{AEb{}{{AE`{c}}}}}{}{}{{Dd{e}{{Db{c}}}}Df}}{{AEfEf}{{j{Eh}}}}{{AEf{Ab{An}}El}{{Bb{{j{Eh}}B`}}}}{AEh{{Bb{{j{Eh}}B`}}}}`{ce{}{}}00000{{AEjEb}{{Bb{AnB`}}}}0{EfEf}{ElEl}{AElAEl}{{ce}b{}{}}00{{}Ef}{{}El}{Fdc{}}00000``{Fdb}00{{EfEf}d}{{ElEl}d}{{AElAEl}d}{{{AEn{}{{Cb{c}}}}e}c{}{}}0{{ce}d{}{}}00000{AF`{{Bb{AnB`}}}}{AF`{{Bb{{Gb{An{G`{Fn}}}}B`}}}}`{{AFbc}{{Bb{AFbB`}}}{}}{{AFd{j{Al}}}{{Bb{{j{c}}B`}}}D`}`{{EfGf}{{Bb{bGh}}}}{{ElGf}{{Bb{bGh}}}}{{AElGf}{{Bb{bGh}}}}{cc{}}{ElEf}1{EfEl}2`{{AjcFd}AFf{}}{{AjFd}AFh}`{{AFjFd}{{Bb{I`B`}}}}{{AFjFd}I`}??{{Efc}bAFl}{{Elc}bAFl}{{AElc}bAFl}{{}Fd}00{ce{}{}}00{AFn{{Bb{{j{Al}}B`}}}}{AG`{{Bb{{j{Al}}B`}}}}{{{AEn{}{{Cb{c}}}}e}c{}{}}0``{AGb{{C`{c}}}{}}{AGb{{C`{Kl}}}}{AGd{{C`{c}}}{}}2{AGb{{C`{{Gb{cc}}}}}{}}``{AEh{{Bb{FdB`}}}}{{}Ef}{{}El}{{AGfFdFd}{{j{c}}}D`}88``{AF`{{Bb{{G`{Fn}}B`}}}}{{AGdKlMh}{{Bb{{C`{c}}B`}}}{}}{AGhAn}0{AGjAGj}{{AGlDdMl}{{Bb{AnB`}}}}{{AGnc{C`{e}}}{{Bb{AGnB`}}}{{Gd{}{{Cb{Ll}}}}}{}}{{AGnci}{{Bb{AGnB`}}}{{Gd{}{{Cb{Ll}}}}}{}{}{{Dd{{C`{e}}}{{Db{{C`{g}}}}}}}}`{{AGn{j{Al}}{C`{c}}}{{Bb{AGnB`}}}{}}{{AH`Fn}{{j{c}}}D`}{{AHbFnc}{{j{e}}}{}D`}{{AHdFdFd}AHd}0`{{AEfd}{{j{c}}}D`}{{AEfEf}{{j{c}}}D`}{{AHfA`}{{C`{Kl}}}}{AGb{{C`{c}}}{}}{{AHhc}{{Bb{AHhB`}}}N`}{{AHjc}AHjN`}{AHl{{Fj{{Ab{A`}}}}}}{ce{}{}}00{c{{Bb{e}}}{}{}}00000{cOf{}}00{AEh{{Bb{AEhB`}}}}8333{{Efd}Ef}{{Eld}El}101010{{Elc}El{{Gd{}{{Cb{d}}}}}}{EfEf}{ElEl}`{{AHn{j{Al}}{j{c}}}{{Bb{{j{c}}B`}}}D`}``````{{{j{c}}{j{e}}gik}{{j{m}}}D`D`{{Dd{}{{Db{}}}}}{{Dd{}{{Db{}}}}}{{Dd{}{{Db{}}}}}D`}0{{{j{c}}{j{e}}i}{{j{k}}}D`D`Cd{{Dl{}{{Db{g}}}}}{{D`{}{{Gj{g}}}}}}{{{j{c}}{j{e}}g}{{j{i}}}D`D`{{AI`{C`C`}}}D`}{{{j{c}}{j{e}}g}bD`D`{{Dl{C`C`}}}}{{{j{c}}{j{e}}i}{{j{k}}}D`D`{}{{Dl{}{{Db{g}}}}}D`}{{{j{c}}{j{e}}iAj}{{j{k}}}D`D`{CdAIb}{{Dl{}{{Db{g}}}}}{{D`{}{{Gj{g}}}}}}{{{j{c}}{j{e}}iAj}{{j{k}}}D`D`Cd{{Dl{}{{Db{g}}}}}{{D`{}{{Gj{g}}}}}}5{{{j{c}}{j{e}}g}{{Bb{AnB`}}}D`D`{{Dl{}{{Db{{Cf{Cd}}}}}}}}{{{j{c}}{j{e}}gdd}{{j{c}}}D`D`{{Dl{}{{Db{{Cf{Cd}}}}}}}}64{{{j{c}}{j{e}}k}{{Bb{{j{m}}i}}}D`D`{}{}{{Dl{C`C`}{{Db{{Bb{{C`{g}}i}}}}}}}D`}{{{j{c}}{j{e}}{j{g}}i}{{j{k}}}D`D`D`{{AId{C`C`C`}}}D`}{{{j{c}}{j{e}}k}{{Bb{{j{m}}i}}}D`D`CdAIf{{Dl{}{{Db{{Bb{gi}}}}}}}{{D`{}{{Gj{g}}}}}}2{{{j{c}}{j{e}}kAj}{{Bb{{j{m}}i}}}D`D`CdAIf{{Dl{}{{Db{{Bb{gi}}}}}}}{{D`{}{{Gj{g}}}}}}{{{j{c}}{j{e}}idd}{{Bb{{j{c}}g}}}D`D`AIf{{Dl{}{{Db{{Bb{{Cf{Cd}}g}}}}}}}}{{{j{c}}{j{e}}{j{g}}m}{{Bb{{j{o}}k}}}D`D`D`{}{}{{Dl{C`C`C`}{{Db{{Bb{{C`{i}}k}}}}}}}D`}{{{j{c}}i}{{Bb{{j{k}}g}}}D`{}{}{{Dl{C`}{{Db{{Bb{{C`{e}}g}}}}}}}D`}{{{j{c}}i}{{Bb{{j{k}}g}}}D`{}{}{{Dl{}{{Db{{Bb{eg}}}}}}}D`}{{{j{c}}i}{{Bb{{j{k}}g}}}D`{CdAIb}AIf{{Dl{}{{Db{{Bb{eg}}}}}}}{{D`{}{{Gj{e}}}}}}{{{j{c}}e}{{j{g}}}D`{{AIh{C`}}}D`}{{{j{c}}e}{{j{g}}}D`AIhD`}{{{j{c}}g}{{j{i}}}D`Cd{{Dl{}{{Db{e}}}}}{{D`{}{{Gj{e}}}}}}0{{{j{c}}g}{{j{i}}}D`{CdAIb}{{Dl{}{{Db{e}}}}}{{D`{}{{Gj{e}}}}}}0{{{j{c}}}Fdl}0{{IdId}Id}{{{j{Eh}}Ll}{{Bb{bB`}}}}{{{AIj{Ll}}Ll}{{Bb{bB`}}}}````{{cf}b{}}{{AIlcd}LlAIb}{ce{}{}}0{AIlAIl}{{ce}b{}{}}{{}AIl}{Fdc{}}0{Fdb}{{AIlAIl}d}{{ce}d{}{}}00{{AIlGf}{{Bb{bGh}}}}{cc{}}{{AIlc}bAFl}{{}Fd};{{{j{c}}}{{Gb{Fd{j{c}}}}}D`}<{c{{Bb{e}}}{}{}}0{cOf{}}>`{{Fd{Fj{d}}}b}```{{AHdFdFd}AHd}0{{Fd{Ab{An}}El}{{Bb{{AIn{{j{Eh}}}}B`}}}}{{{Ab{An}}{Ab{d}}d}{{Bb{AJ`B`}}}}{{Aj{Ab{An}}{Ab{d}}d}{{Bb{{j{Ej}}B`}}}}{{Aj{Ab{An}}}{{Bb{{j{Ej}}B`}}}}{An{{Bb{{Cf{Cd}}B`}}}}{{{Ab{An}}}{{Bb{AJ`B`}}}}{{{Ab{An}}}{{Bb{{j{Ej}}B`}}}}0```````````77`{AJbFn}00{Aj{{Bb{EdB`}}}}{Aj{{Bb{AJdB`}}}}{AJfFn}333```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{cf}b{}}00000000000000000000000000000000{{AJhc}AJh{{Dl{An}{{Db{An}}}}}}{AJjd}{I`{{`{{Ch{}{{Cb{I`}}}}}}}}{{I`{Fj{I`}}}b}{{AJjd}AJj}{{{In{JhJf}}{In{JhJf}}}}{{I`I`}I`}{{{j{c}}An}{{Bb{AnB`}}}{}}0000000000{{{j{Ah}}An}{{Bb{AnB`}}}}{{{j{n}}An}{{Bb{AnB`}}}}{{{j{Al}}An}{{Bb{AnB`}}}}{{AJhBf}An}{{AJl{C`{Aj}}}b}{{AJjAJj}{{Bb{bB`}}}}{AJlb}{{AJlAj}b}{{AJjEf}{{j{Eh}}}}{eAJn{}{{Gd{}{{Cb{c}}}}}}0{{ACne}AK`{}{{Gd{}{{Cb{c}}}}}}0{I`I`}{{{In{IlIj}}}{{`{Hn}}}}{{{In{JdJ`}}}{{`{Hn}}}}{EbEb}{MjEb}{AKbEb}{{{AIb{}{{AKd{c}}{AKf{e}}{AKh{g}}}}}{{C`{{Ab{c}}}}}AB`{AKj{AKl{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}{{{In{JnJ`}}}{{`{Hn}}}}{ce{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000{Eb{{Cf{Eb}}}}{{{AKn{Aj}}}AL`}{{AJjAJjc}{{Bb{AJjB`}}}ALb}{{ALdEb}{{Bb{AnB`}}}}{{{In{IlIj}}Eb}{{Bb{AnB`}}}}{{{In{JhJf}}Eb}{{Bb{AnB`}}}}{{{In{JnJ`}}Eb}{{Bb{AnB`}}}}{{{In{JdJ`}}Eb}{{Bb{AnB`}}}}{{{In{JjJ`}}Eb}{{Bb{AnB`}}}}{{AJjEb}{{Bb{AnB`}}}}{{AJhEb}{{Bb{AnB`}}}}{{I`Eb}I`}{{{In{JjJ`}}Jb}{{In{JjJ`}}}}{{{In{JdJ`}}Jb}{{In{JdJ`}}}}`{{{j{c}}An}{{Bb{AnB`}}}{}}00000000{{{j{Dn}}An}{{Bb{AnB`}}}}{{{j{E`}}An}{{Bb{AnB`}}}}{AJh{{Fj{{Cf{Cd}}}}}}{{{In{ce}}}{{In{ce}}}D`D`}{ALfALf}{AL`AL`}{AJjAJj}{AJhAJh}{ALhALh}{I`I`}{ALjALj}{EbEb}{MjMj}{JbJb}{MbMb}{LnLn}{EhEh}{L`L`}{LhLh}{LbLb}{IjIj}{J`J`}{DnDn}{E`E`}{IlIl}{JnJn}{AhAh}{nn}{EjEj}{AlAl}{JhJh}{JdJd}{JjJj}{ALlALl}{ACnACn}{ALnALn}{{ce}b{}{}}00000000000000000000000000000000{{MjEb}b}{AM`e{}{{AJn{c}}AIb}}0{{AM`ACn}e{}{{AK`{c}}AIb}}0{Ebd}00{{{AKn{Aj}}}Eb}{MjEb}{{{In{JjJ`}}}{{j{J`}}}}{{}AMb}{{}ALf}{{}AL`}{{}I`}{{}ALj}{{}Eb}{{}ACn}{Fdc{}}0{{{In{ce}}}{}D`D`}11111111111111111111111111111111111111111101111111111111111111111111111111111111111{{{In{JhJf}}{In{JhJf}}}}{{{j{c}}An}{{Bb{AnB`}}}{}}0000000000{{AJlc}AJj{{Gd{}{{Cb{{C`{Aj}}}}}}}}{Fdb}000000000000{AJhb}11111111111111111111111111111{ALdEb}{{{In{IlIj}}}Eb}{{{In{JnJ`}}}Eb}{{{In{JjJ`}}}Eb}{{{In{JhJf}}}Eb}{{{In{JdJ`}}}Eb}{AJjEb}{AJhEb}{I`Eb}`{{ALfALf}d}{{I`I`}d}{{ALjALj}d}{{EbACn}d}{{EbEb}d}{{MjMj}d}{{JbJb}d}{{ACnACn}d}{{ALnALn}d}{{I`I`d}d}{{AJj{j{Ah}}}}{{AJjAj}}{{AJjAJj}}{{AJhAJh}{{j{Al}}}}3210{{ce}d{}{}}00000000000000000000{{{In{ce}}}MjD`D`}{{AJhAj}{{Bb{AnB`}}}}{AJh{{Ab{An}}}}{AJh{{Fj{An}}}}{{AL`Aj}{{C`{Ll}}}}{{ALb{j{Eh}}{j{Eh}}}{{Bb{{j{Eh}}B`}}}}{AJlAJj}{AMb{{ADh{AL`}}}}{{ALfGf}{{Bb{bGh}}}}{{AL`Gf}{{Bb{bGh}}}}{{ALhGf}{{Bb{bGh}}}}{{I`Gf}{{Bb{bGh}}}}0{{ALjGf}{{Bb{bGh}}}}{{EbGf}{{Bb{bGh}}}}0{{MjGf}{{Bb{bGh}}}}{{JbGf}{{Bb{bGh}}}}0{{ACnGf}{{Bb{bGh}}}}{{ALnGf}{{Bb{bGh}}}}{cc{}}0{{{j{Ij}}}{{In{IlIj}}}}{{{j{J`}}}{{In{JnJ`}}}}22222222222222{cI`AMd}{{{C`{c}}}I`{{AMf{I`}}}}4{I`Eb}5{ACnEb}1{I`Mj}{AMhMj}8{ALnJb}9999999999999999999999{AMjACn}{AMlACn};{{ACnd}Eb}{{{j{Eh}}{ADh{AL`}}dALf}AJj}{{AjcJb}{{In{JjJ`}}}{{Gd{}{{Cb{AMn}}}}}}{{AjcJb}{{In{JjJ`}}}{{Gd{}{{Cb{{C`{AMn}}}}}}}}{{{j{Eh}}ALf}AJj}{{Ajc}{{In{IlIj}}}{{Gd{}{{Cb{AN`}}}}}}{{Ajc}{{In{IlIj}}}{{Gd{}{{Cb{{C`{AN`}}}}}}}}{{AjcJb}{{In{JdJ`}}}{{Gd{}{{Cb{AJb}}}}}}{{AjcJb}{{In{JdJ`}}}{{Gd{}{{Cb{{C`{AJb}}}}}}}}{{Ajc}{{In{JnJ`}}}{{Gd{}{{Cb{AJf}}}}}}{{Ajc}{{In{JnJ`}}}{{Gd{}{{Cb{{C`{AJf}}}}}}}}{{{ANd{ANb}}Eb}Mj}{{{j{Ah}}{AKn{Aj}}ALf}{{Bb{AJjB`}}}}{{{Fj{c}}ACn}{{AIb{}{{AKd{c}}{AKf{e}}{AKh{g}}}}}AB`{AKj{AKl{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}{{{Fj{c}}ACn}{{AIb{}{{AKd{e}}{AKf{c}}{AKh{g}}}}}{AKj{AKl{e}}}AB`{{Fl{}{{Cb{e}}}}HnHhHj}}{{FdcACn}{{AIb{}{{AKd{c}}{AKf{e}}{AKh{g}}}}}AB`{AKj{AKl{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}{{FdACn}{{AIb{}{{AKd{c}}{AKf{e}}{AKh{g}}}}}AB`{AKj{AKl{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}{{AjdFdALf}AJj}{{AjFd}AJh}{{{AIb{}{{AKd{c}}{AKf{e}}{AKh{g}}}}Fd}{{C`{c}}}AB`{AKj{AKl{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}{{AL`Ll}Aj}{{{In{JdJ`}}Fd}{{Bb{I`B`}}}}{{{In{JjJ`}}Fd}{{Bb{I`B`}}}}{{{In{JhJf}}Fd}{{Bb{I`B`}}}}{{{In{JnJ`}}Fd}{{Bb{I`B`}}}}{{{In{IlIj}}Fd}{{Bb{I`B`}}}}{{ALdFd}{{Bb{I`B`}}}}{{AJjFd}{{Bb{I`B`}}}}{{AJhFd}{{Bb{I`B`}}}}{{{In{JdJ`}}Fd}I`}{{{In{JhJf}}Fd}I`}{{{In{IlIj}}Fd}I`}{{{In{JnJ`}}Fd}I`}{{{In{JjJ`}}Fd}I`}{{ALdFd}I`}{{AJjFd}I`}{{AJhFd}I`}{AL`{{AKn{Aj}}}}{{}Eb}000000000000000000000000{{AL`Ll}{{C`{Aj}}}}{AJj{{ADh{AL`}}}}{I`{{C`{Aj}}}}{{ANfFd}I`}{{{AIb{}{{AKd{c}}{AKf{e}}{AKh{g}}}}Fd}{{C`{c}}}AB`{AKj{AKl{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}{{AJjAJj}}{{AJj{j{Ah}}}}{{AJjAj}}{{AJhAJh}{{j{Al}}}}3210{{I`c}bAFl}{{ALjc}bAFl}{{Ebc}bAFl}{{Jbc}bAFl}{{ACnc}bAFl}{{ALnc}bAFl}{{I`cd}bAFl}{{{In{JnJ`}}}{{j{Lh}}}}{{{In{JjJ`}}}{{j{J`}}}}{{}Fd}00000000000000000000000000000000000000000{Eb{{C`{Eb}}}}{ACn{{C`{ACn}}}}{ce{}{}}000000000000000000000000000000000000000000{AJh}{{{In{JhJf}}}An}{{{In{JnJ`}}}An}{{{In{JjJ`}}}An}{{{In{IlIj}}}An}{{{In{JdJ`}}}An}{AJjAn}{AJhAn}{I`{{Bb{I`B`}}}}{Ebd}00{I`d}11{AJjd}{AJhd}1323{AL`d}34440443434344443444434{ACnd}{{{AIb{}{{AKd{c}}{AKf{e}}{AKh{g}}}}}{{ADf{cgADd}}}AB`{AKj{AKl{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}{AJhACh}{AJjANh}{{{AIb{}{{AKd{c}}{AKf{e}}{AKh{g}}}}}{{C`{c}}}AB`{AKj{AKl{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}{AL`Fd}{AJjFd}{AJhFd}{{AJjAj}}{{AJj{j{Ah}}}}{{AJjAJj}}{{AJhAJh}{{j{Al}}}}3120{{AJjAJj}{{Bb{{Gb{AJjAJj}}B`}}}}{{{j{h}}{j{h}}}{{Bb{{Gb{{j{h}}{j{h}}}}B`}}}}{{EbEb}{{Bb{dB`}}}}{AJjAn}{{EbEb}{{Bb{EbB`}}}}{{AMb{ADh{AL`}}}{{Bb{bB`}}}}{{{In{JjJ`}}}{{j{J`}}}}03{{{In{JnJ`}}}{{j{Lh}}}}1{{{In{IlIj}}{C`{AJd}}}{{Bb{{In{IlIj}}B`}}}}{{{In{JdJ`}}{C`{AJd}}}{{Bb{{In{JdJ`}}B`}}}}10{{{In{JhJf}}{In{JhJf}}}}{{{j{c}}An}{{Bb{AnB`}}}{}}0000000000{AJj{{Bb{FdB`}}}}{AJjAj}{AJh{{ANd{ANb}}}}{Mj{{ANd{ANb}}}}`{{{In{JnJ`}}}{{j{Ij}}}}:{{}c{}}0{{AjFdALf}AJl}{{Ajc}{{In{IlIj}}}{{H`{{Ab{AN`}}}}}}{{Ajc}{{In{JdJ`}}}{{H`{{Ab{{C`{AJb}}}}}}}}{{Ajc}{{In{JnJ`}}}{{H`{{Ab{{C`{AJf}}}}}}}}{{Ajc}{{In{JdJ`}}}{{H`{{Ab{AJb}}}}}}{{Ajc}{{In{JjJ`}}}{{H`{{Ab{AMn}}}}}}{{Ajc}{{In{JjJ`}}}{{H`{{Ab{{C`{AMn}}}}}}}}{{Ajc}{{In{JnJ`}}}{{H`{{Ab{AJf}}}}}}{{Ajc}{{In{IlIj}}}{{H`{{Ab{{C`{AN`}}}}}}}}{{{ADh{AL`}}}AMb}{{Aj{Ab{An}}}{{Bb{AJhB`}}}}{{AjEb}Mj}{ANhC`}{{AJjAJj}}{{AJjAj}}{{AJj{j{Ah}}}}{{AJhAJh}{{j{Al}}}}2310{AJjFd}{AJhFd}{{Aj{Ab{Aj}}Aj}{{In{JnJ`}}}}{{Aj{Ab{Aj}}Aj}{{In{IlIj}}}}{{I`I`}{{C`{ANj}}}}{{JbJb}{{C`{ANj}}}}{AJj{{j{Eh}}}}{{{In{JhJf}}}{{C`{Fd}}}}{AJhb}{AJhMj}{{AJlAj}{{Gb{Lld}}}}{{{j{c}}An}{{Bb{AnB`}}}{}}0000000000{{AJhAj}b}{{{In{JdJ`}}{j{Ah}}ANl{C`{AJd}}}{{Bb{{In{JdJ`}}B`}}}}{{{In{IlIj}}{j{Ah}}ANl{C`{AJd}}}{{Bb{{In{IlIj}}B`}}}}{AJh{{Bb{{j{Ej}}B`}}}}{{AL`AL`}d}{{{In{JhJf}}}Fd}{{{In{JnJ`}}}{{j{Lh}}}}{{{In{JjJ`}}}{{j{J`}}}}{{Mj{ANd{ANb}}}b}{{{In{JdJ`}}Jb}b}{{{In{JjJ`}}Jb}b}{{{In{JdJ`}}Ed}{{Bb{bB`}}}}{ANh{{Gb{Fd{C`{Fd}}}}}}{{AJjd}AJj}{{AJjEf}AJj}{{{In{JnJ`}}Aj}{{j{Ah}}}}{{{In{JdJ`}}Aj}{{Bb{{j{Ah}}B`}}}}{{{In{IlIj}}Aj}{{j{Ah}}}}{{I`Eb}{{C`{I`}}}}{{{In{JhJf}}{In{JhJf}}}}{{{j{c}}An}{{Bb{AnB`}}}{}}0000000000{{{In{JdJ`}}}Jb}{{{In{JjJ`}}}Jb}{{{In{JdJ`}}}{{C`{Ed}}}}{{AJjdd}{{Cf{Cd}}}}{{Ebd}ACn}{{Mjd}AMh}{JbALn}{{EbAjd}AMh}{JbAj}{{AJj{AKn{Aj}}ANn}AJj}{AJj{{Bb{AJjB`}}}}{AJjAJj}{ACnACn}{ce{}{}}00000000000000000000000000000000{EbEb}{ACnAO`}{{{In{JdJ`}}Aj}{{Bb{{j{Ah}}B`}}}}{{{In{JnJ`}}Aj}{{j{Ah}}}}{{{In{IlIj}}Aj}{{j{Ah}}}}{cEd{}}00{AJhFd}{{{In{IlIj}}{C`{AJd}}{j{Ah}}Aj}{{Bb{{In{IlIj}}B`}}}}{{{In{JdJ`}}{C`{AJd}}{j{Ah}}Aj}{{Bb{{In{JdJ`}}B`}}}}{g{{Bb{AJne}}}{}{}{{Gd{}{{Cb{{Bb{ce}}}}}}}}0{{ACng}{{Bb{AK`e}}}{}{}{{Gd{}{{Cb{{Bb{ce}}}}}}}}0{AM`{{Bb{eg}}}{}{{AJn{c}}AIb}{}}0{{AM`ACn}{{Bb{eg}}}{}{{AK`{c}}AIb}{}}0{I`{{Bb{cB`}}}Kj}{c{{Bb{e}}}{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000{{I`Eb}{{Bb{I`B`}}}}{{Ebd}{{Bb{ACnB`}}}}{cOf{}}00000000000000000000000000000000000000000{ACnACn}{AJj{{Bb{AJjB`}}}}{AJhAOb}{AJjd}{{{AIb{}{{AKd{c}}{AKf{e}}{AKh{g}}}}Fd}cAB`{AKj{AKl{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}{AJj{{Bb{AObB`}}}}1{{EbI`}d}{{{AIb{}{{AKd{c}}{AKf{e}}{AKh{g}}}}}gAB`{AKj{AKl{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}{ce{}{}}00000000000000000000000000000000000000000{Fdc{}}0{{{AIb{}{{AKd{c}}{AKf{e}}{AKh{g}}}}{C`{Hd}}}{{AIb{}{{AKd{c}}{AKf{e}}{AKh{g}}}}}AB`{AKj{AKl{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}```````````{{AJjAJjc}{{Bb{AJjB`}}}ALb}{{ALb{j{Eh}}{j{Eh}}}{{Bb{{j{Eh}}B`}}}}{{AJjAJj}{{Bb{{Gb{AJjAJj}}B`}}}}{{{j{h}}{j{h}}}{{Bb{{Gb{{j{h}}{j{h}}}}B`}}}}`````````66{{}AOd}66{{}b}{Fdb}{AOdb}2{cc{}}4{{}Fd}<{c{{Bb{e}}}{}{}}0{cOf{}}{{}d}?`````````````````````````{AOfAj}{ce{}{}}00000`{{B`AOf}B`}{B`B`}{Fdc{}}{AOf}11111<<<`{{AOhGf}{{Bb{bGh}}}}{{AOfGf}{{Bb{bGh}}}}0{{B`Gf}{{Bb{bGh}}}}0={cAOf{{AMf{{Dh{Aj}}}}}}>{AOjB`}{AOlB`}{AOnB`}{cc{}}{B@`B`}{B@bB`}{B@dB`}{{}{{Ff{AjAOh}{{Db{b}}}}}}{{}Fd}00{ce{}{}}00{cB`AIf}````{{{Ff{AjAOh}{{Db{b}}}}}b}{cB`B@f}{cEd{}}0{c{{Bb{e}}}{}{}}00000{cOf{}}00666```````````````````{{cf}b{}}00{{AOb{Fj{An}}B@h}{{Bb{bB`}}}}{{AObDd}{{Fj{An}}}}0{{AOb{j{Al}}}{{Bb{AObB`}}}}{{AOb{Ab{{ANd{ANb}}}}}{{Bb{AObB`}}}}0{{AObFnFd}AOb}{AObAOb}0{{AObAje}{{Bb{AObB`}}}B@j{{Oj{An}{{Db{c}}}}}}{{AObFde}{{Bb{AObB`}}}B@j{{Oj{An}{{Db{c}}}}}}22??????????2{B@lB@l}{B@nB@n}4{{ce}b{}{}}00{{AObAj}{{Bb{AnB`}}}}{{AObe}{{Bb{{Fj{An}}B`}}}{{H`{Aj}}}{{Gd{}{{Cb{c}}}}}}{{}B@n}{{}AOb}{Fdc{}}000000000{Fdb}0000{{AObAj}{{Bb{AObB`}}}}6{{AOb{Ab{c}}}AOb{{H`{Aj}}}}{{AOb{BA`{AjNf}}}AOb}{{AOb{C`{{Ab{c}}}}}{{Bb{AObB`}}}{{H`{Aj}}}}{AOb{{Fj{Eb}}}}7{{B@nB@n}d}{{AObAOb}d}00{{ce}d{}{}}00{AObFd}`{{AObe}{{Bb{AObB`}}}{{H`{Aj}}}{{Gd{}{{Cb{c}}}}}}{{AOb{Fj{An}}}{{Bb{AObB`}}}}{{AObAOb}{{Bb{bB`}}}}{AOb{{Fj{Mj}}}}{{AObAEl}{{Bb{AObB`}}}}{{AOb{j{Al}}}{{Bb{AObB`}}}}{{B@lGf}{{Bb{bGh}}}}{{B@nGf}{{Bb{bGh}}}}{{AObGf}{{Bb{bGh}}}}0{cc{}}0000{B@hAOb}{BAbAOb}{AJhAOb}{g{{Bb{ic}}}{}{}{{Gl{c}{{Cb{e}}}}}{}}{cAOb{{Gd{}{{Cb{An}}}}}}{{{Ab{BAd}}}{{Bb{AObB`}}}}{{{Ab{BAd}}B@h}{{Bb{AObB`}}}}{{cB@h}{{Bb{AObB`}}}{{Ch{}{{Cb{BAd}}}}}}{{AObFd}{{C`{{Fj{I`}}}}}}{{AObAj}{{C`{Fd}}}}{AOb{{Fj{Aj}}}}{AOb{{Fj{{ANd{ANb}}}}}}{AOb{{Ab{An}}}}{AOb{{Fj{An}}}}{{AObFd}{{Bb{BAdB`}}}}{{AObFdBAd}{{Bb{bB`}}}}{{AObFdBAd}b}{AOb{{C`{{Bb{EbB`}}}}}}`{{AObe}{{Bb{BAfB`}}}{{H`{Aj}}}{{Gd{}{{Cb{c}}}}}}{{AOb{Fj{An}}BAh}{{Bb{{Gb{An{Fj{An}}Bf}}B`}}}}1{{AOb{Fj{An}}dd}{{Bb{BAfB`}}}}{{B@nc}bAFl}{{AOb{C`{Fd}}}AOb}{AObFd}{{AOb{Ab{An}}}{{Bb{AObB`}}}}0{{AOb{Ab{An}}}AOb}{{AOb{BAj{Fd}}}}{{AOb{BAl{Fd}}}}{{AOb{Kn{Fd}}}}{{AObAj}}{{AObFd}}{{AOb{BAn{Fd}}}}{{AObBB`}}{{AOb{BBb{Fd}}}}{{}Fd}0000{{AObFdc}{{Bb{AObB`}}}B@j}{ce{}{}}000000{{AObAj}AJh}{AOb{{Bb{{j{Al}}B`}}}}{AObd}1{AOb{{Fb{An}}}}{{AObd}BBd}{AObBBf}{AObBBh}{AOb{{Bb{{C`{An}}B`}}}}{{AObB@l}{{Bb{{C`{An}}B`}}}}{{AObce}{{Bb{AObB`}}}{{BBj{{ANd{ANb}}}}}{{BBj{{ANd{ANb}}}}}}{{AObBBl}{{Bb{AObB`}}}}3{AObFd}{{{Fj{c}}}{{Bb{AObB`}}}B@j}{{{Fj{An}}}AOb}{{{Fj{An}}}{{Bb{AObB`}}}}{BBdC`}{BBfC`}{AObAOb}{{AObe}{{Bb{cB`}}}{}{{Dd{AOb}{{Db{{Bb{cB`}}}}}}}}0{{AObgc}{{Bb{eB`}}}{}{}{{Dd{AObc}{{Db{{Bb{eB`}}}}}}}}{AOb{{C`{An}}}}{{AObAOb}d}{{AObAjAj}{{Bb{AObB`}}}}{{AObAjc}{{Bb{AObB`}}}B@j}{{AObFdc}{{Bb{AObB`}}}B@j}17{{AOb{Fj{An}}BBn}{{Bb{{Gb{An{Fj{An}}Bf}}B`}}}}`{{AObAndd{C`{Ih}}}{{Bb{AObB`}}}}0{{AObFddd{C`{Ih}}}{{Bb{AObB`}}}}{AObB@h}{{AObAOb}{{Bb{bB`}}}}{{AObe}{{Bb{AObB`}}}{{H`{Aj}}}{{Gd{}{{Cb{c}}}}}}{{AObFd}{{C`{An}}}}{{AObc}{{Bb{AObB`}}}{{BC`{Fd}}}}2{{AObc}{{Bb{{Fj{An}}B`}}}{{BBj{{ANd{ANb}}}}}}{{AObe{ADh{B@h}}}{{Bb{AObB`}}}{{H`{Aj}}}{{Gd{}{{Cb{c}}}}}}{{AObeB@h}{{Bb{AObB`}}}{{H`{Aj}}}{{Gd{}{{Cb{c}}}}}}{{AOb{Ab{c}}}{{Bb{bB`}}}{{H`{Aj}}}}{AOb{{Gb{FdFd}}}}{{AObFn}AOb}{AObd}{AObb}{BBd{{Gb{Fd{C`{Fd}}}}}}{BBf{{Gb{Fd{C`{Fd}}}}}}{{AObFnFd}AOb}0{{AObcEl}{{Bb{AObB`}}}{{BBj{{ANd{ANb}}}}}}0{AOb{{`{{Ch{}{{Cb{AOb}}}}}}}}{{AObFdd}{{Fj{AOb}}}}{{AObB@l}{{Bb{{C`{An}}B`}}}}{{AOb{C`{Fd}}}AOb}{{AOb{j{Eh}}}{{Bb{AObB`}}}}{{AOb{j{Eh}}}AOb}{{AOb{j{Eh}}d}AOb}{AObAOb}{{AObBCb}{{Bb{{O`{Nj{Nn{{Nl{Fd}}}}}}B`}}}}{ce{}{}}00{cEd{}}{{AObFdcEl}{{Bb{AObB`}}}{{BBj{{ANd{ANb}}}}}}{{AOb{C`{Aj}}{C`{{Od{Ed{Fj{Ed}}}}}}}{{Bb{AObB`}}}}{{AObAje}{{Bb{AObB`}}}B@j{{Oj{An}{{Db{{Bb{cB`}}}}}}}}{{AObFde}{{Bb{AObB`}}}B@j{{Oj{An}{{Db{{Bb{cB`}}}}}}}}{c{{Bb{e}}}{}{}}000{BCd{{Bb{AObB`}}}}{{{Gb{{BCf{{Cf{Cd}}}}{Ab{AMh}}}}}{{Bb{AObB`}}}}2{{cB@h}{{Bb{AObB`}}}{{Ch{}{{Cb{{Bb{BAdB`}}}}}}}}{{AObAj}{{Bb{FdB`}}}}44444{cOf{}}0000{{AOb{C`{{Ab{Ed}}}}B@n{C`{{Gb{FnFd}}}}}{{Bb{AObB`}}}}{{AObd{C`{{Ab{Ed}}}}B@n{C`{{Gb{FnFd}}}}}{{Bb{AObB`}}}}1{{AObc}{{Bb{AObB`}}}{{BBj{Ed}}}}{{AObcAjANlANl}{{Bb{AObB`}}}{{BBj{Ed}}}}0{{AObAOb}{{Bb{AObB`}}}}0{ce{}{}}0000{AObFd}{{AObc}{{Bb{AObB`}}}B@j}{{AObcB@h}{{Bb{AObB`}}}B@j}{{AObAn}AOb}{{AObAj{C`{Ll}}}{{Bb{AObB`}}}}{{AObAj{C`{Ll}}}AOb}`{{cf}b{}}77{BBlBBl}{{ce}b{}{}}{{}BBl}{Fdc{}}0{Fdb}{{BBlBBl}d}{{ce}d{}{}}00{{BBlGf}{{Bb{bGh}}}}{cc{}}{{BBlc}bAFl}`{{}Fd}{ce{}{}}`0{c{{Bb{e}}}{}{}}0{cOf{}}```2````````````````````````````````>>>>{BAf{{Bb{AObB`}}}}`{BCh{{Ab{{BCj{Ll}}}}}}{{BAfc}{{Bb{AObB`}}}{{Dl{AOb}{{Db{{Bb{AObB`}}}}}}HhHj}}{Bf{{j{h}}}}6666666666666666{BChBCh}{BfBf}{BAfBAf}{BClBCl}{{ce}b{}{}}0008{{}BCh}{{}Bf}{Fdc{}}000{BCn}111111111111`{{BD`c}{}BDb}{Fdb}0000{BChb}111{{BChBCh}d}{{BfBf}d}{{ce}d{}{}}00000`{BDdLl}{BCh{{Ab{Ll}}}}{BAf{{Bb{AObB`}}}}{BCh{{Fj{Ll}}}}{{BChGf}{{Bb{bGh}}}}{{BfGf}{{Bb{bGh}}}}{{BAfGf}{{Bb{bGh}}}}{{BClGf}{{Bb{bGh}}}}0{{AjBCl}Ed}{cc{}}000{{{Fj{{Fj{{Gb{Ll{BCj{Ll}}}}}}}}}BCh}1{{{Fj{{Gb{{Fj{Ll}}{Fj{{BCj{Ll}}}}}}}}}BCh}{{{Fj{{Gb{Ll{BCj{Ll}}}}}}}BCh}{BChBf}444{BDfBCl}{g{{Bb{ic}}}{}{}{{Gl{c}{{Cb{e}}}}}{}}{cBCh{{Gd{}{{Cb{{Gb{Ll{BCj{Ll}}}}}}}}}}{cBCh{{Hf{}{{Cb{{Gb{Ll{BCj{Ll}}}}}}}}}}{{BfFd}BDd}{BAfBf}0{Bf{{j{Eh}}}}{{BDhdd}{{Bb{BfB`}}}}{BAf{{Bb{AObB`}}}}{BfBCh}{{}Fd}0000000{ce{}{}}000000020{BCh}0100{BDdd}{Bfd}{BChd}{BCh{{BDl{{BDj{{Fb{Ll}}}}{Fb{{BCj{Ll}}}}}}}}{BfBDn}{BAf{{Fj{An}}}}{{BAf{C`{{Gb{FnFd}}}}}{{Fj{An}}}};{BDdFd}{BfFd}====={{{Fj{Ll}}{Fj{{BCj{Ll}}}}d}BCh}{{AOb{Fj{An}}Bf{C`{{Fj{Ed}}}}}BAf}{BDnC`}{{BDnFd}C`}{{BAfc}{{Bb{AObB`}}}{{Dd{AOb}{{Db{{Bb{AObB`}}}}}}HhHj}}{c{}{}}{BfBD`}{{BAfKlMh}{{Bb{AObB`}}}}{{BAfe}BAf{{H`{Aj}}}{{Gd{}{{Cb{c}}}}}}{{BfFnFd}BCn}{BChb}{Bfb}{{BAfA`}{{Bb{AObB`}}}}{BAf{{Bb{AObB`}}}}{Bf{{Fj{Ll}}}}0{BAfBf}0{ce{}{}}000{cEd{}}{c{{Bb{e}}}{}{}}000000000000000{cOf{}}0000000{BfBf}{BfBCh}{Bf{{Fj{{Nl{Ll}}}}}}:66666666`````{{BChc}An{{Dd{{Gb{Ll{BCj{Ll}}}}}{{Db{C`}}}}HhHj}}{{BChc}An{{Dd{{Gb{Ll{BCj{Ll}}}}}{{Db{}}}}HhHj}}{{{Ab{{Nl{Ll}}}}c}An{{Dd{{Nl{Ll}}}{{Db{C`}}}}HhHj}}{{{Ab{{Nl{Ll}}}}c}An{{Dd{{Nl{Ll}}}{{Db{}}}}HhHj}}{{{Ab{c}}e{C`{{ADh{AD`}}}}}{{AIj{c}}}{BE`BEb}{{Ch{}{{Cb{{Gb{LlLl}}}}}}Hn}}{{{Ab{c}}Hde{C`{{ADh{AD`}}}}}{{AIj{c}}}{BE`BEb}{{Ch{}{{Cb{{Gb{LlLl}}}}}}Hn}}{{{j{c}}LlLl}{{j{c}}}D`}{{{Fj{{Nl{Ll}}}}{Ab{{Cf{Cd}}}}}d}{{BEdBf}An}{{BEfBEf}BEf}0`{{BEhAObBf}{{Bb{AnB`}}}}{BEh{{Bb{AjB`}}}}````````````````````````````````````{{cf}b{}}00{{BEjI`}{{C`{b}}}}{{BElI`}b}0{ce{}{}}00000{BEjBEj}{BElBEl}{BAdBAd}{{ce}b{}{}}00{{{Ab{c}}}Eb{{Hb{Eb}}}}{{}BAd}{Fdc{}}00000{Fdb}00{{BAdBAd}d}{{ce}d{}{}}00{{BAdGf}{{Bb{bGh}}}}{{{Gb{EbFd}}}BEj}{cc{}}0{{{Gb{EbFd}}}BEl}1{{eFd}B@h{{AMf{Eb}}}{{Ch{}{{Cb{{Fj{{Gb{Edc}}}}}}}}}}{{}Fd}00{ce{}{}}00{BEjAn}{BElAn}{{EbFd}BEj}{{EbFd}BEl}{{{Fj{I`}}}BAd}{{BEjFd}An}{{BElFd}An}{{{Ab{BAd}}{C`{Fd}}}{{Bb{B@hB`}}}}0{{{Ab{BAd}}{C`{Fd}}}{{Bb{{Fj{Eb}}B`}}}}999{c{{Bb{e}}}{}{}}00000{cOf{}}00;;;{{{Ab{AOb}}}{{Bb{AObB`}}}}0``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{cf}b{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{AOb{Ab{Aj}}{Ab{Aj}}{C`{Aj}}AOb}AOb}{{BBhc}{{Bb{AObB`}}}{{Dd{BEn{BFb{BF`}}{BFb{BFd}}}{{Db{{Bb{bB`}}}}}}}}{{BFf{Ab{Ll}}dd}AOb}{{BFf{Gb{{Od{{Fj{Ll}}{Fj{Nb}}}}{Od{{Fj{Oh}}{Fj{Nb}}}}}}AObBFh}{{Bb{AObB`}}}}{{AjAj}Ed}{{BFfAObAnAnBFhd{C`{{Ab{Aj}}}}}{{Bb{AObB`}}}}{{BFfAObAnAnBFh}{{Bb{AObB`}}}}{BFj{{Bb{AnB`}}}}{{BFl{Ab{Nb}}Id}AOb}0{{BFl{Ab{Nb}}}AOb}0{{BFn{C`{{Fj{Aj}}}}{C`{Aj}}d}{{Bb{AObB`}}}}{{{BG`{c}}{C`{BGb}}}{{BG`{c}}}BGd}{{BBhd}BBh}{An{{Bb{AnB`}}}}{BGfBGf}{{{BGh{}{{Db{c}}}}An}c{}}{{BGfBGf}}{{ANlFn{C`{AJd}}}{{Bb{FnB`}}}}0{{BGjAn}{{Bb{AnB`}}}}1{{BGlc}BBh{{H`{{Ab{BGf}}}}}}5`{{BGfAj}BGf}{{}BGf}{{BGfd}BGf}{c{{Bb{BGfB`}}}{{H`{{Ab{BGf}}}}}}{{{ADh{ce}}}e{}BGn}{{BH`d}BH`}`{BHbd}0{BHdd}1`{{BGfc}BGf{{AMf{BGf}}}}{{{ADh{BHb}}BHf}{{Bb{BBhB`}}}}76{{BGfcd}BGf{{AMf{BGf}}}}{A@lb}{A@nb}{{A@l{C`{An}}}{{Bb{bB`}}}}{{A@n{C`{c}}}b{}}{{A@lAn}{{Bb{bB`}}}}{{A@nc}b{}}{{{AEb{}{{AE`{c}}}}g}{{AEb{}{{AE`{c}}}}}{}{}{{Dd{{C`{e}}}{{Db{{C`{c}}}}}}Df}}{{BGlc{ADh{B@h}}}BBh{{Dd{AOb}{{Db{{Bb{AObB`}}}}}}HhHj}}{{BGfc{BHj{{ADh{BHh}}}}}BGf{{Dd{An}{{Db{{Bb{{C`{An}}B`}}}}}}HhHj}}{{BGfBGfc{BHj{{ADh{BHh}}}}}BGf{{Dd{AnAn}{{Db{{Bb{{C`{An}}B`}}}}}}HhHj}}{{BGfc}{{Bb{BHlB`}}}{{Dl{BGf}{{Db{{Bb{BHlB`}}}}}}}}{{AEdDd}AEd}{{AEdDd}{{j{c}}}D`}{{BGfc{Ab{BGf}}{BHj{{ADh{BHh}}}}}BGf{{Dd{{Ab{An}}}{{Db{{Bb{{C`{An}}B`}}}}}}HhHj}}{{BGfBHn{Ab{BGf}}dd}BGf}{{ce{BHj{{ADh{BHh}}}}d}BGf{{Dd{{Ab{An}}}{{Db{{Bb{{C`{An}}B`}}}}}}HhHj}{{H`{{Ab{BGf}}}}}}{{{AEb{}{{AE`{c}}}}i{Ab{g}}}b{}{}{}{{Dd{{C`{e}}g}{{Db{g}}}}}}{{{AEb{}{{AE`{c}}}}g}{{AEb{}{{AE`{c}}}}}{}{}{{Dd{e}{{Db{c}}}}Df}}{{BGfBGfFnEb}BGf}{BCd{{ADh{Cd}}}}{BI`{{C`{Fd}}}}{BIbBGf}{BIdBGf}{BGfBGf}3210{{AEfEf}{{j{Eh}}}}{{BGfEf}BGf}{{BFjEf}{{j{Eh}}}}{{cEl}BGf{{H`{{Ab{BGf}}}}}}{{AEf{Ab{An}}El}{{Bb{{j{Eh}}B`}}}}{AEh{{Bb{{j{Eh}}B`}}}}6{BFj{{Bb{{j{Eh}}B`}}}}{cBGf{{AMf{BGf}}}}``{BGfBIb}{eAJn{}{{Gd{}{{Cb{c}}}}}}0{{ACne}AK`{}{{Gd{}{{Cb{c}}}}}}0`{{{BIf{c}}}{{Bb{BAbB`}}}BIh}{BHbAD`}{BFjAD`}{BIjAD`}{BHdAD`}{BCdAD`}30{BIl{{j{n}}}}{{BIn{C`{Aj}}d}{{Bb{{In{IlIj}}B`}}}}{{BIn{C`{Aj}}}{{Bb{{In{IlIj}}B`}}}}{{BIn{C`{Aj}}Jbdd{C`{Ed}}{j{Ah}}}{{Bb{{In{JdJ`}}B`}}}}{{BIn{C`{Aj}}Jbd{C`{Ed}}{j{Ah}}}{{Bb{{In{JdJ`}}B`}}}}{BJ`{{C`{BGf}}}}{{{ADh{c}}}BJb{BJdN`}}{BJf{{j{h}}}}{BJ`{{C`{BJh}}}}{{{ADh{ce}}}{}N`BGn}{{{ADh{c}}}LfBJj}{BJlBGf}{{{ADh{ce}}}cN`BGn}{AKbEb}{BJnAn}{BFj{{Bb{FdB`}}}}{{{AIb{}{{AKd{c}}{AKf{e}}{AKh{g}}}}}{{C`{{Ab{c}}}}}AB`{AKj{AKl{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}{BJ`{{C`{BK`}}}}{BKb{{C`{BK`}}}}{BKd{{j{Ah}}}}{{{Fj{BGf}}}BGf}{{BIn{C`{Aj}}d}{{Bb{{In{JnJ`}}B`}}}}{{{ADh{{Ab{{BKf{c}}}}e}}}{{ADh{{Ab{c}}e}}}{}BGn}{{{ADh{{BKf{c}}e}}}{{ADh{ce}}}{}BGn}{AjBGf}{{BGf{C`{Ll}}}BGf}{BKh{{Bb{{j{Ah}}B`}}}}{BKh{{j{Ah}}}}{{{In{JdJ`}}JbAJd}{{In{JjJ`}}}}`{{{BKj{c}}B@h}{{Bb{{BKl{c}}B`}}}BKn}{{{BL`{c}}B@h}{{Bb{{BLb{c}}B`}}}BKn}{{{BLd{c}}Fd}{{Bb{BLfB`}}}BGd}{{{BLh{c}}B@h}{{Bb{{BLj{c}}B`}}}BKn}{{{BG`{c}}}{{Bb{BLlB`}}}BGd}{{{BG`{c}}}{{Bb{BLnB`}}}BGd}{{{BG`{{Cf{BGd}}}}{C`{{ADh{B@h}}}}}{{Bb{BM`B`}}}}{{{BG`{{Cf{BGd}}}}{C`{{ADh{B@h}}}}}{{Bb{BMbB`}}}}`{BGfBMd}{{BGfBMfBGf}BGf}{{BFjAn}{{Bb{AnB`}}}}00{ce{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{ADh{ce}}}cN`BGn}111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111{{BBhLlcEl}BBh{{H`{{Ab{BGf}}}}}}{BCd{{Cf{Cd}}}}````{BBhBBh}```{{BMhAj}{{Bb{EdB`}}}}{{BMj{Fj{BGf}}}{{Bb{BGfB`}}}}{{AJjAJjc}{{Bb{AJjB`}}}ALb}{{BIj{Ab{An}}}{{Bb{{C`{An}}B`}}}}{{BMlAnAn}{{Bb{AnB`}}}}{{BMj{Fj{BGf}}}BGf}{BMnb}{{BGfEb}BGf}{{AEjEb}{{Bb{AnB`}}}}{{ALdEb}{{Bb{AnB`}}}}{{BFjEb}{{Bb{AnB`}}}}{{BBh{BN`{AjEbNf}}d}BBh}4{{BBhEbd}BBh}4`{BGfBNb}{{{ADh{c}}}{{C`{AIf}}}{AIfN`}}{BGfBGf}{BNd{{Bb{AnB`}}}}1```{BNf{{Bb{{j{Ij}}B`}}}}{{BAbBAb{C`{{Ab{Ed}}}}Aj}{{Bb{bB`}}}}{{B@hB@h{C`{{Ab{Ed}}}}Aj}{{Bb{bB`}}}}0``{{BNhAn}{{Bb{AnB`}}}}{{BFjAn}{{Bb{AnB`}}}}{{BNhc}{{Bb{AnB`}}}Af}{BFj{{Fh{{Fb{{Cf{Cd}}}}{Ff{{Cf{Cd}}}{{Db{Fd}}}}}}}}`{BFj{{Fj{{Cf{Cd}}}}}}0{{AnAnAn}{{Bb{AnB`}}}}{{BGfBGfBGf}BGf}{{AnAn}{{Bb{AnB`}}}}{{BGfBGf}BGf}10{BNjBNj}{BNlBNl}{BAhBAh}{BBnBBn}{BNnBNn}{ANlANl}{BO`BO`}{BObBOb}{BOdBOd}{BOfBOf}{OhOh}{NbNb}{BOhBOh}{BOjBOj}{BGbBGb}{BMnBMn}{BBhBBh}{BGlBGl}{BOlBOl}{BOnBOn}{C@`C@`}{C@bC@b}{C@dC@d}{C@fC@f}{C@hC@h}{BFhBFh}{C@jC@j}{C@lC@l}{C@nC@n}{CA`CA`}{CAbCAb}{CAdCAd}{CAfCAf}{CAhCAh}{CAjCAj}{CAlCAl}{CAnCAn}{BHfBHf}{CB`CB`}{CBbCBb}{CBdCBd}{CBfCBf}{CBhCBh}{CBjCBj}{BHdBHd}{CBlCBl}{CBnCBn}{CC`CC`}{CCbCCb}{CCdCCd}{CCfCCf}{CChCCh}{CCjCCj}{BJlBJl}{BGfBGf}{CClCCl}{BMfBMf}{{{BHj{c}}}{{BHj{c}}}AB`}{CCnCCn}{CD`CD`}{CDbCDb}{BHnBHn}{CDdCDd}{CDfCDf}{CDhCDh}{CDjCDj}{CDlCDl}{CDnCDn}{CE`CE`}{BMjBMj}{CEbCEb}{CEdCEd}{CEfCEf}{CEhCEh}{{{ADh{ce}}}{{ADh{ce}}}N`{BGnAB`}}{CEjCEj}{MlMl}{BCbBCb}{B@hB@h}{BCdBCd}{AMhAMh}{BAbBAb}{MhMh}{CElCEl}{CEnCEn}{CF`CF`}{BFj{{ADh{BFj}}}}{{ce}b{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000``````{CFb{{C`{CFd}}}}``{{ANlANl}ANj}{{{ADh{ce}}{ADh{ce}}}ANj{CFfN`}BGn}{{{Ab{BGf}}}BGf}{{BH`C@l}BH`}{{C@lCA`}d}`{{{Ab{An}}}{{Bb{AnB`}}}}{AjBGf}{BBh{{Bb{AObB`}}}}{c{{Bb{{Fj{AOb}}B`}}}{{Hf{}{{Cb{BBh}}}}}}{AM`e{}{{AJn{c}}AIb}}0{{AM`ACn}e{}{{AK`{c}}AIb}}0{{ABfAj}{{j{c}}}D`}{{ABh{j{c}}}{{j{c}}}D`}10{{ABhAjEb}{{j{c}}}D`}0{BBh{{Bb{BMnB`}}}}{cBGf{{BBj{Ed}}}}{{CEjFd}CFh}`{{BFn{Fj{Aj}}{C`{Aj}}d}{{Bb{AObB`}}}}`{{ce}ANj{}{}}0``{CCb{{Bb{{ADh{B@h}}B`}}}}{{cCEh}{{Bb{BBhB`}}}{{H`{{Ab{BBh}}}}}}{{BKh{j{Ah}}}{{j{Ah}}}}{{ed}{{Bb{BGfB`}}}{{AMf{BGf}}AB`}{{H`{{Ab{c}}}}}}{{CFb{Fj{BBh}}}{{Bb{BBhB`}}}}{{CBb{Fj{BBh}}}{{Bb{BBhB`}}}}44{e{{Bb{BGfB`}}}{{AMf{BGf}}AB`}{{H`{{Ab{c}}}}}}{{cAjd}BGf{{H`{{Ab{BGf}}}}}}{{BIbc}BGf{{AMf{BGf}}}}{{CFj{Ab{A`}}}{{j{Al}}}}{{BKhAjd}{{Bb{{j{Al}}B`}}}}{{BIdc}BGf{{AMf{BGf}}}}{{B@hAj}d}{{CFj{j{n}}}{{j{Al}}}}{{BKh{j{Ah}}dd}{{Bb{{j{Al}}B`}}}}{{BKhAj}{{Bb{{j{Al}}B`}}}}{{CdACn}{{Cf{Cd}}}}{{AnFd}{{Bb{{j{Eh}}B`}}}}{BBhBBh}{BGfBGf}{{BKhAjd}{{Bb{{j{Eh}}B`}}}}{{BKh{j{Ah}}d}{{Bb{{j{Eh}}B`}}}}{{CFlA`{C`{A`}}{C`{BGb}}A`d}{{Bb{FdB`}}}}{{{AKn{Aj}}}Eb}{{BFf{Ab{Nb}}d}AOb}{{CFnc}{{Cf{CG`}}}BKn}{{CGbc}{{Cf{CG`}}}BKn}`{{CGdAOb{C`{Aj}}{C`{{Gb{FnFd}}}}}{{Bb{AObB`}}}}{{BBhBBh}BBh}{{CGdAOb{C`{{Gb{FnFd}}}}d}{{Bb{{Gb{AObAOb}}B`}}}}{{And}{{Bb{AnB`}}}}{{BGfd}BGf}{{BGfced}BGf{{Dd{AnAn}{{Db{{Bb{{C`{An}}B`}}}}}}HhHjAB`}{{H`{{Ab{BGf}}}}}}212121{{ce}BGf{{Dd{AnAn}{{Db{{Bb{{C`{An}}B`}}}}}}HhHjAB`}{{H`{{Ab{BGf}}}}}}32{{CGfBGfFdd}BGf}`{BCdACn}{AMhACn}```{{BGfBGfANlBO`{C`{Jb}}{C`{Ed}}}BGf}`{CDdBGf}`11{AJbFn}00{CGh{{j{Lh}}}}{CGj{{j{Lh}}}}{BNf{{Bb{{j{Lh}}B`}}}}`{CGl{{j{J`}}}}{ANlFn}`{ANld}```{{}b}{cbBGn}{{}BNj}{{}CFn}{{}BAh}{{}BBn}{{}CGb}{{}BOd}{{}BOh}{{}BOj}{{}BBh}{{}BOn}{{}C@`}{{}C@b}{{}C@h}{{}BFh}{{}C@j}{{}C@l}{{}C@n}{{}CAb}{{}CAf}{{}CAh}{{}CAj}{{}CAl}{{}CAn}{{}BHf}{{}CB`}{{}CBj}{{}CBn}{{}CC`}{{}CCb}{{}BGf}{{}{{BHj{{ADh{CGn}}}}}}{{}{{BHj{{ADh{BMl}}}}}}{{}{{BHj{{ADh{BHh}}}}}}{{}CDd}{{}CDf}{{}CDj}{{}CDl}{{}CDn}{{}CE`}{{}CEb}{{}CEf}{{}CEh}{{}{{ADh{c}}}CH`}{{}Ml}{{}BCb}{{}B@h}{{}AMh}{{}BAb}{{}Mh}`{{}{{Od{{Fj{Oh}}{Fj{Nb}}}}}}{Fdc{}}{{{AIn{c}}}{}{}}11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111{{{BHj{c}}}{}{}}22222222222222222{{{ADh{ce}}}cN`BGn}3333333333333332333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333```{CCbEd}{BBh{{Bb{EdB`}}}}0{BBhEd}02{{{ADh{c}}}Aj{AIfN`}}{{AMhCHb}{{Bb{CHdB`}}}}```{{AnFnCHf}{{Bb{AnB`}}}}{{BIdFnCHf}BGf}{{BGfFnCHf}BGf}`{{{BGh{}{{Db{c}}}}An}c{}}{{BGfBGf}}{{BGjAn}{{Bb{AnB`}}}}{{CCbEd{Gb{FdFd}}CHh{BN`{EdEdNf}}}{{Bb{bGh}}}}{{BGfc}BGf{{AMf{BGf}}}}{{{ADh{AD`c}}}{{Bb{{ADh{ec}}{ADh{AD`c}}}}}BGn{AD`HhHj}}{{{ADh{AD`c}}}{{ADh{ec}}}BGn{AD`HhHj}}{{{ADh{ce}}}{{CHj{ce}}}N`{AB`BGn}}{Fdb}0000{BM`b}111{BMbb}22222222222222222222222222222222222222{BMnb}3{{BBhe}BBh{{H`{Aj}}}{{Gd{}{{Cb{c}}}}}}444444444444444444444444444444444444444444444444444444444444{{{ADh{ce}}}bN`BGn}55555555555555{BGfBGf}{{BBh{C`{{Fj{BGf}}}}}BBh}1{BFjAn}{{{In{JdJ`}}JbAJd}{{In{JjJ`}}}}`{BGfCHl}{ALdEb}{BFjEb}`{EbBGf}{cBGf{{H`{{Ab{Eb}}}}}}{CDfBGf}``{ce{}{{CI`{CHn}}}}0`{{CFj{Ab{A`}}}{{j{Al}}}}{{CFj{j{n}}}{{j{Al}}}}{{ANlEbAj}{{Bb{bB`}}}}{{ANl{C`{Aj}}Aj}{{Bb{bB`}}}}`{{BAhBAh}d}{{BBnBBn}d}{{ANlANl}d}{{BO`BO`}d}{{BObBOb}d}{{BOdBOd}d}{{OhOh}d}{{BOhBOh}d}{{BOjBOj}d}{{BGbBGb}d}{{BOlBOl}d}{{BOnBOn}d}{{C@`C@`}d}{{C@bC@b}d}{{C@dC@d}d}{{C@fC@f}d}{{C@hC@h}d}{{BFhBFh}d}{{C@jC@j}d}{{C@lC@l}d}{{C@nC@n}d}{{CA`CA`}d}{{CAbCAb}d}{{CAdCAd}d}{{CAfCAf}d}{{CAhCAh}d}{{CAjCAj}d}{{CAlCAl}d}{{CAnCAn}d}{{CB`CB`}d}{{CBdCBd}d}{{CBfCBf}d}{{CBhCBh}d}{{CBlCBl}d}{{CBnCBn}d}{{BJlBJl}d}{{BGfc}BGf{{AMf{BGf}}}}{{BGfBGf}d}{{CClCCl}d}{{BMfBMf}d}{{{BHj{An}}{BHj{An}}}d}{{{BHj{{ADh{c}}}}{BHj{{ADh{c}}}}}dN`}{{CCnCCn}d}{{CD`CD`}d}{{CDbCDb}d}{{BHnBHn}d}{{CDhCDh}d}{{CDjCDj}d}{{CDlCDl}d}{{CDnCDn}d}{{CE`CE`}d}{{CEdCEd}d}{{CEfCEf}d}{{CEhCEh}d}{{{ADh{ce}}{ADh{ce}}}d{CIbN`}BGn}{{{ADh{Cd}}Cd}d}{{{ADh{CId}}CId}d}{{CHdCHd}d}{{BCbBCb}d}{{B@hB@h}d}{{BCdBCd}d}{{BCdCd}d}{{AMhAMh}d}{{BAbBAb}d}{{MhMh}d}{{CF`CF`}d}{{BGfc}BGf{{AMf{BGf}}}}{{{AEn{}{{Cb{c}}}}e}c{}{}}0{{ce}d{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{CIfBGfd}BGf}{{BJ`AObCIh}{{Bb{AnB`}}}}{{BKbAOb}{{Bb{AnB`}}}}{{BJ`AObBfCIh}{{Bb{CIjB`}}}}{{BJhAObBfCIh}{{Bb{AnB`}}}}``{{BGfc}BGf{{BBj{Ed}}}}{{BGfc}BGf{{H`{{Ab{Eb}}}}}}{{ce}{{Bb{gB@d}}}{}CIl{}}{{BBhd}{{Bb{EdB`}}}}{AF`{{Bb{AnB`}}}}{{BBhe}BBh{{AMf{BGf}}AB`}{{H`{{Ab{c}}}}}}{BGfBGf}{AF`{{Bb{{Gb{An{G`{Fn}}}}B`}}}}``{{BGfBGfBGf}BGf}{CFnCFl}{CGbCFl}{{BKh{j{Ah}}Fd}{{Bb{{j{Ah}}B`}}}}{Nb{{Gb{LlLl}}}}{{BKhAj}{{Bb{{j{h}}B`}}}}{{BKh{j{Ah}}}{{Bb{{j{h}}B`}}}}{{BKhAjEb}{{Bb{AnB`}}}}{A@ld}``{BMn{{C`{{Bb{AObB`}}}}}}{{BBhFd}{{Bb{AObB`}}}}{BMn{{Bb{AObB`}}}}{A@lMj}{BFj{{Dh{Mj}}}}{{CInFn}BGf}{{CInAj}BGf}{BCd{{Ab{AMh}}}}```{{BBhc}BBh{{AMf{BGf}}}}{{BGfc}BGf{{AMf{BGf}}}}`10{{BGfAEl}BGf}{{AFbc}{{Bb{AFbB`}}}{}}{{AFd{j{Al}}}{{Bb{{j{c}}B`}}}D`}{{BFj{j{Al}}}{{Bb{AnB`}}}}{{BBhBGf}BBh}5{{BAbc}BAb{{Dd{FdAMh}{{Db{d}}}}}}{{BJhAnBfCIh}{{Bb{AnB`}}}}{{BKhAjd}{{Bb{{j{Eh}}B`}}}}{{BKh{j{Ah}}dd}{{Bb{{j{Eh}}B`}}}}{{BKhAj}{{Bb{{j{Eh}}B`}}}}{CJ`{{Bb{AObB`}}}}{{CG`AOb}{{Bb{bB`}}}}{A@n{{j{c}}}D`}{{ALb{j{Eh}}{j{Eh}}}{{Bb{{j{Eh}}B`}}}}{BH`BBh}{{{BG`{c}}}{{Bb{AObB`}}}BGd}{{{BKj{c}}AOb}{{Bb{bB`}}}BKn}{{{CJb{c}}}{{Bb{AObB`}}}BGd}{{{BIf{c}}}{{Bb{AObB`}}}BIh}{{{CJd{c}}AOb}{{Bb{bB`}}}BKn}{{{BL`{c}}AOb}{{Bb{bB`}}}BKn}{{{CJf{c}}AOb}{{Bb{bB`}}}BKn}{{{CJh{c}}}{{Bb{AObB`}}}BGd}{{{CJj{c}}}{{Bb{AObB`}}}BGd}{{{BLd{c}}}{{Bb{AObB`}}}BGd}{{{BLh{c}}AOb}{{Bb{IhB`}}}BKn}{CFb{{Bb{BBhB`}}}}{A@l{{j{h}}}}1{CBb{{Bb{BBhB`}}}}{BHd{{Bb{BBhB`}}}}{{{CJb{c}}{C`{{ADh{CJl}}}}d}{{Bb{AObB`}}}BGd}{{BLfFd}d}{{}BGf}{BIdBGf}{BBhBBh}{BGfBGf}`0``{{}{{BHj{{ADh{BHh}}}}}}{BNd{{Bb{AnB`}}}}2{{BGfBGf}BGf}{{AnAn}{{Bb{AnB`}}}}{{{ADh{CJn}}}{{Bb{bB@d}}}}{{BIjGf}{{Bb{bGh}}}}{{BMlGf}{{Bb{bGh}}}}{{BMhGf}{{Bb{bGh}}}}{{BAhGf}{{Bb{bGh}}}}{{BBnGf}{{Bb{bGh}}}}{{BNnGf}{{Bb{bGh}}}}{{ANlGf}{{Bb{bGh}}}}0{{BO`Gf}{{Bb{bGh}}}}{{BObGf}{{Bb{bGh}}}}{{BOdGf}{{Bb{bGh}}}}{{OhGf}{{Bb{bGh}}}}{{NbGf}{{Bb{bGh}}}}{{BJ`Gf}{{Bb{bGh}}}}{{BHbGf}{{Bb{bGh}}}}{{CK`Gf}{{Bb{bGh}}}}{{BOhGf}{{Bb{bGh}}}}{{BOjGf}{{Bb{bGh}}}}{{BGbGf}{{Bb{bGh}}}}{{BOlGf}{{Bb{bGh}}}}{{BOnGf}{{Bb{bGh}}}}{{C@`Gf}{{Bb{bGh}}}}{{CIjGf}{{Bb{bGh}}}}{{C@bGf}{{Bb{bGh}}}}{{C@dGf}{{Bb{bGh}}}}{{C@fGf}{{Bb{bGh}}}}{{C@hGf}{{Bb{bGh}}}}{{BFhGf}{{Bb{bGh}}}}{{C@jGf}{{Bb{bGh}}}}{{C@lGf}{{Bb{bGh}}}}{{C@nGf}{{Bb{bGh}}}}{{CA`Gf}{{Bb{bGh}}}}0{{CAbGf}{{Bb{bGh}}}}0{{CAdGf}{{Bb{bGh}}}}{{CAfGf}{{Bb{bGh}}}}{{CAhGf}{{Bb{bGh}}}}{{CAjGf}{{Bb{bGh}}}}{{CAlGf}{{Bb{bGh}}}}{{CAnGf}{{Bb{bGh}}}}{{CB`Gf}{{Bb{bGh}}}}{{CBdGf}{{Bb{bGh}}}}{{CBfGf}{{Bb{bGh}}}}{{CBhGf}{{Bb{bGh}}}}{{CBlGf}{{Bb{bGh}}}}{{CBnGf}{{Bb{bGh}}}}{{CCbGf}{{Bb{bGh}}}}{{BGfGf}{{Bb{bGh}}}}0{{CClGf}{{Bb{bGh}}}}{{BMfGf}{{Bb{bGh}}}}0{{{BHj{c}}Gf}{{Bb{bGh}}}{}}{{CCnGf}{{Bb{bGh}}}}0{{CD`Gf}{{Bb{bGh}}}}0{{CDbGf}{{Bb{bGh}}}}0{{BHnGf}{{Bb{bGh}}}}0{{CDdGf}{{Bb{bGh}}}}{{CDfGf}{{Bb{bGh}}}}{{CDhGf}{{Bb{bGh}}}}{{CDjGf}{{Bb{bGh}}}}{{CDlGf}{{Bb{bGh}}}}{{CDnGf}{{Bb{bGh}}}}{{CE`Gf}{{Bb{bGh}}}}{{BMjGf}{{Bb{bGh}}}}{{CEbGf}{{Bb{bGh}}}}{{CEdGf}{{Bb{bGh}}}}{{CEfGf}{{Bb{bGh}}}}{{CEhGf}{{Bb{bGh}}}}{{{ADh{ce}}Gf}{{Bb{bGh}}}{ADbN`}BGn}{{{ADh{ce}}Gf}{{Bb{bGh}}}N`BGn}{{{ADh{ce}}Gf}{{Bb{bGh}}}{B@fN`}BGn}{{CHdGf}{{Bb{bGh}}}}{{CEjGf}{{Bb{bGh}}}}{{BCbGf}{{Bb{bGh}}}}{{B@hGf}{{Bb{bGh}}}}{{BCdGf}{{Bb{bGh}}}}{{AMhGf}{{Bb{bGh}}}}{{BAbGf}{{Bb{bGh}}}}{{MhGf}{{Bb{bGh}}}}{{CElGf}{{Bb{bGh}}}}{{CEnGf}{{Bb{bGh}}}}{{CF`Gf}{{Bb{bGh}}}}{{AjBCl}Ed}`````{{BGfce}BGf{{Dd{AnAn}{{Db{{Bb{{C`{An}}B`}}}}}}HhHjAB`}{{H`{{Ab{BGf}}}}}}{{BH`d}BH`}``{{Ajc}{{Bb{BGfB`}}}{{H`{{Ab{BGf}}}}}}{{BGf{C`{Ll}}}BGf}{cc{}}000000000000000{CKbBNj}111111111111111111111{LlOh}2222222222{BGlBBh}3{CCbBBh}4444444444{CA`BFh}55555555555555555555555555555{M`BGf}{IhBGf}{IfBGf}{LfBGf}{FnBGf}{LjBGf}{LdBGf}{dBGf}{AjBGf}{LlBGf}{BJlBGf}{cc{}}{A`BGf}{KlBGf}22{CKd{{BHj{{ADh{BIj}}}}}}{CKf{{BHj{{ADh{BIj}}}}}}{CKh{{BHj{{ADh{BIj}}}}}}{CKj{{BHj{{ADh{BIj}}}}}}{CKl{{BHj{{ADh{BIj}}}}}}{CCn{{BHj{{ADh{BIj}}}}}}{CD`{{BHj{{ADh{BIj}}}}}}{CKn{{BHj{{ADh{BIj}}}}}}{CL`{{BHj{{ADh{BIj}}}}}}{BHn{{BHj{{ADh{BIj}}}}}}<<<<<{CKfBHn}{CCnBHn}{CD`BHn}{CKhBHn}{cc{}}0000{CE`CDn}1111111{CLbc{}}{{{Nl{c}}}{{ADh{{Ab{c}}}}}{}}{CLd{{ADh{CLf}}}}{Ed{{ADh{Aj}}}}{{{Dh{c}}}{{ADh{c}}}{CLhN`}}6{Aj{{ADh{Aj}}}}{{{Ab{c}}}{{ADh{{Ab{c}}}}}AB`}{{{Cf{ce}}}{{ADh{ce}}}N`BGn}{CFl{{ADh{CLj}}}}{CLl{{ADh{CLl}}}}{{{ADh{Aj}}}{{ADh{{Ab{A`}}}}}}{CLn{{ADh{CLl}}}}{CLf{{ADh{CLf}}}}{{{Fj{ce}}}{{ADh{{Ab{c}}e}}}{}{BGnAB`}}{CLj{{ADh{CLj}}}}{c{{ADh{c}}}{}}{CM`CHd}{cc{}}0000{BAbB@h}{BAdB@h}2{{{ADh{BAb}}}B@h}0{{{Ab{An}}}B@h}3{CMbBCd}{CMdBCd}66{{{Fj{AMh}}}BAb}77777{{c{C`{Hd}}}CMf{}}{{{CMh{Fn}}{CMh{A`}}{C`{Hd}}}CMj}{{{CMh{Fn}}{CMh{A`}}{C`{Hd}}}CMl}{g{{Bb{ic}}}{}{}{{Gl{c}{{Cb{e}}}}}{}}00{c{{AIn{{j{e}}}}}{{Gd{}{{Cb{}}}}}l}{c{{AIn{{j{Al}}}}}{{Gd{}{{Cb{d}}}}}}{e{{ADh{{Ab{c}}}}}{}{{Gd{}{{Cb{c}}}}}}{eB@h{{AMf{Mj}}}{{Gd{}{{Cb{c}}}}}}{{gFd}{{CMn{Fn}}}H`{{Gd{}{{Cb{{C`{c}}}}}}}{{Gd{}{{Cb{{C`{e}}}}}}}}0{e{{CMn{Fn}}}{{Gd{}{{Cb{{C`{d}}}}}}}{{Gd{}{{Cb{{C`{c}}}}}}}}{{Aje}ABd{}{{Ch{}{{Cb{{C`{c}}}}}}}}{{gACn}{{CMn{Fn}}}BEb{{Gd{}{{Cb{{C`{c}}}}}}}{{Gd{}{{Cb{{C`{e}}}}}}}}763{{Aje}ABd{}{{Ch{}{{Cb{c}}}}}}{c{{AIn{{j{e}}}}}{{Hf{}{{Cb{}}}}}l}{e{{ADh{{Ab{c}}}}}Hh{{Hf{}{{Cb{c}}}}}}`{c{{Bb{{BG`{CJn}}B`}}}{{AMf{CFl}}}}{c{{Bb{{CJj{CJn}}B`}}}{{AMf{CFl}}}}{{}{{ADh{c}}}N`}{c{{ADh{ec}}}BGnN`}{{Aj{Ab{c}}}ABd{}}{{Aj{Ab{{C`{c}}}}}ABd{}}{Aj{{Bb{CN`}}}}{c{{AIn{{j{e}}}}}{{Hn{}{{Cb{}}}}}l}{c{{AIn{{j{Al}}}}}{{Hn{}{{Cb{d}}}}}}{Eb{{BHj{{ADh{BHh}}}}}}{{Ajc}CNb{}}{{{Fj{c}}ACn}{{AIb{}{{AKd{c}}{AKf{e}}{AKh{g}}}}}AB`{AKj{AKl{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}{{{Fj{c}}ACn}{{AIb{}{{AKd{e}}{AKf{c}}{AKh{g}}}}}{AKj{AKl{e}}}AB`{{Fl{}{{Cb{e}}}}HnHhHj}}`{{AjcFd}AFf{}}{{FdcACn}{{AIb{}{{AKd{c}}{AKf{e}}{AKh{g}}}}}AB`{AKj{AKl{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}{{AjFd}AFh}{{FdACn}{{AIb{}{{AKd{c}}{AKf{e}}{AKh{g}}}}}AB`{AKj{AKl{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}``{{BGfc{BHj{{ADh{BHh}}}}CNd}BGf{{Dd{An}{{Db{{Bb{{C`{An}}B`}}}}}}HhHj}}`{{BGfc}BGf{{AMf{BGf}}}}{{BGfFdFd}BGf}{{{ADh{ce}}{ADh{ce}}}d{CNfN`}BGn}{{BFjFd}{{Bb{I`B`}}}}{{BIbBGfd}BGf}{{BIdBGfd}BGf}{{{AIb{}{{AKd{c}}{AKf{e}}{AKh{g}}}}Fd}{{C`{c}}}AB`{AKj{AKl{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}6{{B@hAj}{{C`{Eb}}}}{{AFjFd}{{Bb{I`B`}}}}{{ALdFd}{{Bb{I`B`}}}}{{AFjFd}I`}{{ALdFd}I`}{{B@hFd}{{C`{{Gb{{ANd{ANb}}Eb}}}}}}0{BNbBGf}{BBhCEb}{CEdEb}{{}Eb}{{BOfFnBO`{C`{AJd}}}{{Bb{BNnB`}}}}00{{CGnB@hCNhMjMj}{{C`{Mj}}}}{{BHhB@hCNh{Ab{Mj}}}Mj}{{B@hAj}{{C`{Mj}}}}{ACn{{Ab{AMh}}}}{CNjFd}{{B@hAj}{{C`{{Gb{Fd{ANd{ANb}}Eb}}}}}}{{{BLd{c}}}{{Bb{{ADh{CEj}}B`}}}BGd}{{{ADh{ce}}}{{C`{c}}}N`BGn}{{{ADh{ce}}}cN`BGn}{CNl{{Fj{Aj}}}}{B@h{{Fj{Aj}}}}{BAb{{Fj{Aj}}}}{{BFjFd}{{C`{Ib}}}}{{BFjFdFd}{{C`{Ib}}}}{BIj{{C`{{BHj{{ADh{BHh}}}}}}}}{{BOfBNnBO`Jb{C`{AJd}}BOd}{{Bb{CNnB`}}}}{c{{Bb{CO`B`}}}{BIhBGdN`}}{{CK`B@h}{{Bb{{ADh{B@h}}B`}}}}{{cFd}{{Fj{{Gb{FdFd}}}}}{{Ch{}{{Cb{Fd}}}}}}{{ANfFd}I`}{{{AIb{}{{AKd{c}}{AKf{e}}{AKh{g}}}}Fd}{{C`{c}}}AB`{AKj{AKl{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}{{BFjFd}I`}{CFbd}{CBbd}`{{BBhe}BGl{{AMf{BGf}}AB`}{{H`{{Ab{c}}}}}}{{COb{Fj{An}}BAh}{{Bb{{Gb{An{Fj{An}}Bf}}B`}}}}{{BBhBGfcBAh}BGl{{H`{{Ab{BGf}}}}}}2{{ANlANl{Ab{Fn}}BO`Jb{C`{AJd}}}{{Bb{{Fj{{Nl{Ll}}}}B`}}}}{{BOf{Ab{Fn}}BO`Jb{C`{Ed}}ddBOd}{{Gb{{Fj{{Nl{Ll}}}}{Fj{Fn}}{Fj{Fn}}}}}}{{BDhdd}{{Bb{BfB`}}}}{{{AEn{}{{Cb{c}}}}e}c{}{}}{{BGfc}BGf{{AMf{BGf}}}}{{{ADh{ce}}{ADh{ce}}}d{CNfN`}BGn}21{{{BG`{c}}d}{{BG`{c}}}BGd}{{CBbd}CBb}`{BFjd}{COdd}`{{BAhc}bAFl}{{BBnc}bAFl}{{ANlc}bAFl}{{BO`c}bAFl}{{BObc}bAFl}{{BOdc}bAFl}{{BOhc}bAFl}{{BOjc}bAFl}{{BGbc}bAFl}{{BOlc}bAFl}{{BOnc}bAFl}{{C@`c}bAFl}{{C@bc}bAFl}{{C@dc}bAFl}{{C@fc}bAFl}{{C@hc}bAFl}{{BFhc}bAFl}{{C@jc}bAFl}{{C@lc}bAFl}{{C@nc}bAFl}{{CA`c}bAFl}{{CAbc}bAFl}{{CAdc}bAFl}{{CAfc}bAFl}{{CAhc}bAFl}{{CAjc}bAFl}{{CAlc}bAFl}{{CAnc}bAFl}{{CB`c}bAFl}{{CBdc}bAFl}{{CBfc}bAFl}{{CBhc}bAFl}{{CBlc}bAFl}{{CBnc}bAFl}{{BJlc}bAFl}{{BGfc}bAFl}{{CClc}bAFl}{{BMfc}bAFl}{{CCnc}bAFl}{{CD`c}bAFl}{{CDbc}bAFl}{{BHnc}bAFl}{{CDhc}bAFl}{{CDjc}bAFl}{{CDlc}bAFl}{{CDnc}bAFl}{{CE`c}bAFl}{{CEdc}bAFl}{{CEfc}bAFl}{{CEhc}bAFl}{{{ADh{ce}}g}b{COfN`}BGnAFl}{{BCbc}bAFl}{{B@hc}bAFl}{{AMhc}bAFl}{{Mhc}bAFl}{{CF`c}bAFl}{{COhAnCAbd}{{Bb{{Gb{{Gb{{Fj{Ll}}{Fj{Ll}}}}d}}B`}}}}{{COhAnCAbd}{{Bb{{Gb{{AIj{Ll}}{AIj{Ll}}}}B`}}}}{{BIdBGf}BGf}{{BGl{C`{Fd}}}BBh}{{BGf{C`{Fd}}}BGf}{BKh{{Bb{{j{Ah}}B`}}}}{BKh{{j{Ah}}}}`{{{Ab{{j{Ah}}}}Ajd}{{Bb{{j{Ah}}B`}}}}{COj{{j{Lh}}}}{CGj{{j{Lh}}}}{BNf{{Bb{{j{Lh}}B`}}}}`{CGl{{j{J`}}}}`{{BH`CA`}BH`}``{OhLl}`{{{In{JdJ`}}{j{Ah}}CF`{Ff{Fn}{{Db{AJb}}}}{Ff{AJb}{{Db{Fn}}}}AJdAJd}{{Bb{{j{J`}}B`}}}}{{{In{JdJ`}}{C`{Aj}}{Ff{Fn}{{Db{AJb}}}}{Ff{AJb}{{Db{Fn}}}}AJdAJd}{{Bb{{j{J`}}B`}}}}{BGfBGf}{AJbd}{{{BKj{c}}d}{{BKj{c}}}BKn}``0`{{}b}{cb{AB`BGn}}``{{CNlAj}{{C`{Fd}}}}{{B@hAj}{{C`{Fd}}}}{{BAbAj}{{C`{Fd}}}}{{{Ab{Ll}}}{{`{{Ch{}{{Cb{Fd}}}}}}}}{{CO`A`{C`{Fd}}d{C`{B@h}}FdFd{C`{BGb}}{C`{A`}}A`{C`{BOl}}dd{C`{Fd}}d}{{Bb{{Gb{B@hFdFd}}B`}}}}{{{BG`{c}}{C`{Fd}}}{{BG`{c}}}BGd}{{{CJh{c}}{C`{Fd}}}{{CJh{c}}}BGd}{{{CJj{c}}{C`{Fd}}}{{CJj{c}}}BGd}``{{}Fd}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`{A@l{{Cf{Cd}}}}{{COlAObee}{{Bb{AObB`}}}{{H`{Aj}}}{{Gd{}{{Cb{c}}}}}}{{BBhBBhcc}BBh{{AMf{BGf}}}}{NbIh}`{{B@hFd{ANd{ANb}}Eb}{{Bb{{C`{Eb}}B`}}}}{{BGfBGfFnEb}BGf}{{BGfBGfBGf}BGf}`{{AnC@d}An}{{BGfC@d}BGf}{ce{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BCd{{Gb{{Fj{AMh}}{Fj{{Cf{Cd}}}}{C`{Hd}}}}}}{{{AIn{c}}}c{}}{{{ADh{ce}}}{{C`{c}}}{}BGn}33{BGf}{B@h}{BCd}{COnBId}{BIdBId}{{{ADh{ce}}}{}N`BGn}{B@jAn}{{{ADh{BFj}}}An}{CEjD@`}{BBj{{Fj{c}}}{}}{c{{Fj{Ed}}}{}}{c{{Fj{{ANd{ANb}}}}}{}}{CA`d}{{AnAnAnCB`}{{Bb{{j{Al}}B`}}}}{{BGfccCB`}BGf{{AMf{BGf}}}}{cd{{H`{CLj}}}}{{{Ab{A`}}}d}{{ANl{C`{Aj}}}d}{BFjd}{B@hd}{BAbd}{BLfd}{BGfBGf}{An{{Bb{{j{Al}}B`}}}}{AFn{{Bb{{j{Al}}B`}}}}2{ANld}{{AnAn}{{Bb{{j{Al}}B`}}}}{{BGfc}BGf{{AMf{BGf}}}}54{AG`{{Bb{{j{Al}}B`}}}}6{CGh{{j{Al}}}}{CGj{{j{Al}}}}{BNf{{Bb{{j{Al}}B`}}}}{BJ`d}:::{BFj{{j{Al}}}};;0{Nbd}<{Ohd}`{And}{{{ADh{CJn}}}d}{{}d}{{D@bEf}{{Bb{dB`}}}}{cd{}}03?{CGh{{j{Ij}}}}{CGj{{j{Ij}}}}{BNf{{Bb{{j{Ij}}B`}}}}{{{AIb{}{{AKd{c}}{AKf{e}}{AKh{g}}}}}{{ADf{cgADd}}}AB`{AKj{AKl{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}{B@h{{`{{Ch{}{{Cb{{Gb{{ANd{ANb}}Eb}}}}}}}}}}{BCd{{ADf{{Fj{{Cf{CId}}}}D@dADd}}}}{B@h{{`{Jl}}}}000{CFb{{Bb{{C`{{Cf{Ch}}}}B`}}}}{{BIbBGfd}BGf}{{BIdBGfd}BGf}{{COlAObeeBFh}{{Bb{AObB`}}}{{H`{Aj}}}{{Gd{}{{Cb{c}}}}}}{{BBhBBhccBFh}BBh{{H`{{Ab{BGf}}}}}}{{D@fAObAjAjCAj{C`{I`}}{C`{Ed}}}{{Bb{AObB`}}}}{{D@hAObAjAjeeCAj{C`{I`}}}{{Bb{AObB`}}}{{H`{Aj}}}{{Gd{}{{Cb{c}}}}}}{BBhBH`}{{D@jAjd}{{Bb{{j{Ah}}B`}}}}{{D@j{j{Ah}}d}{{Bb{{j{Ah}}B`}}}}{{BH`d}BH`}`{CInBGf}{D@lBGf}{CEj{{C`{{Fj{D@n}}}}}}``{{}BGf}{BIdBGf}{BBhBBh}{{{AIb{}{{AKd{c}}{AKf{e}}{AKh{g}}}}}{{C`{c}}}AB`{AKj{AKl{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}{BGfBGf}{DA`BBh}3{{{ADh{ce}}{ADh{ce}}}d{CNfN`}BGn}`{{COlAObee}{{Bb{AObB`}}}{{H`{Aj}}}{{Gd{}{{Cb{c}}}}}}{{BBhBBhcc}BBh{{AMf{BGf}}}}{{BH`c}BH`{{H`{{Ab{BGf}}}}}}{{{A@b{}{{Ol{c}}{On{e}}{A@`{g}}}}{A@b{}{{Ol{c}}{On{e}}{A@`{g}}}}}e{}{}{}}{{{A@b{}{{Ol{c}}{On{e}}{A@`{g}}}}c}e{}{}{}}{{c{A@b{}{{Ol{c}}{On{e}}{A@`{g}}}}}e{}{}{}}<{BFjFd}<9{B@hFd}{BCdFd}{BAbFd}{{BBhLl}BBh}{{BFjFd}An}{BLfd}`{BGfBId}{cBGfDAb}{DAbBGf}{DAdBGf}{CEdBGf}{{BGfc}BGf{{AMf{BGf}}}}0``{{{BG`{c}}d}{{BG`{c}}}BGd}{{{CJj{c}}d}{{CJj{c}}}BGd}{{CBbd}CBb}{{BHdd}BHd}```{BGfBGf}{D@j{{j{Eh}}}}0{{D@j{Ab{An}}}{{Bb{{j{h}}B`}}}}{{D@jFnCHf}{{Bb{{j{h}}B`}}}}{{D@jFnd}{{Bb{AnB`}}}}{{D@j{j{Ah}}d}{{Bb{{j{Ah}}B`}}}}4{D@j{{Bb{AnB`}}}}{D@jAn}01{D@j{{Bb{{j{Eh}}B`}}}}{D@j{{j{h}}}}{{D@jAn}{{Bb{{j{h}}B`}}}}{{D@jFnFd}{{j{h}}}}{{D@jEf}{{Bb{{j{h}}B`}}}}{{D@jA`}An}7{D@j{{Bb{{j{h}}B`}}}}01{{{AEn{}{{Cb{c}}}}e}c{}{}}{{BGfc}BGf{{AMf{BGf}}}}{{{ADh{ce}}{ADh{ce}}}d{CNfN`}BGn}21``````{{AJjAJj}{{Bb{{Gb{AJjAJj}}B`}}}}{{{j{h}}{j{h}}}{{Bb{{Gb{{j{h}}{j{h}}}}B`}}}}{{{ADh{ce}}}cAB`{BGnAB`}}{{D@lc}BGf{{Dd{Aj}{{Db{{Bb{EdB`}}}}}}HhHj}}{{BBhcCEb{C`{{ADh{CK`}}}}{C`{Aj}}}BBh{{Dd{AOb}{{Db{{Bb{AObB`}}}}}}HhHj}}{{BGfc{BHj{{ADh{BHh}}}}}BGf{{Dd{An}{{Db{{Bb{{C`{An}}B`}}}}}}HhHj}}{{BGfBGfc{BHj{{ADh{BHh}}}}}BGf{{Dd{AnAn}{{Db{{Bb{{C`{An}}B`}}}}}}HhHj}}{{BGfc}{{Bb{BGfB`}}}{{Dl{BGf}{{Db{{Bb{BGfB`}}}}}}}}{{CNj{C`{Ed}}}{{Bb{MjB`}}}}{{CNjc}{{Bb{MjB`}}}{{Oj{Eb}{{Db{Eb}}}}}}{c{{BHj{{ADh{BHh}}}}}{{Dd{Eb}{{Db{Eb}}}}HhHj}}{c{{BHj{{ADh{BHh}}}}}{{Dd{{Ab{Eb}}}{{Db{Eb}}}}HhHj}}{{BGfc}BGf{{Dl{BGf}{{Db{BGf}}}}}}{c{{BHj{{ADh{BHh}}}}}{{Dd{Mj}{{Db{Mj}}}}HhHj}}{{D@l{ADh{Dd}}}BGf}{c{{BHj{{ADh{BHh}}}}}{{Dd{{Ab{Mj}}}{{Db{Mj}}}}HhHj}}:{{ce{BHj{{ADh{BHh}}}}}BGf{{Dd{{Ab{An}}}{{Db{{Bb{{C`{An}}B`}}}}}}HhHj}{{H`{{Ab{BGf}}}}}}{{BGfc{Ab{BGf}}{BHj{{ADh{BHh}}}}}BGf{{Dd{{Ab{An}}}{{Db{{Bb{{C`{An}}B`}}}}}}HhHj}}{{BGfBHn{Ab{BGf}}dd}BGf}2{CNj{{Bb{MjB`}}}}0000{CEdCEd}{{{C`{{Ab{Fd}}}}BAb{C`{{Ab{An}}}}{C`{DAf}}}AOb}{{{C`{{Ab{Ed}}}}B@h{C`{{Ab{An}}}}d}{{C`{{Fj{Fd}}}}}}{AjBGf}{BIbBGf}{BIdBGf}{AGb{{C`{c}}}{}}{BBhBBh}{BGfBGf}{DAhAn}{BFj{{Bb{AnB`}}}}`75{AGb{{C`{Kl}}}}43{BFj{{C`{Kl}}}}987{AGd{{C`{c}}}{}}651{DAjAn}4{{BBhBBl}BBh}``{{{CJb{c}}d}{{CJb{c}}}BGd}{{B@hB@h}b}{{EbEb}{{Bb{EbB`}}}}````{CGl{{j{J`}}}}`{BNf{{Bb{{j{Ij}}B`}}}}1`{AjBGf}{BIbBGf}{BIdBGf}{AGb{{C`{c}}}{}}{BBhBBh}{BGfBGf}{DAhAn}{BFj{{Bb{AnB`}}}}{AGb{{C`{{Gb{cc}}}}}{}}``````{COj{{j{Lh}}}}{CGj{{j{Lh}}}}{BNf{{Bb{{j{Lh}}B`}}}}`=``6{CGh{{j{Lh}}}}21`{{DAl{C`{AJd}}}{{Bb{DAlB`}}}}{{DAn{C`{AJd}}}{{Bb{DAnB`}}}}{ANlFn}{ANld}{{{BGh{}{{Db{c}}}}An}c{}}{{ANlFn}ANl}{{BGfBGf}}{{BGjAn}{{Bb{AnB`}}}}``{BFjFd}{CFb{{C`{Fd}}}}{CBb{{C`{Fd}}}}{BHd{{C`{Fd}}}}````{{{BKj{c}}Fd}{{BKj{c}}}BKn}`{BIbBGf}{BIdBGf}{AEh{{Bb{FdB`}}}}{BGfBGf}{BFj{{Bb{FdB`}}}}{BFjAj}{BGfD@l}````33`{COj{{j{Ij}}}}{CGj{{j{Ij}}}}{BNf{{Bb{{j{Ij}}B`}}}}{CGl{{j{J`}}}}{ANlFn}`{{{ADh{ce}}{ADh{ce}}}d{CIbN`}BGn}{CAbd}{BGf}{An{{Bb{AnB`}}}}0{ANld}{{DB`Fd}{{C`{Fd}}}}{{BGfc}BGf{{AMf{BGf}}}}0{CNj{{Bb{MjB`}}}}{{}c{}}{cCJ`BIh}{cCG`BKn}2{{Ajc}DBb{}}{c{{AIn{c}}}{}}{BBhBH`}{c{{BG`{c}}}BGd}{{{Ab{Mj}}}CNj}{c{{BKj{c}}}BKn}{c{{CJb{c}}}BGd}{c{{BIf{c}}}BIh}{c{{CJd{c}}}BKn}{{}CFn}{c{{BL`{c}}}BKn}{{}CGb}{FnANl}{c{{CJf{c}}}BKn}{c{{CJh{c}}}BGd}{{ANlANlANl}BOf}{c{{CJj{c}}}BGd}{{DBd{ADh{CEj}}{ADh{BAb}}Fd{C`{{Fj{Fd}}}}{C`{{ADh{CJl}}}}{C`{DAf}}Fdd{C`{{Fj{An}}}}CAh}{{Bb{BLfB`}}}}{c{{BLd{c}}}BGd}{c{{BLh{c}}}{BKnBKn}}{CA`BFh}{cCBb{{H`{CLj}}}}{cBHd{{H`{CLj}}}}{c{{BHj{c}}}{}}{{BGfBGfBGf}CDd}{{}CDf}{{Aj{Fj{Mj}}{BHj{{ADh{BHh}}}}c}BMjBIj}{c{{ADh{c}}}{}}{{}B@h}{{ACn{Fj{{Cf{Cd}}}}{C`{Hd}}}BCd}{{cACnd}AMh{{AMf{Ed}}}}{e{{ADh{c}}}{}{{Oj{{CHj{c}}}{{Db{c}}}}}}{ACnBCd}{{AGfFdFd}{{j{c}}}D`}{{BFjFdFd}An}{AjBGb}{{ce}{{ADh{ce}}}{}BGn}{{B@hFd{ANd{ANb}}Eb}{{Bb{B@hB`}}}}{{FnAj}{{Bb{AnB`}}}}{EdBGb}{{ACnFd}BCd}{{{ADh{{Ab{CFl}}}}}CBb}{{{ADh{{Ab{CFl}}}}}BHd}{A`BGb}{{}{{ADh{{BKf{c}}}}}{}}{c{{ADh{{BKf{e}}c}}}BGn{}}{Fd{{ADh{{Ab{{BKf{c}}}}}}}{}}{{Fdc}{{ADh{{Ab{{BKf{e}}}}c}}}BGn{}}3210{DBfC`}{CNnC`}{{BLlFd}{{Bb{{C`{{Fj{AOb}}}}B`}}}}{{BM`Fd}{{Bb{{C`{{Fj{AOb}}}}B`}}}}{{BLnFd}{{Bb{{C`{{Fj{AOb}}}}B`}}}}{{BMbFd}{{Bb{{C`{{Fj{AOb}}}}B`}}}}{{BLfFd}{{Bb{{C`{{Fj{AOb}}}}B`}}}}{{BGf{BCj{BGf}}}b}0{BGfBGf}0{{{AEn{}{{Cb{c}}}}e}c{}{}}0`{{}Oh}{{}Nb}`{BFjFd}{BBhBBh}5````{{{BLd{c}}}{{Bb{FdB`}}}BGd}````{AF`{{Bb{{G`{Fn}}B`}}}}{{BH`c}BH`{{H`{{Ab{BGf}}}}}}{{BBh{BFb{BF`}}{BFb{BFd}}}{{Bb{BEnB`}}}}`{{BGfc}BGf{{AMf{BGf}}}}{CGh{{j{Lb}}}}{CGj{{j{Lb}}}}{BNf{{Bb{{j{Lb}}B`}}}}{BNf{{Bb{{j{Ij}}B`}}}}{{CCfc}BGf{{AMf{BGf}}}}{{CCjc}BGf{{AMf{BGf}}}}{{COlAObee}{{Bb{AObB`}}}{{H`{Aj}}}{{Gd{}{{Cb{c}}}}}}{{BBhBBhcc}BBh{{AMf{BGf}}}}`{{BGfe}BGf{{AMf{BGf}}AB`}{{H`{{Ab{c}}}}}}{{BGfeCE`}BGf{{AMf{BGf}}AB`}{{H`{{Ab{c}}}}}}```{AjANl}{{Aj{Ab{Aj}}Aj}{{In{IlIj}}}}{{Aj{Ab{Aj}}Aj}{{In{JnJ`}}}}{{Aj{Ab{Aj}}AjJb}{{In{JdJ`}}}}`{{ANlANl}{{C`{ANj}}}}{{{ADh{ce}}{ADh{ce}}}{{C`{ANj}}}{CNfN`}BGn}{CFbCLj}{CBbCLj}{BHdCLj}{CFb{{Ab{CFl}}}}{CBb{{Ab{CFl}}}}{BHd{{Ab{CFl}}}}``{{}BGf}{c{{DBh{{ADh{c}}}}}{}}{{ce}{{DBh{{ADh{ce}}}}}{}BGn}````{{BGfc}BGf{{AMf{BGf}}}}```{{D@lAj}BGf}0{{AObAObd}{{Bb{{Gb{{Od{{Fj{Ll}}{Fj{Nb}}}}{Od{{Fj{Oh}}{Fj{Nb}}}}}}B`}}}}`{DAhAn}{BGfBGf}{BBh{{Bb{{Gb{AObAOb}}B`}}}}``{{{ADh{c}}DBj}b{AIfN`}}{{{ADh{ce}}{ADh{ce}}}dN`BGn}{{AjBGfMh}BGf}{{AGdKlMh}{{Bb{{C`{c}}B`}}}{}}{{BBhBGfMh}BBh}{{BGfBGfMh}BGf}{{DAjKlMh}{{Bb{AnB`}}}}{{BFjKlMh}{{Bb{AnB`}}}}{CGh{{j{Lh}}}}{CGj{{j{Lh}}}}{BNf{{Bb{{j{Lh}}B`}}}}{{ce}{{Bb{gB@d}}}{}CIl{}}```{{{BG`{c}}d}{{BG`{c}}}BGd}{{CBbd}CBb}`{{DBlCBn{C`{Ih}}}An}{{BGfCBn{C`{Ih}}}BGf}{{{ADh{CJn}}{Ab{A`}}}{{Bb{FdB@d}}}}{{{ADh{CJn}}DBn}{{Bb{bB@d}}}}{{{BLd{c}}CAh}{{BLd{c}}}BGd}{{{ADh{CJn}}{Fj{A`}}}{{Bb{FdB@d}}}}{{{ADh{CJn}}Ed}{{Bb{FdB@d}}}}{c{{Bb{eB@d}}}{}DC`}{{{ADh{CJn}}{Ab{DCb}}}{{Bb{FdB@d}}}}{CFbd}{BFjAn}{CBbd}{BHdd}```{{ce}BGf{{Dd{AnAn}{{Db{{Bb{{C`{An}}B`}}}}}}HhHjAB`}{{H`{{Ab{BGf}}}}}}{AGhAn}0{{{BGh{}{{Db{c}}}}An}c{}}{{BGfBGf}}{{BGjAn}{{Bb{AnB`}}}}{{B@hAj}{{C`{Eb}}}}{{BFjAj}b}{{BBhei}BBh{{H`{Aj}}}{{Gd{}{{Cb{c}}}}}{{H`{Aj}}}{{Gd{}{{Cb{g}}}}}}{{B@hAj{ANd{ANb}}}{{C`{{ANd{ANb}}}}}}{{CIn{Fj{Ed}}}BGf}{{cBGf}BGf{{AMf{BGf}}}}{{An{j{Eh}}}{{Bb{{j{h}}B`}}}}{{BGfc}BGf{{AMf{BGf}}}}{{AnAnAnAn{C`{Eb}}}{{Bb{AnB`}}}}{{BKhAjAj}{{Bb{{j{Ah}}B`}}}}{{BGfcc{C`{c}}{C`{Eb}}}BGf{{AMf{BGf}}}}1{{CNj{C`{Eb}}}{{Bb{MjB`}}}}{{BKhAjAjFd}{{Bb{{j{Ah}}B`}}}}3{{{In{JdJ`}}{C`{Aj}}{j{Ah}}CF`}{{Bb{{In{JdJ`}}B`}}}}{{BGf{Ab{Fn}}}BGf}{CLjCFl}`{AGjAGj}{BFjAn}{BIbBGf}{BIdBGf}{BBhBBh}{BGfBGf}`{{BH`c}BH`{{H`{{Ab{BGf}}}}}}{{COb{Fj{An}}BBn}{{Bb{{Gb{An{Fj{An}}Bf}}B`}}}}{{BBhBGfcBBn}BGl{{H`{{Ab{BGf}}}}}}{{BGfBBn}BGf}{{AGlDdMl}{{Bb{AnB`}}}}{{BGf{ADh{Dd}}{BHj{{ADh{BHh}}}}Ml}BGf}{{BFjDdMl}{{Bb{AnB`}}}}{{BGfFdc}BGf{{Dl{{j{E`}}}{{Db{{C`{Kl}}}}}}HhHjDf}}{{DCdBNj}{{Bb{AnB`}}}}{{BGfCKb}BGf}100101{{BGfMhKlCKb}BGf}212121{{DCf{j{Ah}}ANl{C`{AJd}}}{{Bb{DCfB`}}}}{{BNdLl}{{Bb{AnB`}}}}{{BGfLl}BGf}{{BOfFn{C`{AJd}}}{{Bb{FnB`}}}}0{{BNdLf}{{Bb{AnB`}}}}{{BGfLf}BGf}2````{CFb{{C`{DAf}}}}{CBb{{C`{DAf}}}}{BHd{{C`{DAf}}}}`````{{D@j{j{h}}}{{j{h}}}}{{}{{BHj{{ADh{BHh}}}}}}{{BGfBGfdd{C`{Ih}}}BGf}0{{{BG`{c}}Fd}{{BG`{c}}}BGd}{{BHbDCh}{{Bb{AObB`}}}}{{BHdDCh}{{Bb{AObB`}}}}{{cCBj}{{Bb{BBhB`}}}{{H`{CLj}}}}{{{ADh{{Ab{CFl}}}}CBj}{{Bb{BBhB`}}}}{{cCC`}{{Bb{BBhB`}}}{{H`{CLj}}}}{{{ADh{{Ab{CFl}}}}CC`}{{Bb{BBhB`}}}}{{DCj{Ab{Ll}}e}{{Bb{AnB`}}}Df{{Gd{}{{Cb{{C`{c}}}}}}}}{{AGnc{C`{e}}}{{Bb{AGnB`}}}{{Gd{}{{Cb{Ll}}}}}{}}{{AGnci}{{Bb{AGnB`}}}{{Gd{}{{Cb{Ll}}}}}{}{}{{Dd{{C`{e}}}{{Db{{C`{g}}}}}}}}{{{CJb{c}}}{{Bb{{ADh{BAb}}B`}}}BGd}{{{BIf{c}}}{{Bb{B@hB`}}}BIh}{BLf{{ADh{BAb}}}}{{{BLd{c}}}{{Bb{{ADh{BAb}}B`}}}BGd}{{BHb{C`{Fd}}}{{Bb{{ADh{B@h}}B`}}}}{BBh{{Bb{{ADh{B@h}}B`}}}}{{BHd{C`{Fd}}}{{Bb{{ADh{B@h}}B`}}}}{CEjDCl}``````{COj{{j{Lh}}}}{CGj{{j{Lh}}}}{BNf{{Bb{{j{Lh}}B`}}}}`{CGl{{j{J`}}}}`{{{ADh{CJn}}DCn}{{Bb{IhB@d}}}}{{BBhc}BBh{{H`{{Ab{BGf}}}}}}0````{{AGn{j{Al}}{C`{c}}}{{Bb{AGnB`}}}{}}{{B@hAjEb}{{C`{Eb}}}}{{B@hFdEb}{{C`{Eb}}}}{{{BLd{c}}d}{{BLd{c}}}BGd}{{{BLh{c}}d}{{BLh{c}}}BKn}{{{CJb{c}}d}{{CJb{c}}}BGd}{{{BIf{c}}d}{{BIf{c}}}BIh}{{{CJh{c}}d}{{CJh{c}}}BGd}4{{CJ`d}CJ`}{{BGfId}BGf}{{BCd{C`{Hd}}}b}{{AH`Fn}{{j{c}}}D`}{{BFjFn}An}{{BIbBGf}BGf}{{BIdBGf}BGf}{{BBhc}BBh{{AMf{BGf}}}}{{BGfBGf}BGf}{{AHbFnc}{{j{e}}}{}D`}{{BBhce}BBh{{AMf{BGf}}}{{AMf{BGf}}}}{{BGfce}BGf{{AMf{BGf}}}{{AMf{BGf}}}}{{B@hAj}{{C`{Eb}}}}{{B@hFd}{{C`{{Gb{{ANd{ANb}}Eb}}}}}}{BGfBGf}{A@nb}{BFjb}{{BGf{C`{Ih}}}BGf}``{{BBhCFlBOn}{{Bb{bB`}}}}{{BBhCFlC@h}{{Bb{bB`}}}}{{BBhCFlC@n}{{Bb{bB`}}}}{{BBhCFlCAl}{{Bb{bB`}}}}`````{{BFjFnFd}An}{{BIdBGfBGf}BGf}{{BBhFnLl}BBh}={{BCdFdFd}b}0```{{AHdFdFd}AHd}{{cFdFd}e{}{}}1022{{BCdFdFd}BCd}0`{{AEfd}{{j{c}}}D`}{{BIbEf}BGf}{{BIdEf}BGf}{{BBhcEl}BBh{{BBj{{ANd{ANb}}}}}}{{BGfEf}BGf}{{BGfeEl}BGf{{AMf{BGf}}AB`}{{H`{{Ab{c}}}}}}{{BBhcEl}BBh{{H`{{Ab{BGf}}}}}}{{AEfEf}{{j{c}}}D`}{{BFjEf}{{Bb{AnB`}}}}{{{ADh{c}}}{{C`{AIf}}}{AIfN`}}{{BKh{j{Ah}}}{{j{h}}}}{{BKh{j{Ah}}Fd}{{Bb{AJhB`}}}}0{{{j{Ah}}{j{Ah}}e}{{j{h}}}{{Ch{}{{Cb{Aj}}}}}{{Dd{AjAj}{{Db{c}}}}}}2{{{j{Ah}}{j{Ah}}Fded}{{Bb{AJhB`}}}{{Ch{}{{Cb{Aj}}}}}{{Dd{AjAj}{{Db{c}}}}}}2{BGfBGf}`{{CFj{Ab{A`}}}{{j{Al}}}}{{CFj{j{n}}}{{j{Al}}}}`{{BIbA`}BGf}{{BIdA`}BGf}{{AHfA`}{{C`{Kl}}}}{{BBhA`}BBh}{{BGfA`}BGf}{{BFjA`}{{C`{Kl}}}}{{DD`A`}An}{{BFjA`}{{Bb{AnB`}}}}{{LlLl}Nb}{BGfDDb}{{{j{Ah}}Ajd}{{j{Ah}}}}{{BKhAn}{{Bb{{j{Ah}}B`}}}}{BKh{{j{Eh}}}}0{BKh{{j{Ah}}}}{{BKhAnAn}{{Bb{{j{Ah}}B`}}}}3````{{BNfAj}{{Bb{AnB`}}}}`{{BGfEb}BGf}`{{{j{Ah}}{j{Ah}}}{{j{Ah}}}}606060{{BKh{j{Ah}}}{{j{Ah}}}}10{{{ADh{ce}}}FdN`BGn}{BGfCIn}{{{BGh{}{{Db{c}}}}An}c{}}{{BGfBGf}}{{BGjAn}{{Bb{AnB`}}}}{{BH`c}BH`{{H`{Aj}}}}{{D@lAj}BGf}{BFhAj}`1{AjBGf}{BIbBGf}{BIdBGf}{AGb{{C`{c}}}{}}{BBhBBh}{BGfBGf}{DAhAn}{{}{{BHj{{ADh{BHh}}}}}}{{ci}{{Bb{gB@d}}}{}{}{}{{Oj{e}{{Db{g}}}}}}{{BIdBGf}BGf}{{BBhLl}BBh}{{BGl{C`{Fd}}}BBh}{{BGf{C`{Fd}}}BGf}{{AHhc}{{Bb{AHhB`}}}N`}{{BFj{j{Eh}}}{{Bb{AnB`}}}}{{DDd{Ab{Nb}}Id}DDd}{{DDd{Ab{Nb}}}DDd}{{BFj{Ab{Ll}}}{{Bb{AnB`}}}}{{BFj{Ab{Ll}}}An}{{AHjc}AHjN`}{{BFj{j{Eh}}}An}{BCd{{C`{Hd}}}}{{BGfBGfBGf}BGf}{{CCdc}CCf{{AMf{BGf}}}}{{CChc}CCj{{AMf{BGf}}}}`{{BGfBGfANlBO`}BGf}```{{BNfJb}{{Bb{{j{J`}}B`}}}}{BBh{{Bb{{Gb{BEn{BFb{BF`}}{BFb{BFd}}}}B`}}}}{CCb{{Bb{{Gb{BEn{BFb{BF`}}{BFb{BFd}}}}B`}}}}1{CEd{{C`{I`}}}}{{BIdFd}BGf}{{B@hd}BAb}{BCd{{Cf{Cd}}}}{AHl{{Fj{{Ab{A`}}}}}}{{BBhd}{{Bb{EdB`}}}}{BGf{{Bb{EdB`}}}}{{DDf{C`{Aj}}d}{{Bb{AObB`}}}}{{BFn{C`{Aj}}d}{{Bb{AObB`}}}}{{BJ`B@h}{{Bb{MjB`}}}}{{BGfB@hCNh}{{Bb{MjB`}}}}{{BKh{j{Eh}}d}{{Bb{{j{J`}}B`}}}}{BIbBGf}{BKh{{j{Ah}}}}{D@lBGf}{Oh{{C`{Ll}}}}{ce{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BGfBGf}{CNj{{Bb{MjB`}}}}{{BNfAj}{{Bb{AnB`}}}}{cEd{}}000000000{{B@hB@h}{{Bb{dB`}}}}`887``{{BBhLlcEl}BBh{{H`{{Ab{BGf}}}}}}{{{A@b{}{{Ol{c}}{On{e}}{A@`{g}}}}{A@b{}{{Ol{c}}{On{e}}{A@`{g}}}}}g{}{}{}}{{{A@b{}{{Ol{c}}{On{e}}{A@`{g}}}}c}g{}{}{}}{{c{A@b{}{{Ol{c}}{On{e}}{A@`{g}}}}}g{}{}{}}{{DDh{C`{AJd}}{j{Ah}}Aj}{{Bb{DDhB`}}}}{{ANlFn{C`{AJd}}ceg}{{Bb{FnB`}}}{{Dd{Fn}{{Db{Fn}}}}}{{Dd{Fn}{{Db{AJb}}}}}{{Dd{AJb}{{Db{Fn}}}}}}{{ANlFn{C`{AJd}}}{{Bb{FnB`}}}}{{BOfFn{C`{AJd}}}{{Bb{FnB`}}}}00010{{{BG`{c}}d}{{BG`{c}}}BGd}{{CBbd}CBb}`32{g{{Bb{AJne}}}{}{}{{Gd{}{{Cb{{Bb{ce}}}}}}}}0{{ACng}{{Bb{AK`e}}}{}{}{{Gd{}{{Cb{{Bb{ce}}}}}}}}0{AM`{{Bb{eg}}}{}{{AJn{c}}AIb}{}}0{{AM`ACn}{{Bb{eg}}}{}{{AK`{c}}AIb}{}}0{{ABfAj}{{Bb{{j{c}}e}}}D`{}}{{ABh{j{c}}}{{Bb{{j{c}}e}}}D`{}}10{{ABhAjEb}{{Bb{{j{c}}e}}}D`{}}0{c{{Bb{e}}}{}{}}0000000000000000{BNj{{Bb{BNlB`}}}}111111111111111111111111111111111111111111111111111111111111111111111111111111111111111{I`{{Bb{CEdB`}}}}222{{{ADh{{Ab{c}}e}}}{{Bb{{ADh{{Nl{c}}e}}}}}{}BGn}3333{BNj{{Bb{MlB`}}}}4444444444{D@`{{Bb{CEjAOj}}}}{{B@hAj}{{Bb{EbB`}}}}{{B@hFd}{{Bb{{Gb{{ANd{ANb}}Eb}}B`}}}}{{B@hAj}{{Bb{MjB`}}}}{{B@hAj}{{Bb{{Gb{Fd{ANd{ANb}}Eb}}B`}}}}3{{CNlAj}{{Bb{FdB`}}}}:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::{{CNjc}{{Bb{MjB`}}}{{Oj{Eb}{{Db{{Bb{EbB`}}}}}}}}{{CNjc}{{Bb{MjB`}}}{{Oj{{Ab{Eb}}}{{Db{{Bb{EbB`}}}}}}}}{{BGfc}{{Bb{BGfB`}}}{{Dl{BGf}{{Db{{Bb{BGfB`}}}}}}}}{{CNjc}{{Bb{MjB`}}}{{Oj{Mj}{{Db{{Bb{MjB`}}}}}}}}{{DB`Fd}{{Bb{FdB`}}}}{A`{{Bb{CBdB`}}}}{Ll{{Bb{CBhB`}}}}{Lf{{Bb{CBlB`}}}}{c{{Bb{{ADh{c}}DDj}}}{}}{{ACn{Fj{{Cf{Cd}}}}{C`{Hd}}}{{Bb{BCdB`}}}}{{ce}{{Bb{{ADh{ce}}DDj}}}{}BGn}{{}{{Bb{{ADh{{BKf{c}}}}DDj}}}{}}{c{{Bb{{ADh{{BKf{e}}c}}DDj}}}BGn{}}10`{c{{Bb{{DBh{{ADh{c}}}}DDj}}}{}}{{ce}{{Bb{{DBh{{ADh{ce}}}}DDj}}}{}BGn}{{BIj{Fj{A`}}}{{Bb{bB`}}}}{{{ADh{ce}}}{{Bb{c{ADh{ce}}}}}{}BGn}````{cOf{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{}Aj}```{AEh{{Bb{AEhB`}}}}{BIbBGf}{BIdBGf}{{BBh{C`{{Fj{Ed}}}}B@n}BBh}{BGfBGf}{BFj{{Bb{AnB`}}}}4321{{BBhe}BBh{{H`{Aj}}}{{Gd{}{{Cb{c}}}}}}{{{ADh{{DDl{c}}}}}{{Bb{cb}}}Hh}{{{ADh{ce}}}cAB`{BGnAB`}}4{{DDncAjANlANl}{{Bb{AObB`}}}{{BBj{Ed}}}}0{{{BLd{c}}d}{{BLd{c}}}BGd}```{{BH`CAb}BH`}`{BCd{{C`{Hd}}}}0{{{AIb{}{{AKd{c}}{AKf{e}}{AKh{g}}}}Fd}cAB`{AKj{AKl{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}{{D@bdd}{{Bb{AObB`}}}}{{BGfdd}BGf}`2`{BCd{{Ab{{Cf{Cd}}}}}}{{{AIb{}{{AKd{c}}{AKf{e}}{AKh{g}}}}}gAB`{AKj{AKl{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}{BCdD@d}{{BIbA`}BGf}{{BIdA`}BGf}{{AHfA`}{{C`{Kl}}}}{{BBhA`}BBh}{{BGfA`}BGf}{{BFjA`}{{C`{Kl}}}}{{DD`A`}An}{{BFjA`}{{Bb{AnB`}}}}`{{DE`Nf{Fj{Ih}}}{{Bb{bB`}}}}{{DE`Nf{Ab{Ih}}}{{Bb{bB`}}}}`{{{ADh{{DDl{c}}}}g}{{Bb{eb}}}Hh{}{{Oj{c}{{Db{e}}}}}}{ce{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`{{{ADh{ce}}}FdN`BGn}{CGh{{j{Lh}}}}{CGj{{j{Lh}}}}{BNf{{Bb{{j{Lh}}B`}}}}210{BOd{{C`{Ll}}}}{ANlFn}`{ANld}```{cCCd{{AMf{BGf}}}}{{CCfc}CCh{{AMf{BGf}}}}{{CCjc}CCh{{AMf{BGf}}}}`````{{BH`BBh}BH`}{{CDdBGf}CDd}{{{BKj{c}}{DEb{Fd}}}{{BKj{c}}}BKn}{{{CJh{c}}{DEb{Fd}}}{{CJh{c}}}BGd}{{BHd{C`{{DEb{Fd}}}}}BHd}{{CBbd}CBb}{Fdc{}}0{FdB@h}{{{BG`{c}}Fd}{{BG`{c}}}BGd}{{{CJj{c}}{C`{{DEb{Fd}}}}}{{CJj{c}}}BGd}{{BFhC@l}BFh}{{BBhBGf}BBh}{{B@h{ANd{ANb}}Eb}{{C`{Eb}}}}{{{BG`{c}}{C`{{Fj{Ed}}}}}{{BG`{c}}}BGd}{{{CJb{c}}{C`{{Fj{Ed}}}}}{{CJb{c}}}BGd}{{{BIf{c}}{C`{{Fj{Ed}}}}}{{BIf{c}}}BIh}{{{BLd{c}}{C`{{Fj{Ed}}}}}{{BLd{c}}}BGd}{{BBhc}BBh{{H`{{Ab{BGf}}}}}}`0{{{BG`{c}}{C`{Aj}}}{{BG`{c}}}BGd}{{CBb{C`{Aj}}}CBb}{{{CJd{c}}{C`{C@j}}}{{CJd{c}}}{}}{{CFn{C`{C@j}}}CFn}{{{BL`{c}}{C`{C@j}}}{{BL`{c}}}BKn}{{CGb{C`{C@j}}}CGb}{{{BLh{c}}CAn}{{BLh{c}}}BKn}{{BBhc}BBh{{H`{{Ab{BBh}}}}}}{{{BLh{c}}{C`{Fd}}}{{BLh{c}}}BKn}{{{BKj{c}}{C`{Ed}}}{{BKj{c}}}BKn}0{{CDdBGf}CDd}{{CDfBGf}CDf}{{{BG`{c}}d}{{BG`{c}}}BGd}{{CBbd}CBb}{{CNjEb}{{Bb{MjB`}}}}{{CBb{C`{{ADh{B@h}}}}}CBb}{{{BG`{c}}{C`{{ADh{B@h}}}}}{{BG`{c}}}BGd}{{{BG`{c}}{C`{{Ab{Eb}}}}}{{BG`{c}}}BGd}{{{BG`{c}}BOj}{{BG`{c}}}BGd}{{CBbBOj}CBb}{{{BG`{c}}A`}{{BG`{c}}}BGd}{{CBbA`}CBb}{{CFnCFl}CFn}{{CGbCFl}CGb}{{{BKj{c}}{C`{Fd}}}{{BKj{c}}}BKn}{{CDfBGfBGfBGf}CDf}<{{{BLd{c}}{C`{{Fj{An}}}}}{{BLd{c}}}BGd}{{CDdBGfBGfBGf}CDd}2{{CDdBGf}CDd}{{CDfBGf}CDf}{{{BG`{c}}d}{{BG`{c}}}BGd}{{{CJh{c}}d}{{CJh{c}}}BGd}{{{CJj{c}}d}{{CJj{c}}}BGd}{{CBbd}CBb}{{BHdd}BHd}{{CBb{C`{Fd}}}CBb}{{BHd{C`{Fd}}}BHd}{{{CJf{c}}DEd}{{CJf{c}}}BKn}{{{CJh{c}}DEd}{{CJh{c}}}BGd}{{{BKj{c}}Ed}{{BKj{c}}}BKn}{{AMh{DEf{EdEd}}}AMh}{{BAb{DEf{EdEd}}}BAb}=<<=<;8={{CFbc}CFb{{AMf{{C`{Fd}}}}}}{{{BG`{c}}{C`{Fd}}}{{BG`{c}}}BGd}{{{CJb{c}}{C`{Fd}}}{{CJb{c}}}BGd}{{{BIf{c}}{C`{Fd}}}{{BIf{c}}}BIh}{{{CJj{c}}{C`{Fd}}}{{CJj{c}}}BGd}{{{BLd{c}}{C`{Fd}}}{{BLd{c}}}BGd}{{CBbc}CBb{{AMf{{C`{Fd}}}}}}=<{{BHdc}BHd{{AMf{{C`{Fd}}}}}}63{{CDfBGf}CDf};{{{BG`{c}}{C`{BOl}}}{{BG`{c}}}BGd}{{CBb{C`{BOl}}}CBb}{{BBhCEb}BBh}{{{BG`{c}}BOh}{{BG`{c}}}BGd}{{CFbCFl}CFb}{{{BG`{c}}{C`{e}}}{{BG`{c}}}BGd{{AMf{CFl}}}}{{{CJj{c}}{C`{e}}}{{CJj{c}}}BGd{{AMf{CFl}}}}{{CBbCFl}CBb}{{BHdCFl}BHd}{{CFb{ADh{{Ab{CFl}}}}}CFb}{{CBb{ADh{{Ab{CFl}}}}}CBb}{{BHd{ADh{{Ab{CFl}}}}}BHd}{{{CJd{c}}d}{{CJd{c}}}{}}{{{BL`{c}}d}{{BL`{c}}}BKn}{{{BG`{c}}{C`{{ADh{CJl}}}}}{{BG`{c}}}BGd}{{{BLd{c}}{C`{{ADh{CJl}}}}}{{BLd{c}}}BGd}{{BBhd}BBh}{{{BG`{c}}{C`{{Fj{Fd}}}}}{{BG`{c}}}BGd}{{{CJb{c}}{C`{{Fj{Fd}}}}}{{CJb{c}}}BGd}{{{BIf{c}}{C`{{Fj{Fd}}}}}{{BIf{c}}}BIh}{{{CJh{c}}{C`{{Fj{Ed}}}}}{{CJh{c}}}BGd}{{{BLd{c}}{C`{{Fj{Fd}}}}}{{BLd{c}}}BGd}5{{{BG`{c}}{C`{A`}}}{{BG`{c}}}BGd}{{{BKj{c}}A`}{{BKj{c}}}BKn}{{CBb{C`{A`}}}CBb}{{{BKj{c}}C@b}{{BKj{c}}}BKn}{{CFbd}CFb}{{{BG`{c}}d}{{BG`{c}}}BGd}{{{CJj{c}}d}{{CJj{c}}}BGd}{{CBbd}CBb}{{BHdd}BHd}>{{{BLh{c}}{C`{Fd}}}{{BLh{c}}}BKn}{{CFbc}CFb{{AMf{{C`{DAf}}}}}}{{{BG`{c}}{C`{DAf}}}{{BG`{c}}}BGd}{{{CJb{c}}{C`{DAf}}}{{CJb{c}}}BGd}{{{BIf{c}}{C`{DAf}}}{{BIf{c}}}BIh}{{{BLd{c}}{C`{DAf}}}{{BLd{c}}}BGd}{{BBhAj{C`{Ll}}}BBh}{{CBb{C`{DAf}}}CBb}{{CBbc}CBb{{AMf{{C`{DAf}}}}}}{{BHdc}BHd{{AMf{{C`{DAf}}}}}}{{BHd{C`{DAf}}}BHd}{CNj{{Bb{MjB`}}}}{{{BG`{c}}{C`{{ADh{B@h}}}}}{{BG`{c}}}BGd}{{{CJh{c}}{ADh{B@h}}}{{CJh{c}}}BGd}{{{CJj{c}}{ADh{B@h}}}{{CJj{c}}}BGd}{{{BLd{c}}{C`{{ADh{BAb}}}}}{{BLd{c}}}BGd}{{CBb{C`{{ADh{B@h}}}}}CBb}{{BHd{C`{{ADh{B@h}}}}}BHd}{{CBbc}{{Bb{CBbB`}}}{{Dd{B@h}{{Db{{Bb{B@hB`}}}}}}}}{{{CJh{c}}B@h}{{CJh{c}}}BGd}{{{CJj{c}}B@h}{{CJj{c}}}BGd}{{CDdBGf}CDd}{{CDfBGf}CDf}{{{BG`{c}}A`}{{BG`{c}}}BGd}{{{BKj{c}}A`}{{BKj{c}}}BKn}{{CBbA`}CBb}{{BBhd}BBh}{{{BG`{c}}Fd}{{BG`{c}}}BGd}{{CBbFd}CBb}102{{{BLh{c}}d}{{BLh{c}}}BKn}3{{{BKj{c}}{C`{Ed}}}{{BKj{c}}}BKn}{{CDdJb}CDd}{{CDd{C`{Ed}}}CDd}{{{BG`{c}}d}{{BG`{c}}}BGd}{{CBbd}CBb}8{{BCd{C`{Hd}}}{{Cf{Cd}}}}{{BCd{C`{Hd}}}BCd}{{{AIb{}{{AKd{c}}{AKf{e}}{AKh{g}}}}{C`{Hd}}}{{AIb{}{{AKd{c}}{AKf{e}}{AKh{g}}}}}AB`{AKj{AKl{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}?{{CDdBGf}CDd}{BBhBBh}{{{A@b{}{{Ol{c}}{On{e}}{A@`{g}}}}}e{}{}{}}{{{A@b{}{{Ol{c}}{On{e}}{A@`{g}}}}{A@b{}{{Ol{c}}{On{e}}{A@`{g}}}}}e{}{}{}}{{{A@b{}{{Ol{c}}{On{e}}{A@`{g}}}}c}e{}{}{}}10{{c{A@b{}{{Ol{c}}{On{e}}{A@`{g}}}}}e{}{}{}}210213210210{{{ADh{CJn}}{Ab{A`}}}{{Bb{FdB@d}}}}{{ce}{{Bb{FdB@d}}}{}DC`}{{{ADh{CJn}}{Ab{DEh}}}{{Bb{FdB@d}}}}{{BGfc}BGf{{AMf{BGf}}}}{CGh{{j{Ij}}}}{CGj{{j{Ij}}}}{BNf{{Bb{{j{Ij}}B`}}}}``{{AHn{j{Al}}{j{c}}}{{Bb{{j{c}}B`}}}D`}```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{BChc}An{{Dd{{Gb{Ll{BCj{Ll}}}}}{{Db{C`}}}}HhHj}}{{BChc}An{{Dd{{Gb{Ll{BCj{Ll}}}}}{{Db{}}}}HhHj}}{{{Ab{{Nl{Ll}}}}c}An{{Dd{{Nl{Ll}}}{{Db{C`}}}}HhHj}}{{{Ab{{Nl{Ll}}}}c}An{{Dd{{Nl{Ll}}}{{Db{}}}}HhHj}}{{{Ab{c}}e{C`{{ADh{AD`}}}}}{{AIj{c}}}{BE`BEb}{{Ch{}{{Cb{{Gb{LlLl}}}}}}Hn}}{{{Ab{c}}Hde{C`{{ADh{AD`}}}}}{{AIj{c}}}{BE`BEb}{{Ch{}{{Cb{{Gb{LlLl}}}}}}Hn}}{{{j{c}}LlLl}{{j{c}}}D`}{{{Fj{{Nl{Ll}}}}{Ab{{Cf{Cd}}}}}d}{{BEdBf}An}{{BEfBEf}BEf}0``````{{{j{c}}{j{e}}gik}{{j{m}}}D`D`{{Dd{}{{Db{}}}}}{{Dd{}{{Db{}}}}}{{Dd{}{{Db{}}}}}D`}0{{{j{c}}{j{e}}i}{{j{k}}}D`D`Cd{{Dl{}{{Db{g}}}}}{{D`{}{{Gj{g}}}}}}{{{j{c}}{j{e}}g}{{j{i}}}D`D`{{AI`{C`C`}}}D`}{{{j{c}}{j{e}}g}bD`D`{{Dl{C`C`}}}}{{{j{c}}{j{e}}i}{{j{k}}}D`D`{}{{Dl{}{{Db{g}}}}}D`}{{{j{c}}{j{e}}iAj}{{j{k}}}D`D`{CdAIb}{{Dl{}{{Db{g}}}}}{{D`{}{{Gj{g}}}}}}{{{j{c}}{j{e}}iAj}{{j{k}}}D`D`Cd{{Dl{}{{Db{g}}}}}{{D`{}{{Gj{g}}}}}}5{{{j{c}}{j{e}}g}{{Bb{AnB`}}}D`D`{{Dl{}{{Db{{Cf{Cd}}}}}}}}{{{j{c}}{j{e}}gdd}{{j{c}}}D`D`{{Dl{}{{Db{{Cf{Cd}}}}}}}}64{{{j{c}}{j{e}}k}{{Bb{{j{m}}i}}}D`D`{}{}{{Dl{C`C`}{{Db{{Bb{{C`{g}}i}}}}}}}D`}{{{j{c}}{j{e}}{j{g}}i}{{j{k}}}D`D`D`{{AId{C`C`C`}}}D`}{{{j{c}}{j{e}}k}{{Bb{{j{m}}i}}}D`D`CdAIf{{Dl{}{{Db{{Bb{gi}}}}}}}{{D`{}{{Gj{g}}}}}}2{{{j{c}}{j{e}}kAj}{{Bb{{j{m}}i}}}D`D`CdAIf{{Dl{}{{Db{{Bb{gi}}}}}}}{{D`{}{{Gj{g}}}}}}{{{j{c}}{j{e}}idd}{{Bb{{j{c}}g}}}D`D`AIf{{Dl{}{{Db{{Bb{{Cf{Cd}}g}}}}}}}}{{{j{c}}{j{e}}{j{g}}m}{{Bb{{j{o}}k}}}D`D`D`{}{}{{Dl{C`C`C`}{{Db{{Bb{{C`{i}}k}}}}}}}D`}{{{j{c}}i}{{Bb{{j{k}}g}}}D`{}{}{{Dl{C`}{{Db{{Bb{{C`{e}}g}}}}}}}D`}{{{j{c}}i}{{Bb{{j{k}}g}}}D`{}{}{{Dl{}{{Db{{Bb{eg}}}}}}}D`}{{{j{c}}i}{{Bb{{j{k}}g}}}D`{CdAIb}AIf{{Dl{}{{Db{{Bb{eg}}}}}}}{{D`{}{{Gj{e}}}}}}{{{j{c}}e}{{j{g}}}D`{{AIh{C`}}}D`}{{{j{c}}e}{{j{g}}}D`AIhD`}{{{j{c}}g}{{j{i}}}D`Cd{{Dl{}{{Db{e}}}}}{{D`{}{{Gj{e}}}}}}0{{{j{c}}g}{{j{i}}}D`{CdAIb}{{Dl{}{{Db{e}}}}}{{D`{}{{Gj{e}}}}}}0``{DEj{{j{Eh}}}}0{{DEj{j{J`}}d}{{Bb{AnB`}}}}{{DEj{j{Ah}}d}{{Bb{AnB`}}}}{DEjAn}{DEj{{Bb{AnB`}}}}1{DEj{{Bb{{j{Eh}}B`}}}}{DEj{{j{Bl}}}}{{DEjAn}{{Bb{AnB`}}}}{{DEjEf}{{Bb{{j{Bl}}B`}}}}{{DEjA`}{{Bb{AnB`}}}}5{DEj{{Bb{{j{h}}B`}}}}01{DEl{{j{Bl}}}}`{ce{}{}}0{{BMdBGf}BGf}{Fdc{}}0{Fdb}2{cc{}}{{}Fd}54{c{{Bb{e}}}{}{}}0{cOf{}}7``````````{{cf}b{}}{{BIn{C`{Aj}}d}{{Bb{{In{IlIj}}B`}}}}{{BIn{C`{Aj}}}{{Bb{{In{IlIj}}B`}}}}{{BIn{C`{Aj}}Jbdd{C`{Ed}}{j{Ah}}}{{Bb{{In{JdJ`}}B`}}}}{{BIn{C`{Aj}}Jbd{C`{Ed}}{j{Ah}}}{{Bb{{In{JdJ`}}B`}}}}{{BIn{C`{Aj}}d}{{Bb{{In{JnJ`}}B`}}}}==`````{CKbCKb}{{ce}b{}{}}```{CGh{{j{Lh}}}}{CGj{{j{Lh}}}}{CGl{{j{J`}}}}{{}CKb}{Fdc{}}0{Fdb}{{CKbCKb}d}{{CKbGf}{{Bb{bGh}}}}```{cc{}}{COj{{j{Lh}}}}87{{}Fd}{ce{}{}}{CGh{{j{Al}}}}{CGj{{j{Al}}}}{CGh{{j{Ij}}}}{CGj{{j{Ij}}}}==```6>=?>{COj{{j{Ij}}}}1>{CGh{{j{Lb}}}}{CGj{{j{Lb}}}}{{Aj{Ab{Aj}}Aj}{{In{IlIj}}}}{{Aj{Ab{Aj}}Aj}{{In{JnJ`}}}}{{Aj{Ab{Aj}}AjJb}{{In{JdJ`}}}}{CGh{{j{Lh}}}}{CGj{{j{Lh}}}}{{DCdBNj}{{Bb{AnB`}}}}000000?1{CGl{{j{J`}}}}`>{c{{Bb{e}}}{}{}}0``{cOf{}}``{ce{}{}}`6565`````>=````````{{cf}b{}}{{BIn{C`{Aj}}d}{{Bb{{In{IlIj}}B`}}}}{{BIn{C`{Aj}}}{{Bb{{In{IlIj}}B`}}}}{{BIn{C`{Aj}}Jbdd{C`{Ed}}{j{Ah}}}{{Bb{{In{JdJ`}}B`}}}}{{BIn{C`{Aj}}Jbd{C`{Ed}}{j{Ah}}}{{Bb{{In{JdJ`}}B`}}}}{DEn{{j{Ah}}}}{{BIn{C`{Aj}}d}{{Bb{{In{JnJ`}}B`}}}}77{DF`DF`}{{ce}b{}{}}{Fdc{}}0{Fdb}{{DF`DF`}d}{{ce}d{}{}}00{{DF`Gf}{{Bb{bGh}}}}{cc{}}{{DF`c}bAFl}`{{}Fd}{ce{}{}}{{DF`Aj}d}1{c{{Bb{e}}}{}{}}0{cOf{}}3````{{cf}b{}}44{{{DFb{c}}}{{DFb{c}}}{AB`l}}>==<8{Aj{{C`{DF`}}}}76`{{{DFb{c}}Aj}C`l}{{DFd{Ab{A`}}{C`{Jb}}}{{C`{c}}}{}}{{{DFb{Ij}}{Ab{A`}}{C`{Jb}}}{{C`{Lf}}}}{{{DFb{J`}}{Ab{A`}}{C`{Jb}}}{{C`{Fn}}}}`:8{{c{C`{Jb}}}{{Bb{{DFh{}{{DFf{e}}}}B`}}}{}{}}{{DF`{C`{Jb}}}{{Bb{{DFb{Ij}}B`}}}}{{DF`{C`{Jb}}}{{Bb{{DFb{J`}}B`}}}};:=```````9===={CFdCFd}{{ce}b{}{}}{{}CFd}{Fdc{}}000{Fdb}0{{CFdCFd}d}{{DFjDFj}d}{{ce}d{}{}}00{{CFdGf}{{Bb{bGh}}}}{cc{}}0{Aj{{Bb{DFj}}}}{{Ajg}{{Bb{CFdB`}}}{{H`{Aj}}}{{AMf{Ed}}}{{Gd{}{{Cb{{Gb{ce}}}}}}}}{{CFdc}bAFl}{{}Fd}0{ce{}{}}0``0{c{{Bb{e}}}{}{}}000{cOf{}}022```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{eAJn{}{{Gd{}{{Cb{c}}}}}}0{{ACne}AK`{}{{Gd{}{{Cb{c}}}}}}0{AKbEb}{{{AIb{}{{AKd{c}}{AKf{e}}{AKh{g}}}}}{{C`{{Ab{c}}}}}AB`{AKj{AKl{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}{{AJjAJjc}{{Bb{AJjB`}}}ALb}{{ALdEb}{{Bb{AnB`}}}}`{AM`e{}{{AJn{c}}AIb}}0{{AM`ACn}e{}{{AK`{c}}AIb}}0{{{AKn{Aj}}}Eb}{ALdEb}`{{ALb{j{Eh}}{j{Eh}}}{{Bb{{j{Eh}}B`}}}}{{{Fj{c}}ACn}{{AIb{}{{AKd{c}}{AKf{e}}{AKh{g}}}}}AB`{AKj{AKl{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}{{{Fj{c}}ACn}{{AIb{}{{AKd{e}}{AKf{c}}{AKh{g}}}}}{AKj{AKl{e}}}AB`{{Fl{}{{Cb{e}}}}HnHhHj}}{{FdcACn}{{AIb{}{{AKd{c}}{AKf{e}}{AKh{g}}}}}AB`{AKj{AKl{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}{{FdACn}{{AIb{}{{AKd{c}}{AKf{e}}{AKh{g}}}}}AB`{AKj{AKl{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}{{{AIb{}{{AKd{c}}{AKf{e}}{AKh{g}}}}Fd}{{C`{c}}}AB`{AKj{AKl{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}{{ALdFd}{{Bb{I`B`}}}}{{ALdFd}I`}{{}Eb}{{ANfFd}I`}4{{{AIb{}{{AKd{c}}{AKf{e}}{AKh{g}}}}}{{ADf{cgADd}}}AB`{AKj{AKl{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}{{{AIb{}{{AKd{c}}{AKf{e}}{AKh{g}}}}}{{C`{c}}}AB`{AKj{AKl{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}{{AJjAJj}{{Bb{{Gb{AJjAJj}}B`}}}}{{{j{h}}{j{h}}}{{Bb{{Gb{{j{h}}{j{h}}}}B`}}}}{{EbEb}{{Bb{EbB`}}}}`{{}c{}}0{g{{Bb{AJne}}}{}{}{{Gd{}{{Cb{{Bb{ce}}}}}}}}0{{ACng}{{Bb{AK`e}}}{}{}{{Gd{}{{Cb{{Bb{ce}}}}}}}}0{AM`{{Bb{eg}}}{}{{AJn{c}}AIb}{}}0{{AM`ACn}{{Bb{eg}}}{}{{AK`{c}}AIb}{}}0{{{AIb{}{{AKd{c}}{AKf{e}}{AKh{g}}}}Fd}cAB`{AKj{AKl{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}0{{{AIb{}{{AKd{c}}{AKf{e}}{AKh{g}}}}}gAB`{AKj{AKl{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}{Fdc{}}0{{{AIb{}{{AKd{c}}{AKf{e}}{AKh{g}}}}{C`{Hd}}}{{AIb{}{{AKd{c}}{AKf{e}}{AKh{g}}}}}AB`{AKj{AKl{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}```````````{{AJjAJjc}{{Bb{AJjB`}}}ALb}{{ALb{j{Eh}}{j{Eh}}}{{Bb{{j{Eh}}B`}}}}=<`````````{{}b}0{{}d}{{{In{JdJ`}}{j{Ah}}CF`{Ff{Fn}{{Db{AJb}}}}{Ff{AJb}{{Db{Fn}}}}AJdAJd}{{Bb{{j{J`}}B`}}}}{{{In{JdJ`}}{C`{Aj}}{Ff{Fn}{{Db{AJb}}}}{Ff{AJb}{{Db{Fn}}}}AJdAJd}{{Bb{{j{J`}}B`}}}}{{{In{JdJ`}}{C`{Aj}}{j{Ah}}CF`}{{Bb{{In{JdJ`}}B`}}}}```{{c{C`{Hd}}}CMf{}}{{{CMh{Fn}}{CMh{A`}}{C`{Hd}}}CMj}{{{CMh{Fn}}{CMh{A`}}{C`{Hd}}}CMl}`{CHlBGf}{ce{}{}}0{{CHlJb}BGf}2{{CHlBGfJb}BGf}{{CHlEd}BGf}444{Fdc{}}0{Fdb}6{cc{}}7{{}Fd}78888888888{{CHl{C`{Ed}}BGfCF`}BGf}{{CHlBGfc}BGf{{H`{Aj}}}}:{{CHlAj}BGf};90;;;;;;;{{CHlBGfEd}BGf}{c{{Bb{e}}}{}{}}0{cOf{}}=>><>`{{BEhAObBf}{{Bb{AnB`}}}}{BEh{{Bb{AjB`}}}}`??{{}DFl}<<;{{DFl{C`{ACn}}}{{Bb{ACdB`}}}};:{ce{}{}}{DFld}{{FdFd}DFl}{{DFl{Cf{Cd}}}b}{DFlb}::94`{{{j{c}}}Fdl}0`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{cf}b{}}66{DFnDFn}{{ce}b{}{}}{Fdc{}}0{Fdb}{{DFnDFn}d}{{DFnGf}{{Bb{bGh}}}}0{cc{}}{{DFnc}bAFl}{{}Fd}??{cEd{}}{c{{Bb{e}}}{}{}}0{cOf{}}{ce{}{}}{{IdId}Id}{{{j{Eh}}Ll}{{Bb{bB`}}}}{{{AIj{Ll}}Ll}{{Bb{bB`}}}}{An{{Bb{AnB`}}}}{{AnBf}An}0{{AnAj}An}0`{{cf}b{}}{DG`AD`}{DG`{{Cf{Cd}}}}199{DG`DG`}{{ce}b{}{}}{DG`ACn}{{}DG`}{Fdc{}}0{Fdb}{{DG`Fd}b}{{DG`Gf}{{Bb{bGh}}}}{cc{}}{{}Fd}{ce{}{}}{DG`Fd}{FdDG`}{DG`b}703{c{{Bb{e}}}{}{}}0{cOf{}}{DG`{{C`{DGb}}}}6````{{AIlcd}LlAIb}{{{j{c}}}{{Gb{Fd{j{c}}}}}D`}``{DGdAn}{BNf{{Bb{{j{Ij}}B`}}}}{BNf{{Bb{{j{Lh}}B`}}}}0{BNf{{Bb{{j{Al}}B`}}}}22112{BNf{{Bb{{j{Lb}}B`}}}}322{{BNfAj}{{Bb{AnB`}}}}{{BNfJb}{{Bb{{j{J`}}B`}}}}1445`{{AHdFdFd}AHd}0`{{Fd{Fj{d}}}b}```11{{Fd{Ab{An}}El}{{Bb{{AIn{{j{Eh}}}}B`}}}}{{{Ab{An}}{Ab{d}}d}{{Bb{AJ`B`}}}}{{Aj{Ab{An}}{Ab{d}}d}{{Bb{{j{Ej}}B`}}}}{{Aj{Ab{An}}}{{Bb{{j{Ej}}B`}}}}{An{{Bb{{Cf{Cd}}B`}}}}{{{Ab{An}}}{{Bb{AJ`B`}}}}{{{Ab{An}}}{{Bb{{j{Ej}}B`}}}}0```````````88```{BKd{{j{Ah}}}}{BKh{{Bb{{j{Ah}}B`}}}}{BKh{{j{Ah}}}}{{BKh{j{Ah}}}{{j{Ah}}}}{{BKhAjd}{{Bb{{j{Al}}B`}}}}{{BKh{j{Ah}}dd}{{Bb{{j{Al}}B`}}}}{{BKhAj}{{Bb{{j{Al}}B`}}}}{{BKhAjd}{{Bb{{j{Eh}}B`}}}}{{BKh{j{Ah}}d}{{Bb{{j{Eh}}B`}}}}{{BKh{j{Ah}}Fd}{{Bb{{j{Ah}}B`}}}}{{BKhAj}{{Bb{{j{h}}B`}}}}{{BKh{j{Ah}}}{{Bb{{j{h}}B`}}}}{{BKhAjEb}{{Bb{AnB`}}}}5{{BKh{j{Ah}}dd}{{Bb{{j{Eh}}B`}}}}{{BKhAj}{{Bb{{j{Eh}}B`}}}}=<{{{Ab{{j{Ah}}}}Ajd}{{Bb{{j{Ah}}B`}}}}{{BKhAjAj}{{Bb{{j{Ah}}B`}}}}0{{BKhAjAjFd}{{Bb{{j{Ah}}B`}}}}1{{BKh{j{Ah}}}{{j{h}}}}{{BKh{j{Ah}}Fd}{{Bb{AJhB`}}}}0{{{j{Ah}}{j{Ah}}e}{{j{h}}}{{Ch{}{{Cb{Aj}}}}}{{Dd{AjAj}{{Db{c}}}}}}2{{{j{Ah}}{j{Ah}}Fded}{{Bb{AJhB`}}}{{Ch{}{{Cb{Aj}}}}}{{Dd{AjAj}{{Db{c}}}}}}2{{{j{Ah}}Ajd}{{j{Ah}}}}{{BKhAn}{{Bb{{j{Ah}}B`}}}}{BKh{{j{Eh}}}}0{BKh{{j{Ah}}}}{{BKhAnAn}{{Bb{{j{Ah}}B`}}}}3{{{j{Ah}}{j{Ah}}}{{j{Ah}}}}404040{{BKh{j{Ah}}}{{j{Ah}}}}10{{BKh{j{Eh}}d}{{Bb{{j{J`}}B`}}}}444````````{{eFdFd}{{DGf{Fn}}}{{H`{Aj}}}{{Ch{}{{Cb{c}}}}}}{{eFdFd}{{DGh{Fn}}}{{H`{{Ab{A`}}}}}{{Ch{}{{Cb{c}}}}}}```````````{{cf}b{}}0{BFj{{Bb{AnB`}}}}{{Aj{Fj{{Cf{Cd}}}}ACn}{{Bb{AnB`}}}}{{Aj{Fj{{Cf{Cd}}}}ACn{C`{{DEf{EdEd}}}}}{{Bb{AnB`}}}}{{Anc}{}{AdKj}}{{AnAn}}01{{AnAn}{{Bb{AnB`}}}}{An{{C`{Fd}}}}0{{BFjEf}{{j{Eh}}}}{BFj{{Bb{{j{Eh}}B`}}}}`{An{{Bb{{j{Bl}}B`}}}}{{AnFd}{{Cf{Cd}}}}{BFjAD`}0{An{{j{h}}}}{BFj{{j{c}}}D`}0{AnBFj}{AnAn}0{BFj{{Bb{FdB`}}}}{An{{Bb{FdB`}}}}{An{{Bb{{j{n}}B`}}}}{An{{Bb{{j{Ej}}B`}}}}{{BFjAn}{{Bb{AnB`}}}}00{An{{Bb{{j{Al}}B`}}}}{ce{}{}}00000{{BFjEb}{{Bb{AnB`}}}}{{AnEb}{{Bb{AnB`}}}}0{An{{Bb{AJjB`}}}}5{{AnAn}{{Bb{AnB`}}}}{{Anc}{{Bb{AnB`}}}Af}{BFj{{Fh{{Fb{{Cf{Cd}}}}{Ff{{Cf{Cd}}}{{Db{Fd}}}}}}}}{BFj{{Fj{{Cf{Cd}}}}}}0{An{{Fj{{Cf{Cd}}}}}}?{IdId}{AnAn}{BFj{{ADh{BFj}}}}{{ce}b{}{}}0{Anb}{An{{Bb{{In{IlIj}}B`}}}}{An{{Bb{{In{JdJ`}}B`}}}}{An{{Bb{{In{JhJf}}B`}}}}{{}An}{Fdc{}}0{An}1111{{Anc}{}{AdKj}}{{AnAn}}10{Fdb}00{BFjAn}{BFjEb}{An{{Bb{{In{JjJ`}}B`}}}}{{IdId}d}{{AnAn}d}{{{AEn{}{{Cb{c}}}}e}c{}{}}{{AnAn}{{Bb{{j{Al}}B`}}}}{{AnAj}{{Bb{{j{Al}}B`}}}}{{Anc}{{Bb{{j{Al}}B`}}}AMd}32{{AnAj}}{{Anc}{}AMd}66{{ce}d{}{}}00{AnFd}{An{{Bb{AnB`}}}}{{AnAn}{{Bb{AnB`}}}}{{AnI`Fd}{{Bb{AnB`}}}}{An{{Bb{{j{Dn}}B`}}}}{An{{Bb{{j{E`}}B`}}}}{BFj{{Dh{Mj}}}}{{AnAEl}{{Bb{AnB`}}}}{{BFj{j{Al}}}{{Bb{AnB`}}}}{{An{j{Al}}d}{{Bb{AnB`}}}}{{IdGf}{{Bb{bGh}}}}{{AnGf}{{Bb{bGh}}}}0{AnEd}{cc{}}0{{{In{JdJ`}}}An}{{{In{IlIj}}}An}2{{{In{JjJ`}}}An}{{{In{JnJ`}}}An}{{{j{c}}}AnD`}{{Aj{Ab{I`}}d}{{Bb{AnB`}}}}{{Aj{Ab{I`}}Ebd}{{Bb{AnB`}}}}{{Aj{Cf{Cd}}}{{Bb{AnB`}}}}{{Aj{Fj{{Cf{Cd}}}}Eb}An}{g{{Bb{ic}}}{}{}{{Gl{c}{{Cb{e}}}}}{}}{cAn{{Gd{}{{Cb{{C`{If}}}}}}}}{cAn{{Gd{}{{Cb{d}}}}}}{cAn{{Gd{}{{Cb{Lj}}}}}}{cAn{{Gd{}{{Cb{Kl}}}}}}{cAn{{Gd{}{{Cb{{C`{A`}}}}}}}}{cAn{{Gd{}{{Cb{If}}}}}}{cAn{{Gd{}{{Cb{Ll}}}}}}0{cAn{{Gd{}{{Cb{Ld}}}}}}{cAn{{Gd{}{{Cb{{C`{Ld}}}}}}}}7{cAn{{Gd{}{{Cb{{C`{Lj}}}}}}}}{cAn{{Gd{}{{Cb{{C`{Lf}}}}}}}}{cAn{{Gd{}{{Cb{M`}}}}}}{cAn{{Gd{}{{Cb{Fn}}}}}}{cAn{{Gd{}{{Cb{Lf}}}}}}{cAn{{Gd{}{{Cb{{C`{Fn}}}}}}}}{cAn{{Gd{}{{Cb{A`}}}}}}={cAn{{Gd{}{{Cb{Ih}}}}}}{cAn{{Gd{}{{Cb{{C`{Ih}}}}}}}}<:2{cAn{{Gd{}{{Cb{Aj}}}}}}{cAn{{Gd{}{{Cb{Ed}}}}}}8{cAn{{Gd{}{{Cb{{C`{Kl}}}}}}}}{cAn{{Gd{}{{Cb{{C`{M`}}}}}}}}95{cAn{{Gd{}{{Cb{{C`{Ll}}}}}}}}{cAn{{Gd{}{{Cb{Kl}}}}}}{cAn{{Gd{}{{Cb{{C`{d}}}}}}}};{{Aj{Fj{M`}}}An}{{Aj{Fj{A`}}}An}{{Aj{Fj{Fn}}}An}{{Aj{Fj{Ih}}}An}{{Aj{Fj{Lj}}}An}{{Aj{Fj{Lf}}}An}{{Aj{Fj{Kl}}}An}{{Aj{Fj{Ld}}}An}{{Aj{Fj{Ll}}}An}{{Aj{Fj{If}}}An}{{AjFdEb}An}{{AnFdFd}An}{{BFjFd}{{Bb{I`B`}}}}{AnFd}{AnBn}{{BFjFd}{{C`{Ib}}}}{{BFjFdFd}{{C`{Ib}}}}{{BFjFd}I`}{{{AEn{}{{Cb{c}}}}e}c{}{}}{{Anc}{{Bb{{j{Al}}B`}}}AMd}{{AnAn}{{Bb{{j{Al}}B`}}}}{{AnAj}{{Bb{{j{Al}}B`}}}}3{{AnAj}}32{BFjd}{{Idc}bAFl}{{An{C`{Fd}}}An}{An{{Bb{{j{Lb}}B`}}}}{An{{Bb{{j{Ij}}B`}}}}{An{{Bb{{j{J`}}B`}}}}{An{{Bb{{j{Lh}}B`}}}}{An{{Bb{{j{Eh}}B`}}}}`{An{{Bb{{j{h}}B`}}}}{{}Fd}00{ce{}{}}00{AnAOb}1{B@jAn}{AnAn}={An{{Bb{{j{Al}}B`}}}}000{BFj{{j{Al}}}}0{{}d}0{AnId}{AnDGj}{BFjFd}{{BFjFd}An}<{AnBGf}{{{AEn{}{{Cb{c}}}}e}c{}{}}{{Anc}{{Bb{{j{Al}}B`}}}AMd}{{AnAn}{{Bb{{j{Al}}B`}}}}{{AnAj}}3120{An{{Bb{{C`{c}}B`}}}Kj}{BFj{{Bb{AnB`}}}}{BFj{{C`{Kl}}}}?0121{{Anc}{}{AdKj}}0{{AnAn}}0;{BFj{{Bb{FdB`}}}}{BFjAj}{{Ajc}An{{H`{{Ab{{Dh{{Ab{A`}}}}}}}}}}{{Ajc}An{{H`{{Ab{AJb}}}}}}{{Ajc}An{{H`{{Ab{Ld}}}}}}{{Ajc}An{{H`{{Ab{{C`{d}}}}}}}}{{Ajc}An{{H`{{Ab{AMn}}}}}}{{Ajc}An{{H`{{Ab{AJf}}}}}}{{Ajc}An{{H`{{Ab{Lj}}}}}}{{Ajc}An{{H`{{Ab{M`}}}}}}{{Ajc}An{{H`{{Ab{{C`{Ll}}}}}}}}{{Aj{Kn{Ih}}}An}{{Ajc}An{{H`{{Ab{{C`{Ld}}}}}}}}{{Aj{Kn{Lf}}}An}{{Ajc}An{{H`{{Ab{{C`{{Fj{A`}}}}}}}}}}{{Ajc}An{{H`{{Ab{{C`{Kl}}}}}}}}{{Ajc}An{{H`{{Ab{Ll}}}}}}{{Ajc}An{{H`{{Ab{{C`{{Dh{Aj}}}}}}}}}}{{Ajc}An{{H`{{Ab{Aj}}}}}}{{Ajc}An{{H`{{Ab{Ih}}}}}}{{Ajc}An{{H`{{Ab{Ed}}}}}}{{Ajc}An{{H`{{Ab{{Ab{A`}}}}}}}}{{Ajc}An{{H`{{Ab{{C`{An}}}}}}}}{{Ajc}An{{H`{{Ab{{C`{AJb}}}}}}}}{{Ajc}An{{H`{{Ab{d}}}}}}{{Ajc}An{{H`{{Ab{{C`{AN`}}}}}}}}{{Ajc}An{{H`{{Ab{{C`{Fn}}}}}}}}{{AjAn}An}{{Ajc}An{{H`{{Ab{A`}}}}}}{{Ajc}An{{H`{{Ab{I`}}}}}}{{Ajc}An{{H`{{Ab{{C`{{Ab{A`}}}}}}}}}}{{Ajc}AnB@j}{{Ajc}An{{H`{{Ab{{C`{AJf}}}}}}}}{{Aj{Kn{Fn}}}An}{{Ajc}An{{H`{{Ab{{C`{M`}}}}}}}}{{Ajc}An{{H`{{Ab{{Fj{A`}}}}}}}}{{Ajc}An{{H`{{Ab{{C`{AMn}}}}}}}}{{Ajc}An{{H`{{Ab{{C`{If}}}}}}}}{{Ajc}An{{H`{{Ab{{C`{Ih}}}}}}}}{{Ajc}An{{H`{{Ab{{Dh{Aj}}}}}}}}{{Ajc}An{{H`{{Ab{If}}}}}}{{Ajc}An{{H`{{Ab{{C`{Ed}}}}}}}}{{Ajc}An{{H`{{Ab{{C`{Aj}}}}}}}}{{Ajc}An{{H`{{Ab{Lf}}}}}}{{Ajc}An{{H`{{Ab{{C`{{Dh{{Ab{A`}}}}}}}}}}}}{{Ajc}An{{H`{{Ab{Fn}}}}}}{{Ajc}An{{H`{{Ab{AN`}}}}}}{{Ajc}An{{H`{{Ab{An}}}}}}{{Ajc}An{{H`{{Ab{{C`{Lf}}}}}}}}{{Ajc}An{{H`{{Ab{{C`{A`}}}}}}}}{{Ajc}An{{H`{{Ab{{C`{Lj}}}}}}}}{{Ajc}An{{H`{{Ab{Kl}}}}}}{{Aj{Kn{Ll}}}An}{{AjEb}An}{{BFjFdFd}An}{{AjFd}An}{DGjC`}{{{AEn{}{{Cb{c}}}}e}c{}{}}{{AnAj}{{Bb{{j{Al}}B`}}}}{{Anc}{{Bb{{j{Al}}B`}}}AMd}{{AnAn}{{Bb{{j{Al}}B`}}}}3{{Anc}{}AMd}1{{AnAj}}{An{{Bb{ABbB`}}}}{BFjFd}`{An{{Cf{Jl}}}}{An{{Bb{AnB`}}}}{{BFjKlMh}{{Bb{AnB`}}}}{BFjAn}{{Anc}{}{AdKj}}{{AnAn}}1{{BFjAj}b}{{AnAj}An}{{An{Ab{Fn}}}{{Bb{AnB`}}}}5{IdId}{{BFjDdMl}{{Bb{AnB`}}}}{{AnKldd{C`{Ih}}}{{Bb{AnB`}}}}{{AnFddd{C`{Ih}}}{{Bb{AnB`}}}}{{AnId}b}{{BFjFn}An}{BFjb}{Anb}{{An{C`{Ih}}}An}{DGj{{Gb{Fd{C`{Fd}}}}}}{{BFjFnFd}An}{{AnEf}{{Bb{AnB`}}}}{{BFjEf}{{Bb{AnB`}}}}{{BFjA`}{{C`{Kl}}}}{{BFjA`}{{Bb{AnB`}}}}{An{{Bb{{j{Ah}}B`}}}}{{AnFd}{{Bb{{Dh{Aj}}B`}}}}{{AnEb}{{Bb{AnB`}}}}{An{{Bb{AJhB`}}}}{{AnAn}}{{Anc}{}{AdKj}}01{An{{Bb{cB`}}}Kj}{An{{Bb{AnB`}}}}{{An{C`{Fd}}}An}{{BFj{j{Eh}}}{{Bb{AnB`}}}}{{An{Ab{Nb}}Id}An}{{An{Ab{Nb}}}An}{{BFj{Ab{Ll}}}{{Bb{AnB`}}}}{{BFj{Ab{Ll}}}An}{{An{Ab{Ll}}d}An}{{An{j{Eh}}d}{{Bb{AnB`}}}}{{BFj{j{Eh}}}An}{{An{Ab{Ll}}}An}{{An{j{Eh}}d}An}{An{{Bb{{In{JnJ`}}B`}}}}{{AnFdd}{{Cf{Cd}}}}{{An{C`{Aj}}d}{{Bb{AObB`}}}}>{ce{}{}}0{An{{Dh{An}}}}{cEd{}}{{AnAn}{{Bb{AnB`}}}}{c{{Bb{e}}}{}{}}00{{{Gb{Aj{Cf{Cd}}}}}{{Bb{AnB`}}}}{{{Gb{AMh{Fj{{Cf{Cd}}}}}}}{{Bb{AnB`}}}}{{{Gb{AMh{Cf{Cd}}}}}{{Bb{AnB`}}}}{{{Gb{Aj{Fj{{Cf{Cd}}}}}}}{{Bb{AnB`}}}}444{cOf{}}00{An{{Bb{{j{Ln}}B`}}}}{An{{Bb{{j{Eh}}B`}}}}{An{{Bb{{j{L`}}B`}}}}{An{{Bb{{j{Mb}}B`}}}}{BFj{{Bb{AnB`}}}}{An{{Bb{AnB`}}}}{BFj{{Bb{{j{c}}B`}}}D`}`{{BFjA`}{{C`{Kl}}}}{{BFjA`}{{Bb{AnB`}}}}{ce{}{}}00{{AnAj}An}{{Anc}An{AdKj}}{{An{j{Al}}An}{{Bb{AnB`}}}}````{{AnAnc}An{{Dl{AnAn}{{Db{An}}}}}}{{{BGh{}{{Db{c}}}}An}c{}}{{BGjAn}{{Bb{AnB`}}}}{{{j{Bd}}An}{{Bb{AnB`}}}}`210210210210``{{BNhAn}{{Bb{AnB`}}}}{{{j{F`}}An}{{Bb{AnB`}}}}{{BNhc}{{Bb{AnB`}}}Af}{{{j{F`}}c}{{Bb{AnB`}}}Af}```{{cf}b{}}<<{CHfCHf}{{ce}b{}{}}{{}CHf}{Fdc{}}0{Fdb}{{CHfCHf}d}{{ce}d{}{}}00{{CHfGf}{{Bb{bGh}}}}{cc{}}{{CHfc}bAFl}{{}Fd}{ce{}{}}0{c{{Bb{e}}}{}{}}0{cOf{}}2``>{DjAn}033{DjDj}>1<<;754{AnDj}{{Dj{Cf{Cd}}}b}65546{{Dj{Cf{Cd}}e}c{}{{Dd{Dj}{{Db{c}}}}}}","D":"AEK`Ll","p":[[1,"unit"],[1,"bool"],[5,"Private",10276],[5,"ListType",1689],[5,"ChunkedArray",17],[10,"PolarsNumericType",1689],[5,"BinaryType",1689],[1,"u8"],[1,"slice"],[10,"Num",10277],[10,"ToPrimitive",10278],[5,"StringType",1689],[1,"str"],[5,"BooleanType",1689],[5,"Series",9798],[6,"PolarsError",3073],[6,"Result",10279],[10,"NumOpsDispatchInner",10199],[6,"GroupsProxy",3450],[5,"ObjectType",1689],[10,"PolarsObject",1260],[5,"FixedSizeListType",1689],[5,"Settings",17],[6,"Option",10280],[17,"Item"],[10,"Array",10281],[5,"Box",10282],[10,"Iterator",10283],[5,"AmortizedListIter",10284],[17,"IsNested"],[5,"FalseT",1689],[10,"PolarsDataType",1689],[17,"Output"],[10,"Fn",10285],[10,"Copy",10286],[6,"Cow",10287],[5,"UnstableSeries",10252],[10,"FnMut",10285],[5,"Float32Type",1689],[5,"Float64Type",1689],[6,"DataType",1689],[5,"String",10288],[5,"SortOptions",1382],[5,"UInt32Type",1689],[5,"BinaryOffsetType",1689],[5,"SortMultipleOptions",1382],[10,"PolarsIntegerType",1689],[10,"NumOpsDispatchCheckedInner",10220],[5,"Iter",10289],[1,"usize"],[1,"fn"],[5,"Map",10290],[5,"Vec",10291],[10,"DoubleEndedIterator",10292],[1,"i64"],[5,"OffsetsBuffer",10293],[1,"tuple"],[10,"IntoIterator",10294],[5,"Formatter",10295],[5,"Error",10295],[17,"Array"],[10,"FallibleIterator",10296],[10,"PolarsAsRef",10297],[10,"AsRef",10298],[10,"Borrow",10299],[5,"Bitmap",10300],[10,"IntoParallelIterator",10301],[10,"Send",10286],[10,"Sync",10286],[10,"NoOption",10302],[10,"TrustedLen",10303],[6,"AnyValue",1689],[10,"PolarsObjectSafe",1260],[6,"IsSorted",9798],[1,"f32"],[1,"u64"],[5,"Int32Type",1689],[5,"DateType",1689],[5,"Logical",1689],[5,"Int64Type",1689],[6,"TimeUnit",1689],[5,"DatetimeType",1689],[5,"Int128Type",1689],[5,"DecimalType",1689],[5,"DurationType",1689],[10,"ExactSizeIterator",10304],[5,"TimeType",1689],[10,"PolarsFloatType",1689],[10,"PolarsIterator",1188],[5,"Iter",10305],[5,"IterNames",10305],[6,"ChunkedArrayLayout",17],[10,"NumCast",10278],[1,"f64"],[5,"Range",10306],[5,"UInt64Type",1689],[5,"Int16Type",1689],[1,"i16"],[1,"i32"],[5,"Int8Type",1689],[1,"i8"],[1,"u32"],[5,"UInt16Type",1689],[1,"u16"],[5,"UInt8Type",1689],[10,"ParallelIterator",10301],[10,"IndexedParallelIterator",10301],[6,"QuantileInterpolOptions",3813],[5,"Field",1689],[5,"RollingOptionsFixedWindow",3813],[10,"PolarsOpsNumericType",10307],[10,"Sized",10286],[5,"ChunkId",3813],[17,"HasViews"],[5,"RandomState",10308],[5,"BytesHash",10309],[5,"OwnedRepr",10310],[1,"array"],[5,"Dim",10311],[5,"ArrayBase",10312],[5,"ViewRepr",10312],[6,"Either",10313],[5,"TypeId",10314],[5,"NullableIdxSize",3813],[10,"FnOnce",10285],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",866],[5,"AnonymousListBuilder",894],[5,"AnonymousOwnedListBuilder",894],[5,"ListBooleanChunkedBuilder",894],[5,"ListPrimitiveChunkedBuilder",894],[10,"ListBuilderTrait",894],[10,"ChunkedBuilder",894],[5,"ListStringChunkedBuilder",894],[5,"ListBinaryChunkedBuilder",894],[5,"ListNullChunkedBuilder",894],[5,"BinViewChunkedBuilder",894],[10,"ViewType",10315],[5,"BooleanChunkedBuilder",894],[5,"NullChunkedBuilder",894],[5,"PrimitiveChunkedBuilder",894],[10,"Clone",10316],[5,"NullChunked",10317],[10,"NewChunkedArray",894],[10,"ChunkedCollectInferIterExt",1168],[10,"ChunkedCollectIterExt",1168],[10,"Canonical",1182],[10,"ChunkedCollectParIterExt",1184],[10,"FromParIterWithDtype",1184],[5,"BooleanArray",10318],[5,"BoolIterNoNull",1188],[5,"FixedSizeListArray",10319],[5,"FixedSizeListIterNoNull",1188],[5,"StructIter",1188],[5,"SomeIterator",1188],[5,"ObjectArray",1260],[6,"ArrowDataType",1689],[10,"Any",10314],[10,"Debug",10295],[5,"BitmapIter",10320],[6,"ZipValidity",10321],[5,"Arc",3813],[5,"ObjectChunkedBuilder",1331],[10,"AnonymousObjectBuilder",1354],[5,"ObjectRegistry",1354],[17,"FuncRet"],[10,"ChunkApply",1382],[10,"ChunkApplyKernel",1382],[10,"ChunkSort",1382],[10,"ChunkUnique",1382],[10,"ChunkCast",1382],[6,"FillNullStrategy",1382],[10,"ChunkCompare",9798],[10,"ChunkExplode",1382],[10,"ChunkFillNullValue",1382],[10,"ChunkFilter",1382],[10,"ChunkFull",1382],[10,"ChunkFullNull",1382],[10,"ChunkAnyValue",1382],[10,"Hasher",10322],[10,"IsFirstDistinct",1382],[10,"IsLastDistinct",1382],[10,"ChunkAgg",1382],[10,"ChunkQuantile",1382],[10,"ChunkExpandAtIndex",1382],[10,"Reinterpret",1382],[10,"ChunkReverse",1382],[10,"ChunkRollApply",1382],[10,"ChunkSet",1382],[10,"ChunkShift",1382],[10,"ChunkShiftFill",1382],[10,"SlicedArray",1382],[10,"ChunkVar",1382],[10,"ChunkTake",1382],[10,"ChunkTakeUnchecked",1382],[10,"ChunkBytes",1382],[10,"ChunkZip",1382],[10,"BinaryFnMut",1582],[10,"StaticArray",1689],[10,"TernaryFnMut",1582],[10,"Error",10323],[10,"UnaryFnMut",1582],[5,"PrimitiveArray",10324],[6,"SearchSortedSide",1622],[5,"NoNull",3813],[5,"RowsEncoded",10325],[5,"NaiveDateTime",10326],[6,"Tz",10327],[5,"NaiveTime",10328],[5,"StructChunked",1689],[5,"CategoricalChunked",1689],[5,"CategoricalChunkedBuilder",1689],[10,"ArrayFromIter",1689],[10,"ArrayFromIterDtype",1689],[10,"AsRefDataType",1689],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",10329],[10,"From",10298],[5,"BinaryViewArrayGeneric",10315],[6,"RevMapping",1689],[10,"CategoricalMergeOperation",1689],[10,"LogicalType",1689],[6,"CategoricalOrdering",1689],[5,"OwnedObject",1689],[6,"UnknownKind",1689],[5,"CategoricalType",1689],[6,"ArrowTimeUnit",1689],[10,"ArrayCollectIterExt",1689],[5,"GlobalRevMapMerger",1689],[10,"NumericNative",1689],[10,"Into",10298],[5,"ArrowField",3813],[6,"IntegerType",10330],[6,"PrimitiveType",10331],[5,"TimeDelta",10332],[5,"NaiveDate",10333],[5,"LazyCompact",10334],[5,"SmartString",10335],[10,"GetAnyValue",1689],[5,"CatIter",1689],[6,"Ordering",10336],[5,"Duration",3813],[1,"u128"],[6,"PhysicalType",10330],[5,"DataFrame",3166],[5,"StringCacheHolder",3051],[5,"ErrString",3073],[6,"PolarsWarning",3073],[6,"Error",10337],[5,"Error",10338],[6,"Error",10339],[5,"TryReserveError",10340],[5,"Utf8Error",10341],[5,"Error",10342],[10,"Display",10295],[5,"Schema",3813],[10,"IntoSeries",9798],[6,"NullStrategy",3166],[6,"UniqueKeepStrategy",3166],[5,"HashSet",10343],[5,"ArrowSchema",3813],[5,"Row",3704],[5,"GroupBy",3450],[5,"DynamicGroupOptions",3813],[5,"RangeFrom",10306],[5,"RangeTo",10306],[5,"RangeInclusive",10306],[5,"RangeFull",10306],[5,"RangeToInclusive",10306],[5,"RecordBatchIter",3166],[5,"PhysRecordBatchIter",3166],[5,"LazyFrame",3813],[10,"IntoVec",3813],[5,"MeltArgs",3421],[5,"RollingGroupOptions",3813],[10,"RangeBounds",10306],[6,"IndexOrder",3813],[5,"StructArray",3813],[5,"RecordBatch",10344],[5,"GroupsIdx",3450],[5,"UnitVec",10345],[6,"GroupByMethod",3450],[5,"SlicedGroups",3450],[5,"GroupsProxyParIter",3450],[10,"UnindexedConsumer",10346],[6,"GroupsIndicator",3450],[6,"AAggExpr",10347],[10,"IntoGroupsProxy",3450],[5,"Copied",10348],[5,"Zip",10349],[5,"GroupsProxyIter",3450],[10,"IsFloat",10350],[10,"NativeType",10351],[10,"AggList",3688],[10,"TakeExtremum",3688],[10,"PhysicalAggExpr",3701],[6,"AnyValueBuffer",3704],[6,"AnyValueBufferTrusted",3704],[5,"Node",10352],[6,"IR",10353],[5,"Arena",10352],[6,"AExpr",10347],[10,"JoinDispatch",3813],[5,"JoinArgs",3813],[10,"SeriesTrait",9798],[10,"DfTake",3813],[10,"DataFrameOps",3813],[5,"CsvReader",3813],[6,"CommentPrefix",3813],[10,"MmapBytesReader",10354],[6,"Expr",3813],[10,"LhsNumOps",10199],[10,"NumOpsDispatch",10199],[5,"LazyGroupBy",3813],[10,"Allocator",10355],[5,"JoinBuilder",3813],[10,"AnonymousScan",3813],[5,"LazyJsonLineReader",3813],[5,"ScanArgsAnonymous",3813],[10,"FunctionOutputField",3813],[5,"SpecialEq",3813],[6,"VisitRecursion",10356],[6,"FunctionExpr",3813],[10,"ArgAgg",3813],[5,"ArrayNameSpace",3813],[5,"ListNameSpace",3813],[5,"IpcStreamReader",3813],[10,"Read",10357],[10,"SeriesUdf",3813],[10,"AsBinary",3813],[10,"StringMethods",8886],[10,"PhysicalExpr",3813],[5,"BorrowedFd",10358],[10,"AsFd",10358],[10,"AsList",3813],[10,"PartitionedAggregation",3813],[10,"AsRawFd",10359],[6,"AggExpr",3813],[10,"SeriesSealed",3813],[10,"StatsEvaluator",10360],[5,"PhysicalIoHelper",3813],[10,"AsString",3813],[20,"MaybeUninit",10361],[10,"StringNameSpaceImpl",3813],[5,"CsvWriter",3813],[5,"BatchedWriter",10362],[10,"Write",10357],[5,"IpcWriter",3813],[5,"BatchedWriter",10363],[5,"ParquetReader",3813],[5,"BatchedParquetReader",3813],[5,"ParquetWriter",3813],[5,"BatchedWriter",10364],[5,"BatchedCsvReaderMmap",3813],[5,"BatchedCsvReaderRead",3813],[5,"OwnedBatchedCsvReaderMmap",3813],[5,"OwnedBatchedCsvReader",3813],[5,"BinaryNameSpace",8869],[6,"Operator",3813],[10,"RenameAliasFn",3813],[5,"UserDefinedFunction",3813],[10,"SeriesBinaryUdf",3813],[5,"InProcessQuery",3813],[5,"HashMap",10365],[5,"CategoricalNameSpace",3813],[10,"RoundSeries",3813],[10,"TemporalMethods",9681],[10,"NumOpsDispatchChecked",10220],[5,"RollingOptionsImpl",3813],[5,"RollingOptionsDynamicWindow",3813],[5,"Bounds",3813],[6,"ClosedWindow",3813],[6,"Label",3813],[6,"StartBy",3813],[5,"Window",3813],[5,"CsvReaderOptions",3813],[6,"CsvEncoding",3813],[6,"NullValues",3813],[5,"CsvWriterOptions",3813],[5,"SerializeOptions",3813],[6,"QuoteStyle",3813],[6,"InterpolationMethod",3813],[5,"IpcScanOptions",3813],[5,"IpcWriterOptions",3813],[6,"IpcCompression",3813],[6,"JoinCoalesce",3813],[5,"JsonWriterOptions",3813],[6,"JoinType",3813],[6,"JoinValidation",3813],[5,"ParquetOptions",3813],[5,"AsOfOptions",3813],[6,"ParallelStrategy",3813],[6,"AsofStrategy",3813],[5,"ParquetWriteOptions",3813],[6,"ParquetCompression",3813],[6,"ClosedInterval",3813],[5,"LazyCsvReader",3813],[5,"GzipLevel",3813],[6,"RankMethod",3813],[5,"BrotliLevel",3813],[5,"ScanArgsIpc",3813],[5,"ZstdLevel",3813],[5,"RankOptions",3813],[5,"ScanArgsParquet",3813],[6,"DslPlan",3813],[5,"When",3813],[5,"Then",3813],[5,"ChainedWhen",3813],[5,"ChainedThen",3813],[6,"Excluded",3813],[6,"BooleanFunction",3813],[6,"CategoricalFunction",3813],[6,"PowFunction",3813],[5,"DatetimeArgs",3813],[5,"DurationArgs",3813],[5,"RollingCovOptions",3813],[5,"StrptimeOptions",3813],[5,"JoinOptions",3813],[6,"WindowType",3813],[6,"WindowMapping",3813],[5,"OptState",3813],[6,"LiteralValue",3813],[5,"AnonymousScanOptions",3813],[5,"UnionArgs",3813],[5,"FileMetaData",3813],[5,"RollingVarParams",3813],[5,"RollingQuantileParams",3813],[6,"NonExistent",3813],[10,"LazyFileListReader",3813],[5,"CloudOptions",9055],[10,"Ord",10336],[6,"ColumnOrder",10366],[10,"BinaryNameSpaceImpl",3813],[5,"PathBuf",10367],[5,"IpcStreamWriterOption",3813],[10,"SerWriter",3813],[5,"IpcWriterOption",3813],[10,"CrossJoin",3813],[10,"ExprEvalExtension",3813],[10,"DateMethods",8886],[10,"DatetimeMethods",8886],[10,"DurationMethods",8886],[10,"BinaryUdfOutputField",3813],[10,"Default",10368],[5,"RowGroupMetaData",10369],[5,"ParquetStatistics",3813],[6,"NullBehavior",10226],[5,"DotNode",10370],[5,"Weak",10371],[5,"DateLikeNameSpace",9410],[1,"char"],[10,"FromIterator",10294],[10,"PartialEq",10336],[10,"Scalar",10372],[10,"ListNameSpaceExtension",3813],[5,"ExecutionState",10373],[5,"AggregationContext",3813],[10,"Command",10374],[5,"StructNameSpace",3813],[10,"SerReader",3813],[5,"IpcReader",3813],[5,"IpcStreamWriter",3813],[5,"JsonWriter",3813],[5,"JsonReader",3813],[5,"JsonLineReader",3813],[10,"PhysicalIoExpr",10360],[5,"File",10375],[10,"UdfSchema",3813],[5,"RollingOptions",8886],[6,"StructFunction",10376],[6,"StringFunction",10377],[6,"BinaryFunction",10378],[6,"TemporalFunction",10379],[6,"RangeFunction",10380],[6,"ArrayFunction",10381],[6,"ListFunction",10382],[1,"never"],[5,"CString",10383],[5,"CStr",10384],[10,"ToOwned",10287],[5,"Path",10367],[5,"OsStr",10385],[5,"OsString",10385],[5,"MutableStatistics",10386],[5,"GrowableStruct",10387],[5,"MutableStructArray",10388],[10,"FromData",9404],[5,"Buffer",10389],[10,"FromDataUtf8",9404],[10,"FromDataBinary",9404],[5,"ListArray",10390],[6,"Ambiguous",3813],[10,"NamedFromOwned",3813],[5,"FunctionOptions",10391],[10,"PartialOrd",10336],[6,"Context",10392],[5,"FieldsMapper",3813],[10,"IndexOfSchema",3813],[5,"BoundsIter",3813],[6,"ReaderBytes",10354],[10,"PolarsTemporalGroupby",3813],[10,"PolarsArray",3813],[10,"Hash",10322],[10,"SeriesJoin",3813],[10,"TimeMethods",8886],[10,"DataFrameJoinOps",3813],[10,"IntoListNameSpace",3813],[5,"FileMetaData",10393],[10,"SeriesMethods",3813],[5,"StructValueIter",10394],[10,"AsofJoin",3813],[10,"AsofJoinBy",3813],[10,"ListNameSpaceImpl",3813],[5,"ExprNameNameSpace",3813],[5,"KeyValue",10393],[10,"IntoLazy",3813],[10,"Literal",3813],[5,"Null",3813],[5,"RowIndex",10395],[10,"ChunkAggSeries",3813],[10,"QuantileAggSeries",3813],[10,"PolarsMonthEnd",3813],[10,"PolarsMonthStart",3813],[10,"IndexToUsize",3813],[10,"NamedFrom",3813],[6,"RowGroupFetcher",10396],[5,"SplitNChars",3813],[5,"Pin",10397],[5,"Request",10323],[10,"SeriesRank",3813],[5,"BorrowedCursor",10398],[10,"VarInt",10399],[5,"IoSliceMut",10357],[10,"SeriesOpsTime",8886],[10,"PolarsRound",3813],[5,"AnonymousScanArgs",3813],[10,"ChunkedSet",3813],[5,"SchemaDescriptor",10400],[6,"SeekFrom",10357],[10,"VarAggSeries",3813],[5,"StringNameSpace",10401],[10,"TakeChunked",3813],[10,"ToDummies",3813],[10,"PolarsTruncate",3813],[5,"AllocError",10355],[5,"RwLock",10402],[10,"PolarsUpsample",3813],[10,"VecHash",3813],[5,"NonZero",10403],[6,"JsonFormat",3813],[5,"BTreeMap",10404],[5,"IoSlice",10357],[10,"ArrayNameSpace",8850],[10,"AsArray",8850],[10,"AsString",8987],[6,"Pattern",8987],[5,"DatetimeInfer",9025],[10,"StrpTimeParser",9025],[17,"Error"],[10,"TryFromWithUnit",9025],[6,"CloudType",9055],[5,"AnonymousBuilder",9465],[6,"RollingFunction",9601],[5,"MutableNullArray",9645],[5,"MutableBitmap",10405],[10,"AsSeries",9681],[5,"Utf8Array",10406],[5,"BinaryArray",10407],[5,"SeriesIter",9798],[8,"FillNullLimit",1382],[10,"InitHashMaps",1689],[10,"InitHashMaps2",1689],[5,"TrueT",1689],[8,"PolarsResult",3073],[15,"IO",8798],[15,"Context",8798],[15,"Count",8792],[15,"Slice",8793],[8,"ChunkJoinOptIds",3813],[8,"DynArgs",3813],[8,"AllowedOptimizations",3813],[10,"ListFromIter",3813],[15,"Quantile",8677],[15,"Min",8677],[15,"Max",8677],[15,"IsBetween",9572],[15,"Any",9572],[15,"All",9572],[15,"GroupBy",8687],[15,"Union",8687],[15,"Sort",8687],[15,"Cache",8687],[15,"ExtContext",8687],[15,"DataFrameScan",8687],[15,"Select",8687],[15,"HStack",8687],[15,"Scan",8687],[15,"MapFunction",8687],[15,"Filter",8687],[15,"Distinct",8687],[15,"Slice",8687],[15,"Sink",8687],[15,"Join",8687],[15,"HConcat",8687],[15,"SortBy",8738],[15,"Filter",8738],[15,"Cast",8738],[15,"Sort",8738],[15,"Gather",8738],[15,"RenameAlias",8738],[15,"Ternary",8738],[15,"Function",8738],[15,"Window",8738],[15,"AnonymousFunction",8738],[15,"Slice",8738],[15,"BinaryExpr",8738],[15,"Round",9575],[15,"RoundSF",9575],[15,"Clip",9575],[15,"BackwardFill",9575],[15,"ForwardFill",9575],[15,"Random",9575],[15,"GatherEvery",9575],[15,"Rank",9575],[15,"ValueCounts",9575],[15,"Replace",9575],[15,"CumCount",9575],[15,"CumSum",9575],[15,"CumProd",9575],[15,"CumMin",9575],[15,"CumMax",9575],[15,"Range",8795],[10,"Utf8FromIter",9794],[10,"BinaryFromIter",9794]],"b":[[31,"impl-Add-for-ChunkedArray%3CT%3E"],[32,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[33,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[34,"impl-Add-for-%26ChunkedArray%3CT%3E"],[35,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[36,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[37,"impl-Add-for-ChunkedArray%3CStringType%3E"],[38,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[39,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[40,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[41,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[42,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[44,"impl-AggList-for-ChunkedArray%3CBooleanType%3E"],[45,"impl-AggList-for-ChunkedArray%3CListType%3E"],[46,"impl-AggList-for-ChunkedArray%3CBinaryType%3E"],[47,"impl-AggList-for-ChunkedArray%3CStringType%3E"],[48,"impl-AggList-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[49,"impl-AggList-for-ChunkedArray%3CFixedSizeListType%3E"],[50,"impl-AggList-for-ChunkedArray%3CT%3E"],[54,"impl-ChunkedArray%3CFixedSizeListType%3E"],[55,"impl-ChunkedArray%3CListType%3E"],[56,"impl-ChunkedArray%3CListType%3E"],[57,"impl-ChunkedArray%3CFixedSizeListType%3E"],[61,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[62,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[63,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[64,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[65,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[66,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[68,"impl-ChunkedArray%3CListType%3E"],[69,"impl-ChunkedArray%3CFixedSizeListType%3E"],[71,"impl-ChunkedArray%3CFloat32Type%3E"],[72,"impl-ChunkedArray%3CFloat64Type%3E"],[75,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[76,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[77,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[78,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[79,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[80,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[81,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[82,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[83,"impl-ChunkedArray%3CBinaryType%3E"],[84,"impl-ChunkedArray%3CT%3E"],[85,"impl-ChunkedArray%3CStringType%3E"],[88,"impl-ChunkedArray%3CListType%3E"],[89,"impl-ChunkedArray%3CFixedSizeListType%3E"],[90,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[91,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[92,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[93,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[94,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[95,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[96,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[97,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[98,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[99,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[100,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[101,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[103,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[104,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[105,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[106,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[107,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[108,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[109,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[110,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[111,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[112,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[113,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[114,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[115,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[116,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[117,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[120,"impl-AsBinary-for-ChunkedArray%3CBinaryType%3E"],[121,"impl-ChunkedArray%3CStringType%3E"],[125,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[126,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[128,"impl-BitAnd-for-%26ChunkedArray%3CT%3E"],[129,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[130,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[133,"impl-BitOr-for-%26ChunkedArray%3CT%3E"],[134,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[135,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[138,"impl-Settings"],[139,"impl-Flags-for-Settings"],[140,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[141,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[142,"impl-BitXor-for-%26ChunkedArray%3CT%3E"],[153,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[154,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[155,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[156,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[157,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[158,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[159,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[161,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[162,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[163,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[164,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[165,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[166,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[167,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[193,"impl-Div-for-ChunkedArray%3CT%3E"],[194,"impl-Div-for-%26ChunkedArray%3CT%3E"],[195,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[196,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[205,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[206,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[207,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[208,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[209,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[210,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[211,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[212,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[213,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[214,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[215,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[216,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[217,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[218,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[219,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[220,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[221,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[222,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[223,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[224,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[225,"impl-ChunkExplode-for-ChunkedArray%3CStringType%3E"],[228,"impl-ChunkFillNullValue%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[229,"impl-ChunkFillNullValue%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[230,"impl-ChunkFillNullValue%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[231,"impl-ChunkFilter%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[232,"impl-ChunkFilter%3CT%3E-for-ChunkedArray%3CT%3E"],[233,"impl-ChunkFilter%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[234,"impl-ChunkFilter%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[235,"impl-ChunkFilter%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[236,"impl-ChunkFilter%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[237,"impl-ChunkFilter%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[238,"impl-ChunkFilter%3CListType%3E-for-ChunkedArray%3CListType%3E"],[241,"impl-Debug-for-ChunkedArray%3CStringType%3E"],[242,"impl-Debug-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[243,"impl-Debug-for-ChunkedArray%3CFixedSizeListType%3E"],[244,"impl-Debug-for-ChunkedArray%3CT%3E"],[245,"impl-Debug-for-ChunkedArray%3CListType%3E"],[246,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[247,"impl-Debug-for-ChunkedArray%3CBinaryType%3E"],[248,"impl-Debug-for-Settings"],[249,"impl-UpperHex-for-Settings"],[250,"impl-Octal-for-Settings"],[251,"impl-LowerHex-for-Settings"],[252,"impl-Binary-for-Settings"],[254,"impl-ChunkedArray%3CFixedSizeListType%3E"],[255,"impl-ChunkedArray%3CListType%3E"],[261,"impl-Flags-for-Settings"],[262,"impl-Settings"],[270,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[271,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[272,"impl-FromIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[273,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[274,"impl-FromIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[275,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[276,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[277,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[278,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[279,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[280,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[281,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[283,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[284,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[285,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[286,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[287,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[288,"impl-FromTrustedLenIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[289,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[290,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[291,"impl-FromTrustedLenIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[292,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[293,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[294,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[295,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[296,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[297,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[298,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[299,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[300,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[301,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[302,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[303,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[304,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[307,"impl-FromParallelIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[308,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[309,"impl-FromParallelIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[310,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[311,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[312,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[313,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[314,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[316,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[317,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[318,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[319,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[320,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[321,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[322,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[323,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[324,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[325,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[326,"impl-FromIteratorReversed%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[327,"impl-FromIteratorReversed%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[330,"impl-ChunkFull%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[331,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[332,"impl-ChunkFull%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[333,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CListType%3E"],[334,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[335,"impl-ChunkFull%3CT%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[336,"impl-ChunkFull%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[337,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[338,"impl-ChunkFullNull-for-ChunkedArray%3CBooleanType%3E"],[339,"impl-ChunkFullNull-for-ChunkedArray%3CFixedSizeListType%3E"],[340,"impl-ChunkFullNull-for-ChunkedArray%3CT%3E"],[341,"impl-ChunkFullNull-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[342,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryOffsetType%3E"],[343,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryType%3E"],[344,"impl-ChunkFullNull-for-ChunkedArray%3CListType%3E"],[345,"impl-ChunkFullNull-for-ChunkedArray%3CStringType%3E"],[347,"impl-ChunkedArray%3CListType%3E"],[348,"impl-ChunkedArray%3CFixedSizeListType%3E"],[350,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[351,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[352,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[353,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[354,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[355,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[356,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[357,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[358,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[359,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[360,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[361,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[362,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[363,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[364,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[365,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[366,"impl-ChunkedArray%3CFixedSizeListType%3E"],[367,"impl-ChunkedArray%3CListType%3E"],[369,"impl-ChunkedArray%3CListType%3E"],[370,"impl-ChunkedArray%3CFixedSizeListType%3E"],[375,"impl-ValueSize-for-ChunkedArray%3CBinaryOffsetType%3E"],[376,"impl-ValueSize-for-ChunkedArray%3CFixedSizeListType%3E"],[377,"impl-ValueSize-for-ChunkedArray%3CListType%3E"],[378,"impl-ValueSize-for-ChunkedArray%3CStringType%3E"],[379,"impl-IntoGroupsProxy-for-ChunkedArray%3CStringType%3E"],[380,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryOffsetType%3E"],[381,"impl-IntoGroupsProxy-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[382,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryType%3E"],[383,"impl-IntoGroupsProxy-for-ChunkedArray%3CT%3E"],[384,"impl-IntoGroupsProxy-for-ChunkedArray%3CBooleanType%3E"],[385,"impl-IntoGroupsProxy-for-ChunkedArray%3CFixedSizeListType%3E"],[386,"impl-IntoGroupsProxy-for-ChunkedArray%3CListType%3E"],[388,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[389,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[390,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[391,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[392,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[393,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[394,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[395,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[396,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[397,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[398,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[399,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[400,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[401,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[402,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[403,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[404,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[405,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[412,"impl-ChunkedArray%3CListType%3E"],[413,"impl-ChunkedArray%3CFixedSizeListType%3E"],[425,"impl-IntoIterator-for-%26ChunkedArray%3CStringType%3E"],[426,"impl-IntoIterator-for-%26ChunkedArray%3CFixedSizeListType%3E"],[427,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryType%3E"],[428,"impl-IntoIterator-for-%26ChunkedArray%3CListType%3E"],[429,"impl-IntoIterator-for-%26ChunkedArray%3CT%3E"],[430,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryOffsetType%3E"],[431,"impl-IntoIterator-for-%26ChunkedArray%3CObjectType%3CT%3E%3E"],[432,"impl-IntoIterator-for-%26ChunkedArray%3CBooleanType%3E"],[435,"impl-IntoSeries-for-ChunkedArray%3CT%3E"],[436,"impl-IntoSeries-for-ChunkedArray%3CInt128Type%3E"],[457,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[458,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[459,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[460,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[461,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[462,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[468,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[469,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[470,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[471,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[472,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[473,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[474,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[475,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[476,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[477,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[478,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[479,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[480,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[481,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[482,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[483,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[484,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[485,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[486,"impl-ChunkedArray%3CBooleanType%3E"],[487,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[488,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[489,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[490,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[491,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[492,"impl-ChunkedArray%3CBooleanType%3E"],[493,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[494,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[495,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[496,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[497,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[498,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[499,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[500,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[501,"impl-ChunkedArray%3CBooleanType%3E"],[502,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[503,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[504,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[505,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[507,"impl-ChunkedArray%3CT%3E"],[508,"impl-ChunkedArray%3CBooleanType%3E"],[509,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[510,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[511,"impl-Mul-for-ChunkedArray%3CT%3E"],[512,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[514,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[515,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[516,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[518,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[519,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[520,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[521,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[522,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[523,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[524,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[525,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[526,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[527,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[528,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[529,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[530,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[531,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[532,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[533,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[534,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[535,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[536,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[537,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[538,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[539,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[540,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[541,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[542,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[543,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[544,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[545,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[546,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[547,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[548,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[549,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[550,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[551,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[552,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[553,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[554,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[555,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[556,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[557,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[559,"impl-ChunkExpandAtIndex%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[560,"impl-ChunkExpandAtIndex%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[561,"impl-ChunkExpandAtIndex%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[562,"impl-ChunkExpandAtIndex%3CT%3E-for-ChunkedArray%3CT%3E"],[563,"impl-ChunkExpandAtIndex%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[564,"impl-ChunkExpandAtIndex%3CListType%3E-for-ChunkedArray%3CListType%3E"],[565,"impl-ChunkExpandAtIndex%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[566,"impl-ChunkExpandAtIndex%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[571,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[572,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[574,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[575,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[576,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[577,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[578,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[579,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[580,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[581,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[582,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[583,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[584,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[585,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[586,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[587,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[588,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[589,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[590,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[591,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[594,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[595,"impl-ChunkExplode-for-ChunkedArray%3CStringType%3E"],[596,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[598,"impl-ChunkedArray%3CListType%3E"],[599,"impl-ChunkedArray%3CStringType%3E"],[600,"impl-ChunkedArray%3CListType%3E"],[601,"impl-ChunkedArray%3CStringType%3E"],[604,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[605,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[606,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[607,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[608,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[609,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[616,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[617,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[618,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[619,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[620,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[621,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[622,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[623,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[624,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[625,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[626,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[627,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[628,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[629,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[630,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[631,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[632,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[633,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[634,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[635,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[636,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[637,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[638,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[639,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[640,"impl-Rem-for-ChunkedArray%3CT%3E"],[641,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[645,"impl-ChunkReverse-for-ChunkedArray%3CBinaryType%3E"],[646,"impl-ChunkReverse-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[647,"impl-ChunkReverse-for-ChunkedArray%3CBinaryOffsetType%3E"],[648,"impl-ChunkReverse-for-ChunkedArray%3CBooleanType%3E"],[649,"impl-ChunkReverse-for-ChunkedArray%3CStringType%3E"],[650,"impl-ChunkReverse-for-ChunkedArray%3CListType%3E"],[651,"impl-ChunkReverse-for-ChunkedArray%3CT%3E"],[652,"impl-ChunkReverse-for-ChunkedArray%3CFixedSizeListType%3E"],[657,"impl-ChunkedSet%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[658,"impl-ChunkedSet%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[659,"impl-ChunkedSet%3Cbool%3E-for-%26ChunkedArray%3CBooleanType%3E"],[660,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[661,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[662,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[663,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[664,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[665,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[666,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[667,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[668,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[669,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[670,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[671,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[678,"impl-ChunkShift%3CT%3E-for-ChunkedArray%3CT%3E"],[679,"impl-ChunkShift%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[680,"impl-ChunkShift%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[681,"impl-ChunkShift%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[682,"impl-ChunkShift%3CListType%3E-for-ChunkedArray%3CListType%3E"],[683,"impl-ChunkShift%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[684,"impl-ChunkShift%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[685,"impl-ChunkShift%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[686,"impl-ChunkShiftFill%3CStringType,+Option%3C%26str%3E%3E-for-ChunkedArray%3CStringType%3E"],[687,"impl-ChunkShiftFill%3CBinaryType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[688,"impl-ChunkShiftFill%3CListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CListType%3E"],[689,"impl-ChunkShiftFill%3CObjectType%3CT%3E,+Option%3CObjectType%3CT%3E%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[690,"impl-ChunkShiftFill%3CBooleanType,+Option%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[691,"impl-ChunkShiftFill%3CFixedSizeListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[692,"impl-ChunkShiftFill%3CT,+Option%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[693,"impl-ChunkShiftFill%3CBinaryOffsetType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[696,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[697,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[698,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[699,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[700,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[701,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[702,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[703,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[704,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[705,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[707,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[708,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[709,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[710,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[711,"impl-Sub-for-ChunkedArray%3CT%3E"],[712,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[713,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[717,"impl-ChunkedArray%3CBooleanType%3E"],[718,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[719,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[720,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[721,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[722,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[725,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[726,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[729,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[730,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[731,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[732,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[733,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[734,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[739,"impl-ChunkedArray%3CListType%3E"],[740,"impl-ChunkedArray%3CFixedSizeListType%3E"],[741,"impl-ChunkedArray%3CListType%3E"],[742,"impl-ChunkedArray%3CT%3E"],[749,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[750,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[751,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[752,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[753,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[754,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[756,"impl-ChunkedArray%3CListType%3E"],[757,"impl-ChunkedArray%3CFixedSizeListType%3E"],[774,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[775,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[776,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[777,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[778,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[783,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[784,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[785,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[786,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[787,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[788,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[789,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[790,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[791,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[792,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[793,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[794,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[795,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[796,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[797,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[798,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[799,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[800,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[801,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[802,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[803,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[804,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[805,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[806,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[807,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[808,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[809,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[810,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[811,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[812,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[813,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[814,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[815,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[816,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[817,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[827,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[828,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[829,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[830,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[831,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[832,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[833,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[834,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[835,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[836,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[837,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[838,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[839,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[840,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[841,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[842,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[843,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[844,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[845,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[846,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[847,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[848,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[849,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[850,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[851,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[852,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[853,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[854,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[855,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[856,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[857,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[858,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[859,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[860,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[861,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[862,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[1037,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[1038,"impl-BinViewChunkedBuilder%3Cstr%3E"],[1265,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1266,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1298,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1299,"impl-ObjectArray%3CT%3E"],[1311,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1312,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1322,"impl-ObjectArray%3CT%3E"],[1323,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1325,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1326,"impl-ObjectArray%3CT%3E"],[1328,"impl-Array-for-ObjectArray%3CT%3E"],[1329,"impl-ObjectArray%3CT%3E"],[1332,"impl-ObjectChunkedBuilder%3CT%3E"],[1333,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1335,"impl-ObjectChunkedBuilder%3CT%3E"],[1336,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[2064,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2065,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2066,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2067,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2068,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2072,"impl-Logical%3CDurationType,+Int64Type%3E"],[2073,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2314,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2315,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2316,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2317,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2318,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2326,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[2327,"impl-PartialEq-for-DataType"],[2333,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2334,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2335,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2337,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2338,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2339,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2373,"impl-Debug-for-AnyValue%3C\'a%3E"],[2374,"impl-Display-for-AnyValue%3C\'_%3E"],[2376,"impl-Display-for-DataType"],[2377,"impl-Debug-for-DataType"],[2379,"impl-Display-for-TimeUnit"],[2380,"impl-Debug-for-TimeUnit"],[2385,"impl-From%3CChunkedArray%3CInt32Type%3E%3E-for-Logical%3CDateType,+Int32Type%3E"],[2386,"impl-From%3CChunkedArray%3CInt64Type%3E%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2401,"impl-From%3CK%3E-for-AnyValue%3C\'_%3E"],[2402,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[2404,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[2406,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[2407,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[2408,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[2409,"impl-From%3C%26ArrowField%3E-for-Field"],[2434,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[2435,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[2458,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2459,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2460,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2461,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2462,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2466,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2467,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2468,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2469,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2470,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2505,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2506,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2507,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2509,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2510,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2511,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2610,"impl-IntoSeries-for-Logical%3CDecimalType,+Int128Type%3E"],[2611,"impl-IntoSeries-for-Logical%3CTimeType,+Int64Type%3E"],[2612,"impl-IntoSeries-for-Logical%3CDurationType,+Int64Type%3E"],[2613,"impl-IntoSeries-for-Logical%3CDateType,+Int32Type%3E"],[2614,"impl-IntoSeries-for-Logical%3CDatetimeType,+Int64Type%3E"],[2662,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2663,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2664,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2666,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2667,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2668,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2681,"impl-PolarsMonthEnd-for-Logical%3CDateType,+Int32Type%3E"],[2682,"impl-PolarsMonthEnd-for-Logical%3CDatetimeType,+Int64Type%3E"],[2683,"impl-PolarsMonthStart-for-Logical%3CDateType,+Int32Type%3E"],[2684,"impl-PolarsMonthStart-for-Logical%3CDatetimeType,+Int64Type%3E"],[2707,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[2708,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[2709,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2710,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[2711,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[2712,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[2713,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2714,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[2719,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2720,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2721,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2723,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2724,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2725,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2729,"impl-TimeMethods-for-Logical%3CTimeType,+Int64Type%3E"],[2730,"impl-DateMethods-for-Logical%3CDateType,+Int32Type%3E"],[2750,"impl-PolarsRound-for-Logical%3CDatetimeType,+Int64Type%3E"],[2751,"impl-PolarsRound-for-Logical%3CDateType,+Int32Type%3E"],[2758,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2759,"impl-Logical%3CDurationType,+Int64Type%3E"],[2764,"impl-Logical%3CTimeType,+Int64Type%3E"],[2765,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2766,"impl-Logical%3CDateType,+Int32Type%3E"],[2780,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2781,"impl-Logical%3CDurationType,+Int64Type%3E"],[2828,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2829,"impl-Logical%3CTimeType,+Int64Type%3E"],[2830,"impl-Logical%3CDateType,+Int32Type%3E"],[2835,"impl-PolarsTruncate-for-Logical%3CDateType,+Int32Type%3E"],[2836,"impl-PolarsTruncate-for-Logical%3CDatetimeType,+Int64Type%3E"],[3117,"impl-Debug-for-ErrString"],[3118,"impl-Display-for-ErrString"],[3119,"impl-Debug-for-PolarsError"],[3120,"impl-Display-for-PolarsError"],[3124,"impl-From%3CError%3E-for-PolarsError"],[3125,"impl-From%3CError%3E-for-PolarsError"],[3126,"impl-From%3CError%3E-for-PolarsError"],[3128,"impl-From%3CTryReserveError%3E-for-PolarsError"],[3129,"impl-From%3CUtf8Error%3E-for-PolarsError"],[3130,"impl-From%3CError%3E-for-PolarsError"],[3254,"impl-Debug-for-DataFrame"],[3255,"impl-Display-for-DataFrame"],[3261,"impl-From%3C%26Schema%3E-for-DataFrame"],[3262,"impl-From%3C%26ArrowSchema%3E-for-DataFrame"],[3263,"impl-From%3CStructChunked%3E-for-DataFrame"],[3290,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3291,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3292,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3293,"impl-Index%3C%26str%3E-for-DataFrame"],[3294,"impl-Index%3Cusize%3E-for-DataFrame"],[3295,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3296,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3297,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3387,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3388,"impl-TryFrom%3C(RecordBatch%3CBox%3Cdyn+Array%3E%3E,+%26%5BArrowField%5D)%3E-for-DataFrame"],[3562,"impl-Display-for-GroupByMethod"],[3563,"impl-Debug-for-GroupByMethod"],[3569,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[3571,"impl-From%3CVec%3C(Vec%3Cu32%3E,+Vec%3CUnitVec%3Cu32%3E%3E)%3E%3E-for-GroupsIdx"],[3572,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[3606,"impl-IntoIterator-for-GroupsIdx"],[3607,"impl-IntoIterator-for-%26GroupsIdx"],[3609,"impl-IntoParallelIterator-for-%26GroupsIdx"],[3610,"impl-IntoParallelIterator-for-GroupsIdx"],[4847,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[4848,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[5481,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[5482,"impl-Default-for-SpecialEq%3CArc%3Cdyn+SeriesBinaryUdf%3E%3E"],[5483,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[5959,"impl-Expr"],[5960,"impl-PartialEq-for-Expr"],[5963,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[5964,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[5977,"impl-PartialEq-for-Arc%3CT,+A%3E"],[5978,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[5979,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[5983,"impl-PartialEq-for-StructArray"],[5984,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[6246,"impl-Display-for-Duration"],[6247,"impl-Debug-for-Duration"],[6271,"impl-Display-for-JoinType"],[6272,"impl-Debug-for-JoinType"],[6273,"impl-Display-for-JoinValidation"],[6274,"impl-Debug-for-JoinValidation"],[6288,"impl-Debug-for-Expr"],[6289,"impl-Display-for-Expr"],[6291,"impl-Debug-for-Operator"],[6292,"impl-Display-for-Operator"],[6294,"impl-Debug-for-BooleanFunction"],[6295,"impl-Display-for-BooleanFunction"],[6296,"impl-Debug-for-CategoricalFunction"],[6297,"impl-Display-for-CategoricalFunction"],[6298,"impl-Debug-for-PowFunction"],[6299,"impl-Display-for-PowFunction"],[6300,"impl-Display-for-FunctionExpr"],[6301,"impl-Debug-for-FunctionExpr"],[6314,"impl-Debug-for-Arc%3CT,+A%3E"],[6315,"impl-Pointer-for-Arc%3CT,+A%3E"],[6316,"impl-Display-for-Arc%3CT,+A%3E"],[6389,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[6391,"impl-From%3CDslPlan%3E-for-LazyFrame"],[6432,"impl-From%3Cu16%3E-for-Expr"],[6433,"impl-From%3Cu64%3E-for-Expr"],[6434,"impl-From%3Cf32%3E-for-Expr"],[6435,"impl-From%3Ci32%3E-for-Expr"],[6436,"impl-From%3Ci64%3E-for-Expr"],[6437,"impl-From%3Ci8%3E-for-Expr"],[6438,"impl-From%3Ci16%3E-for-Expr"],[6439,"impl-From%3Cbool%3E-for-Expr"],[6440,"impl-From%3C%26str%3E-for-Expr"],[6441,"impl-From%3Cu32%3E-for-Expr"],[6442,"impl-From%3CAggExpr%3E-for-Expr"],[6444,"impl-From%3Cu8%3E-for-Expr"],[6445,"impl-From%3Cf64%3E-for-Expr"],[6448,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6449,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6450,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6451,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6452,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6453,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6454,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6455,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6456,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6457,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6463,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[6464,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[6465,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[6466,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[6481,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[6482,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[6483,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[6484,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[6486,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[6487,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[6488,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[6489,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[6490,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[6491,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[6492,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[6493,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[6494,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[6495,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[6496,"impl-From%3CT%3E-for-Arc%3CT%3E"],[6503,"impl-From%3CArrowSchema%3E-for-Schema"],[6504,"impl-From%3C%26Row%3C\'_%3E%3E-for-Schema"],[6506,"impl-From%3C%26Arc%3CArrowSchema%3E%3E-for-Schema"],[6507,"impl-From%3CArc%3CArrowSchema%3E%3E-for-Schema"],[6508,"impl-From%3C%26%5BSeries%5D%3E-for-Schema"],[6509,"impl-From%3C%26ArrowSchema%3E-for-Schema"],[6510,"impl-From%3CGrowableStruct%3C\'a%3E%3E-for-StructArray"],[6511,"impl-From%3CMutableStructArray%3E-for-StructArray"],[6526,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[6527,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[6535,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[6536,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[6549,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[6550,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[7621,"impl-Array-for-StructArray"],[7622,"impl-StructArray"],[7630,"impl-Array-for-StructArray"],[7631,"impl-StructArray"],[8314,"impl-StructArray"],[8315,"impl-Array-for-StructArray"],[8562,"impl-LazyFileListReader-for-LazyCsvReader"],[8563,"impl-LazyCsvReader"],[8564,"impl-LazyJsonLineReader"],[8565,"impl-LazyFileListReader-for-LazyJsonLineReader"],[8610,"impl-LazyCsvReader"],[8611,"impl-LazyFileListReader-for-LazyCsvReader"],[8612,"impl-LazyFileListReader-for-LazyJsonLineReader"],[8613,"impl-LazyJsonLineReader"],[8643,"impl-Array-for-StructArray"],[8644,"impl-StructArray"],[9044,"impl-StrpTimeParser%3Ci32%3E-for-DatetimeInfer%3CInt32Type%3E"],[9045,"impl-StrpTimeParser%3Ci64%3E-for-DatetimeInfer%3CInt64Type%3E"],[9050,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt32Type%3E"],[9051,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt64Type%3E"],[9625,"impl-Debug-for-RollingFunction"],[9626,"impl-Display-for-RollingFunction"],[9814,"impl-Add%3CT%3E-for-%26Series"],[9815,"impl-Add-for-%26Series"],[9816,"impl-Add-for-Series"],[9817,"impl-Add%3CT%3E-for-Series"],[9832,"impl-SeriesSealed-for-Series"],[9833,"impl-AsSeries-for-Series"],[9877,"impl-Div%3CT%3E-for-Series"],[9878,"impl-Div-for-%26Series"],[9879,"impl-Div%3CT%3E-for-%26Series"],[9880,"impl-Div-for-Series"],[9890,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[9891,"impl-ChunkCompare%3C%26str%3E-for-Series"],[9892,"impl-ChunkCompare%3CRhs%3E-for-Series"],[9894,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[9895,"impl-ChunkCompare%3C%26str%3E-for-Series"],[9896,"impl-ChunkCompare%3CRhs%3E-for-Series"],[9913,"impl-Debug-for-Series"],[9914,"impl-Display-for-Series"],[9918,"impl-From%3CLogical%3CDatetimeType,+Int64Type%3E%3E-for-Series"],[9919,"impl-From%3CLogical%3CDateType,+Int32Type%3E%3E-for-Series"],[9921,"impl-From%3CLogical%3CDurationType,+Int64Type%3E%3E-for-Series"],[9922,"impl-From%3CLogical%3CTimeType,+Int64Type%3E%3E-for-Series"],[9923,"impl-From%3CChunkedArray%3CT%3E%3E-for-Series"],[9929,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[9930,"impl-FromIterator%3Cbool%3E-for-Series"],[9931,"impl-FromIterator%3Ci8%3E-for-Series"],[9932,"impl-FromIterator%3Cf64%3E-for-Series"],[9933,"impl-FromIterator%3COption%3Cu8%3E%3E-for-Series"],[9934,"impl-FromIterator%3C%26f32%3E-for-Series"],[9935,"impl-FromIterator%3Cu32%3E-for-Series"],[9936,"impl-FromIterator%3C%26u32%3E-for-Series"],[9937,"impl-FromIterator%3Ci16%3E-for-Series"],[9938,"impl-FromIterator%3COption%3Ci16%3E%3E-for-Series"],[9939,"impl-FromIterator%3C%26bool%3E-for-Series"],[9940,"impl-FromIterator%3COption%3Ci8%3E%3E-for-Series"],[9941,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[9942,"impl-FromIterator%3C%26u16%3E-for-Series"],[9943,"impl-FromIterator%3Ci64%3E-for-Series"],[9944,"impl-FromIterator%3Ci32%3E-for-Series"],[9945,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[9946,"impl-FromIterator%3Cu8%3E-for-Series"],[9947,"impl-FromIterator%3C%26i8%3E-for-Series"],[9948,"impl-FromIterator%3C%26u64%3E-for-Series"],[9949,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[9950,"impl-FromIterator%3Cf32%3E-for-Series"],[9951,"impl-FromIterator%3C%26i16%3E-for-Series"],[9952,"impl-FromIterator%3C%26u8%3E-for-Series"],[9953,"impl-FromIterator%3C%26str%3E-for-Series"],[9954,"impl-FromIterator%3CString%3E-for-Series"],[9955,"impl-FromIterator%3Cu16%3E-for-Series"],[9956,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[9957,"impl-FromIterator%3COption%3Cu16%3E%3E-for-Series"],[9958,"impl-FromIterator%3C%26i64%3E-for-Series"],[9959,"impl-FromIterator%3Cu64%3E-for-Series"],[9960,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[9961,"impl-FromIterator%3C%26f64%3E-for-Series"],[9962,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[9963,"impl-FromIterator%3C%26i32%3E-for-Series"],[9964,"impl-NamedFromOwned%3CVec%3Cu16%3E%3E-for-Series"],[9965,"impl-NamedFromOwned%3CVec%3Cu8%3E%3E-for-Series"],[9966,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[9967,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[9968,"impl-NamedFromOwned%3CVec%3Ci8%3E%3E-for-Series"],[9969,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[9970,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[9971,"impl-NamedFromOwned%3CVec%3Ci16%3E%3E-for-Series"],[9972,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[9973,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[9983,"impl-ChunkCompare%3CRhs%3E-for-Series"],[9984,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[9985,"impl-ChunkCompare%3C%26str%3E-for-Series"],[9987,"impl-ChunkCompare%3C%26str%3E-for-Series"],[9988,"impl-ChunkCompare%3CRhs%3E-for-Series"],[9989,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10026,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10027,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10028,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10030,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10031,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10032,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10041,"impl-Mul%3CT%3E-for-Series"],[10042,"impl-Mul%3CT%3E-for-%26Series"],[10043,"impl-Mul-for-Series"],[10044,"impl-Mul-for-%26Series"],[10048,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[10049,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Series"],[10050,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-Series"],[10051,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[10052,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Series"],[10053,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Series"],[10054,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-Series"],[10055,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-Series"],[10056,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[10057,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[10058,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-Series"],[10059,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[10060,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[10061,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[10062,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[10063,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[10064,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[10065,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[10066,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[10067,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[10068,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[10069,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Series"],[10070,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[10071,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Series"],[10072,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[10073,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[10074,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-Series"],[10075,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[10076,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[10077,"impl-NamedFrom%3CT,+T%3E-for-Series"],[10078,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Series"],[10079,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[10080,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-Series"],[10081,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[10082,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Series"],[10083,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[10084,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[10085,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[10086,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[10087,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[10088,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[10089,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[10090,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[10091,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[10092,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Series"],[10093,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[10094,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[10095,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-Series"],[10096,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-Series"],[10097,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[10098,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[10104,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10105,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10106,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10108,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10109,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10110,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10118,"impl-Rem%3CT%3E-for-Series"],[10119,"impl-Rem-for-%26Series"],[10120,"impl-Rem%3CT%3E-for-%26Series"],[10144,"impl-Sub-for-%26Series"],[10145,"impl-Sub%3CT%3E-for-Series"],[10146,"impl-Sub%3CT%3E-for-%26Series"],[10147,"impl-Sub-for-Series"],[10173,"impl-TryFrom%3C(%26str,+Box%3Cdyn+Array%3E)%3E-for-Series"],[10174,"impl-TryFrom%3C(%26ArrowField,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[10175,"impl-TryFrom%3C(%26ArrowField,+Box%3Cdyn+Array%3E)%3E-for-Series"],[10176,"impl-TryFrom%3C(%26str,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"]],"c":"OjAAAAEAAAAAAAwAEAAAAJ8N5g0jDiYOJw4oDikOKg4vDjIONw44Dl0O","e":"OzAAAAEAAOYc/AMCAAAABQABAAgAAAALAAIAEAAAABIAAAAUAB8AOgAAAD4ABQBIAAIATAAKAFsACgBnAAUAbgAAAHAAAAByAAQAeAALAIYAAgCMAAMAkgAGAJoABgCiAAgArgAEALQAAAC5AAcAwgAIAM0AFQDlAAoA8QAQAAYBAAAJAQEADQENABwBEAA0ARQASwESAF8BEgB2AQAAeAEeAJkBAwClAREAugEDAMEBAQDGAQEAyQEGANUBJgD+AQcABwIyADwCAQA/AhEAUgIDAFcCBABdAgUAZwIAAGkCGgCGAgcAkgIOAKICAQCmAhAAuQIRAM0CBgDYAgEA3wIAAOECAQDoAgEA7gIHAPgCAQD7AgoABwMEAA0DAAAPAygAOgMAADwDIwBiAzQAmQMIAKYDEQC7A1gAIQQSAD8EBwBIBFwApgQAAKkEFADCBAMAygQDANAEHgDxBBMABgUHAA8FAAASBQEAFQUBABkFDgApBQAALAUAAC4FAwAzBQEANgUBADkFCABDBQAARQUFAE0FAQBQBQAAUgUBAFUFAwBaBQMAXwUCAGMFAwBpBQAAbAUAAHQFAAB5BQAAfAUBAIEFAQCEBQAAhwUAAI8FAACVBQIAoAUGAKkFDQC5BQUAwQUIAM0FAgDRBQAA0wUAANUFAADXBQEA3QUFAOYFAQDvBQEA+wUAAP0FAQAABgAAAwYAAAUGAAAJBgAACwYAABAGDAAfBgIALQYAAC8GBwA4BgIAPgYAAEAGAwBFBgEASAYFAFQGFQBrBgEAbwYEAHUGAwB8BgYAkAYDAJUGBwCeBgQApQYCAKkGBQCxBgAAswYMAMQGAQDIBgEAzgYBANEGAQDUBgMA2QYAANsGAADeBgEA4gYAAOQGAQDnBgAA6QYCAO0GDAD7BgAA/QYBAAAHAAACBwEABQcAAAcHAQAKBwAADAcBAA8HAAATBwAAFwcBABsHAAAeBwAAIAcAACIHAwAnBwAAKgcHADMHAQA2BwQAPAcBAEAHAABCBwIARwcAAEwHAwBRBwEAVAcAAFYHAQBZBwAAWwcBAF4HAABgBwEAYwcAAGUHAQBoBwAAagcAAG0HJQCUBxcArQdrABsITgBrCAcAdQiUAAsJBgATCSgAPQkBAEAJDwBSCQEAYgkBAGUJAABnCQMAbAkAAIMJAQCGCQAAjgkAAJEJAACTCQYAmwkEAKEJAACjCQQAqQkBAKwJGQDKCQ4A2wkpAAYKAAAxCggAPAoAAD4KAQBBCgQARwoBAEwKAABOCgUAVQoAAFgKAgBdCgQAYwoAAGUKDwB3CgAAegoSAI4KAACRCgwAnwoMAK0KAACvCgEAswoOAMMKAADKCgAAzAoAANEKDwDjCgAA5QoCAOoKIAAQC2IAdAstAKMLAQCmCzMA2wsBAN4LCADoCwAA6gsBAO0LBADzCwEA+AsAAPoLAgD+CwAAAgwEAAgMBAAODBAAIAwRADMMAAA1DAIAOQwGAEMMBABJDBUAYAwAAGMMAABmDAoAcgwCAHsMEACODBAApgwBAKoMAgCuDAAAsAwAALUMAwC+DAMA0AwAANIMAADUDAEA2wwMAO4MAgABDQEADg0BABINAAAYDQAAIQ0BACQNAAAnDQEALg0AADANBAA4DQYAQQ0JAEwNAABPDQEAUw0EAF8NDQBuDQIAcw0KAH8NAQCCDQMAhw0DAIwNCQCXDQcAoA0BAKMNGAC9DSgA5w0GAPINAAD0DQIA+g0EAAEOAAAFDgcAFQ4NACQOAQArDgMAMA4BADQOAgA5DgAAOw4fAF4ODABtDgUAdA4HAH0OIwCjDgsAsA4PAMIOAADEDgMAyw4GANUODgDmDgYA7w4AAPIOCAD8DgEAAA8DAAUPBQAMDwAAEQ8JABwPAQAgDwMAJQ8BACgPCgA0DwAANw8AADkPCQBEDwAARg8IAFAPAwBYDwAAWw8AAGMPAgBqDwAAbQ8BAHMPCgB/DwkAig8AAI0PBgCVDwEAmA8DAKAPAwCnDwIArg8DALMPAAC1DwoAwg8JAM4PAQDSDwAA1Q8AANcPAgDbDwIA3w8EAOUPAgDrDwIA8Q8AAPMPAQD3DwAA+Q8EAAAQDgAQEAAAExABABYQAwAcEAIAIhAQADQQCQBAEAAAQhABAEYQAABIEAEATBAAAE4QAQBSEAAAVBADAFoQAQBdEAEAYRAAAGQQAABmEAMAaxACAG8QBgB4EAcAghAAAIYQAQCKEAAAjBAAAI4QAQCREAEAlBABAJkQAACbEAoAqRAFALAQBwC6EAIAvhAFAMgQAQDLEAAAzRABANAQAwDWEAEA2RACAN0QAADfEAMA5RAEAOsQAwDwEAIA9BAAAPYQAAD4EAEA+xAAAP0QAAAAEQAAAxECAAgRAwANEQcAFxECAB4RAAAgEQUAJxEDACwRAAAvEQAAMREDADcRAQA6EQMAPxECAEMRAgBHEQwAVREQAGcREgB7EQUAghEDAIkRAQCNEQAAjxEFAJYRBACcEQAAnhEBAKIRAQCnEQEArBEHALgRBQC/EQMAxhEBAMkRBQDQEQEA1BEBANoRBADgEQYA6REAAOsRAQDvEQAA8REBAPURAAD3EQEA+xEAAP0RAwADEgMACBIBAA4SBwAXEgAAGhIDACASAgAkElcAfRIDAIYSAACLEgUAkxIAAJoSAACdEgAAnxIAAKESAAClEgUArxIAALMSAAC6EgAAvhIAAMoSAQDNEgQA0xIAANUSAgDZEgEA3xICAOQSBADqEgAA7BIBAPQSDAADE/YA+xMAAP0TAQAAFAEAAxQAAAUUAgAMFAEAEhQAABQUAAAeFAAAIhQBAC4USQB5FAoAhRRVANwUAwDiFAIA6BQCAO4UCgD8FAMABRUAAAcVAAARFQEAFRUAABsVAAAdFQEAIhUBADEVAAA3FQAAPBUCAEIVAABEFQUATBUpAHcV/gB4FgAAfRYBAIAWAwCHFgIAjxYxAMIWOwD/Fg0AERcBABYXAAAcFwIAIBcnAEkXEABbFwoAaRebAAcYAAANGAAAEBgAABMYBQAaGAAAHhgAACQYAAAmGAAALhgAADEYAAA6GAAAPRgCAEIYBQBJGAEATRgAAE8YAwBXGAAAWxgAAF8YWwC8GAIAwRgAANUYAADrGAAA9hgAAPgYAAADGQAAIRkKAC0ZAQAxGQkAQBkDAEkZAABRGQAAYhkAAGgZAQBrGQUAcxkAAHkZAAB8GQQAghkAAIgZAQCMGQIAkxkFAJoZAgCeGQIAohkAAKQZAACmGQAAqxkAALQZAAC3GQEAuhkCAL8ZAADBGQAAxRkBAMkZAwDRGQEA1RkAAOIZAADkGTsAIxoCACoaAAAsGgAALhoEADUaAAA3GgAAOhoAAEAaAgBGGn0AxhoAAMsaAQBIGwAAShsGAFIbAQBVGwUAXRsAAF8bAgBjGwEAZxsAAGobAQBwGwAAeBsAAHobAAB9GwUAhRsCAJYbAQCZGwEAohsAAKQbAQCnGwAAqxsCALEbAACzGwEAtxsAALwbAQDAGwEAxhsCAMobAwDQGw4A5BsAAOobAQDxGwAA9BsFAP0bAAAEHAIAGBwAACAcAQAkHAAAJxwBACocAAAtHAAAMRwAADYcAAA6HAAAQBwAAEIcAQBIHAgAVxwHAGQcAABmHAAAahwAAHAcAAByHAMAehwBAH0cAQCAHAAAgxwHAI0cAQCQHAAAkxwDAKUcAACoHAEAsxwDALgcAwDAHAIAyBwAAM4cAgDSHAAA3RwAAN8cAwDkHAQA6xwEAPUcAwD6HAAA/hwCAAYdAAASHQAAFx0BABodAQAdHQMAIx0EACkdBAA0HQAANh0AADodAAA9HQIAQx0AAEcdAABJHQAASx0BAF8dAABkHQAAbh0CAHIdBAB5HQAAex0AAH4dAACDHQAAhx0AAIkdAgCNHQEAkh0AAJQdAQCXHQEAmh0BAKEdAwCoHQAAtB0AALYdAAC9HQQAxh0AAMgdAADMHQAAzh0BANMdAADVHQAA2x0JAOYdAADoHQAA6x0AAPIdAAD0HQAA+x0AAAIeCgAPHgIAFB4CAB4eAAAtHgAALx4AADIeAgA2HgMAPB4BAEAeAABEHgAASB5XAKIeCQCtHgAAsx4LAMIeAQDFHooAUh8AAFYfeQDSHwAA1B8DAN8fAADiHwAA5B8BAOgfeABiIAIAcCAAAHYgBAB8IAEAgCAAAIIgAACEIAAAhyAAAI4gAACQIAAAkiB5ABQhAwAhIQAAJCEAACchAAApIQEALiEAADYhAAA/IQAARiEAAFQhAABgIQEAcSEAAHMhAAB2IQAAeCEAAIEhAgCFIQUAmCEAAKQhAQCqIQAAsCEAAL8hAQDEIQAAxiEAAMohFADjIQEA5iFFAC4iAAAwIgAAMiIBADUiAQA4IgQAPiImAGciBQBuIgkAeSICAH8iAACBIgMAhiIBAIkiBQCTIhIApyIBAKoiAgCvIgAAsiIDALciCQDGIgEAySIBAM0iAQDQIgEA1SIFANwiAQDiIgAA5yIAAPciAgAGIwkAHCMIACkjAAArIwsAOCMCADwjEQBPIwEAUiMPAGMjFwB9IwAAfyMCAIQjDACSIwcAmyMEAKIjAgCmIwUAriMAALAjDADBIwEAxSMBAMsjAQDOIwEA0SMDANYjAADYIwAA2yMBAN8jAADhIwEA5CMAAOYjAgDqIwwA+CMAAPojAQD9IwAA/yMBAAIkAAAEJAEAByQAAAkkAQAMJAAAECQAABQkAQAYJAAAGyQAAB0kAAAfJAMAJCQAACckBwAwJAEAMyQEADkkAQA9JAAAPyQCAEQkAABJJAMATiQBAFEkAABTJAEAViQAAFgkAQBbJAAAXSQBAGAkAABiJAEAZSQAAGckAABqJBEAfSQGAIYkAACJJBAAmyQIAKUkAQCoJAgAsiQAALQkAQC6JAAAvCQEAMUkAQDOJAIA1CQAANYkAADgJAAA7yQDAPckCgADJQAABSUIABAliwCdJQEAoCUJAKwlEQC/JQAAwSUPANIlAgDZJQAA7CUDAPMlBgAHJgUADyYAABgmAAAaJgEAISYHAC8mCgBDJgQASSYAAEsmAgBPJgQAVyYDAFwmAQBgJgAAZiYEAG8mAgBzJgYAfSYCAIQmAgCIJgEAjiYOAKAmAQCkJgEAqCYBAKwmAgC5JgMAvyYBAMImAgDHJgAAySYuAPsmAAAAJwAAAicAAAQnAQAIJwAADicBABEnAgAXJwMAIicCACknAAArJwAALScAADAnAQA1JwAAOicDAEEnGgBdJxYAdicBAHknAQB9JwAAfycAAIInAQCHJwIAjCcAAI4nAACRJwEAlicBAJonAACeJwAAoScDAKknAAC0JwAAticBALknDgDOJwEA0icCANYnAADYJxYA8ScBAPUnDgAFKAEACCgFAA8oCgAbKAAAHSgAAB8oBAA="}],\
["polars_core",{"t":"EJJJFQQQQCCCQHQQHCCCCCCQQQCCCCCHCQQQQQQIFGTPPTTFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKRRRMMMMMMMMMMMMMMMMMMMMMMMMFIFKKFFINNNNMNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNMMMMNNNNNNNNCNNNNMNNNNNNNNNNNNNNNNNNNNNNNFFFFKFFFNNNNNNMNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKKNNNNNNNNNNNNKMKKNMFKFNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNCCFIKKNNNNNMNNNNCNNNNNNNMNNNNNNNNNNNNNNNNNNNCNNNNNMNNNNNNNNNMMNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNKIIFMNMNNONNNNNHHHNNHOHMNNNNPKKKKKKKKKKKKKKKKKKKKKKKKKIGPRKKRPPPPPPPPPNMMMMMMNMCNNMMNNNNNNMMNMCMMCNNCMMCMMMMNNNNNMMNNNNNNMMMMNMNMMCMMMCMMNNMMMNNNNMNNCMKRRRKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHPPPGNHNNNNNNNNNNNNNNNNNHNNNNNKHCCCMMHHHHHHHHKFFNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNOOOONNOOMMNNNNNNNNNNNNNNNNNNNNNCHHHHHHHPGRKKKGGKPPPIPIFPFPPPPIFFPPFFKGFJJGPPPFPFPPPPIFPPPFPPPFFIPPPPPPPIFPPPIFKPFRRRSIIIKKPIFPPPIFPPPIFPPPIFPPPIFPRPPPPPPPIFPFKPPPPPPPRPPPKPPIPFFPRIIIIIKKKKRGPKPPPIPFPPPPFGIPRFPPPIFPPPIFPPPIFPPPIFPPPGPPRRRRNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHMNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNHHNNNNNNNNNNHNNNNNNNNNNNNNNNNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNMNFFFKGPFPPPGNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNCNNNCNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNHNNHNNNNNNNHNGPPPPGFHHHPPPPPPFPPPPPPGIGPPPPPPNNNNNCNNNNNNNQNNNNNNHNNNNHQQQQHHNNNNNNNNNOOOOJJJEEEEEEEEGPPNNNNNNNNHNHHHHHNNHHHHHNNNNNPIFPPPPGFPFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNONNONNNNOOONIPPFGPFGGFFIPPIPKPPPPPPPPPPPFPPPNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNCNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOKKHHHHHHHHMMMKMMPPGGPPPPPPPPPPPPFPPPPPPNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNHHHNNNNNNNNNNNNNNNHHIFFKSHHHNNNNNNNNNNNNNNNNOONNNNHNNNNNNNNNNNNNNNNNGFEKIFFEEPFFFKGKFEEEEPPPEPIPPPKKKPFPPIIGKEEPIIIPPEPEEEKEEPPEPKKPEPGPPPIFEKPPPKGEEIEKGPPGFFFPPEEPKPFPEPEKENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNOEONNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNQNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONMNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMNNNNNNNNNNNMNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNONNNNNCNHHNNNMOONNOONMMNNNNNNNNNNNNCNNNNNQQQQONNNNMNNNNNCNCMMNMNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCMNNNNNNNNNNNNNNOONNNNOOOOKKKMMMFNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGKMMFHHHKKNNHKFINNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPEPPKGGPPFFIKNNNNNNNNNNNNNNNCNMNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNMMMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNMNNNNNNNCNNNNNNNNNMNNNNNNNMMNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNMCNNNNMNNNMNNMNNNNNNMNNNNNMNNNNNNNNNNNNNNNNNMMMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNKKKRMMNNCMMNNMMNNMMNNMMNNKKMNNMNNPPGNNNNNNNNNNNNNNNNNNNNNNNIFNNNNNNNNNNNNNNNNNNNNNNKKKKKFFFNHHHHHHHNHHENNNNNNNNHHNNHHNNNNNNNNNNNNNHHHNNNNCNNNNNNNMNNNNNHHHNNNNNNNNNMNNHNNNNENHHHNNNNNHNNNNNNNNNHHHHHH","n":["IdBuildHasher","POOL","PROCESS_ID","SINGLE_LOCK","StringCacheHolder","apply_method_all_arrow_series","apply_method_physical_integer","apply_method_physical_numeric","assert_df_eq","chunked_array","config","datatypes","df","disable_string_cache","downcast_as_macro_arg_physical","downcast_as_macro_arg_physical_mut","enable_string_cache","error","export","fmt","frame","functions","hashing","match_arrow_data_type_apply_macro_ca","match_dtype_to_logical_apply_macro","match_dtype_to_physical_apply_macro","prelude","random","schema","series","testing","using_string_cache","utils","with_match_physical_float_polars_type","with_match_physical_float_type","with_match_physical_integer_polars_type","with_match_physical_integer_type","with_match_physical_numeric_polars_type","with_match_physical_numeric_type","ChunkIdIter","ChunkedArray","ChunkedArrayLayout","FAST_EXPLODE_LIST","Multi","MultiNoNull","SORTED_ASC","SORTED_DSC","Settings","Single","SingleNoNull","__clone_box","__clone_box","_can_fast_explode","add","add","add","add","add_to","agg_list","all","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","append","apply","apply_amortized","apply_amortized_generic","apply_as_ints","apply_as_ints","apply_generic","apply_in_place","apply_kernel","apply_kernel_cast","apply_mut","apply_mut","apply_mut","apply_nonnull_values_generic","apply_to_buffer","apply_to_inner","apply_to_slice","apply_values","apply_values_generic","arg_sort","arg_sort_multiple","arg_unique","arithmetic","as_binary","as_ref","as_ref_dtype","binary_zip_and_apply_amortized","bitand","bitand","bitand_assign","bitor","bitor","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","builder","cast","cast","cast_and_apply_in_place","cast_unchecked","checked_div","checked_div_num","chunk_id","chunks","chunks_mut","clear","clone","clone","clone_into","clone_into","collect","comparison","complement","cont_slice","contains","data_views","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","difference","div","div","div","div","divide","drop","drop","drop","drop","dtype","empty","eq","equal","equal","equal_missing","equal_missing","extend","extend","fill_null_with_values","filter","first_non_null","float","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each","for_each_amortized","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_fallible_iter","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iterator_par","from_name","from_par_iter","from_slice","from_slice_options","from_trusted_len_iter_rev","from_vec","from_vec_validity","full","full_null","full_null_like","full_null_with_dtype","get","get_any_value","get_any_value_unchecked","get_as_series","get_flags","get_inner","get_object","get_object_unchecked","get_sorted_flag","get_unchecked","group_tuples","group_tuples_perfect","gt","gt","gt_eq","gt_eq","has_validity","head","init","init","init","init_rand","inner_dtype","insert","intersection","intersects","into","into","into","into_decimal","into_decimal_unchecked","into_iter","into_iter","into_no_null_iter","into_series","is_all","is_empty","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter","iter_names","iter_validities","iterator","last","last_non_null","layout","legacy_div","legacy_div","legacy_div_scalar","legacy_div_scalar","legacy_div_scalar_lhs","legacy_div_scalar_lhs","len","lhs_div","lhs_rem","lhs_sub","limit","lt","lt","lt_eq","lt_eq","max","max","max_as_series","mean","mean","median","median_as_series","min","min","min_as_series","min_max","mmap_slice","mmap_slice","mul","mul","mul","mul","multiply","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_vec","new_from_vec_and_validity","new_vec","none_to_nan","not","not_equal","not_equal","not_equal_missing","not_equal_missing","null_count","object","ops","par_iter","par_iter","par_iter_indexed","par_iter_indexed","prod_as_series","prune_empty_chunks","quantile","quantile_as_series","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","ref_field","rem","rem","rem","rem","remainder","remove","rename","reverse","rolling_map","rolling_map_float","sample_frac","sample_n","scatter_single","scatter_with","set","set","set_fast_explode","set_inner_dtype","set_null_count","set_sorted_flag","set_sorted_flag","shift","shift_and_fill","shrink_to_fit","slice","sort","sort_with","std","std_as_series","sub","sub","sub","sub","sub","sub_assign","subtract","sum","sum","sum_as_series","symmetric_difference","tail","take","take","take_unchecked","take_unchecked","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","to_ndarray","to_ndarray","to_owned","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","toggle","true_div","true_div","true_div_scalar","true_div_scalar","true_div_scalar_lhs","true_div_scalar_lhs","try_apply_amortized","try_apply_amortized_generic","try_apply_generic","try_apply_nonnull_values_generic","try_from","try_from","try_from","try_from_chunk_iter","try_into","try_into","try_into","try_zip_and_apply_amortized","type_id","type_id","type_id","union","unique","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_as_series","vzip","vzip","vzip","with_chunk","with_chunks","with_name","with_nullable_idx","with_sorted_flag","wrapping_abs","wrapping_abs","wrapping_add","wrapping_add","wrapping_add_scalar","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul","wrapping_mul_scalar","wrapping_mul_scalar","wrapping_neg","wrapping_neg","wrapping_sub","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","wrapping_trunc_div_scalar_lhs","zip_and_apply_amortized","zip_with","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","__clone_box","__clone_box","__clone_box","append_null","append_null","append_null","append_null","append_null","append_option","append_option","append_value","append_value","append_value","append_value","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","finish","finish","finish","finish","finish","finish","finish","finish","from","from","from","from","from_iter_options","from_iter_values","from_slice","from_slice_options","init","init","init","init","into","into","into","into","list","new","new","new","new","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_array","append_empty","append_empty","append_iter","append_iter","append_iter_values","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_opt_array","append_opt_series","append_opt_series","append_opt_slice","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_slice","append_trusted_len_iter","append_trusted_len_iter","append_values_iter","append_values_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","fast_explode","fast_explode","fast_explode","fast_explode","fast_explode","field","field","field","field","field","finish","finish","finish","finish","from","from","from","from","from","from","from","get_list_builder","init","init","init","init","init","init","init","inner_array","inner_array","inner_array","inner_array","inner_array","into","into","into","into","into","into","into","new","new","new","new","new","new","new","new_with_values_type","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","PolarsIterator","SomeIterator","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","from","from","init","init","into","into","into_iter","into_iter","new","next","next","next_back","next_back","par","size_hint","size_hint","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","list","string","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","arr_from_iter","arr_from_iter","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","as_any","as_any_mut","borrow","borrow_mut","builder","clone","clone_into","data_type","deref","deref_mut","drop","eq","equal","fmt","from","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","is_valid_unchecked","iter","iter","len","null_count","registry","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","to_boxed","to_boxed","to_owned","try_arr_from_iter","try_arr_from_iter","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","type_name","validity","value","value_unchecked","value_unchecked","values","values_iter","values_iter","vzip","with_validity","with_validity","with_validity_typed","ObjectChunkedBuilder","append_null","append_null","append_option","append_value","append_value","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","Max","MaxBound","Mean","Min","MinBound","None","One","Some","Zero","__clone_box","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","borrow_mut","cast","cast_unchecked","clone","clone_into","deref","deref_mut","drop","eq","equal","equal_missing","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","from","full","full","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","init","into","is_first_distinct","is_last_distinct","lt","lt_eq","max","mean","median","min","min_max","n_unique","new_from_index","not_equal","not_equal_missing","offsets","quantile","reverse","rolling_map","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","sort","sort","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","try_from","try_into","type_id","unique","var","vzip","zip","zip_with","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_array","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","slice_sorted_non_null_and_offset","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_descending","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","__clone_box","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","deref","deref","deref_mut","deref_mut","descending","descending","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from","hash","hash","init","init","into","into","maintain_order","maintain_order","multithreaded","multithreaded","new","new","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_maintain_order","with_maintain_order","with_multithreaded","with_multithreaded","with_nulls_last","with_nulls_last","with_order_descending","with_order_descending","with_order_descendings","with_order_reversed","with_order_reversed","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","force_async","get_file_prefetch_size","get_rg_prefetch_size","verbose","Any","AnyValue","Array","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date32","Date64","DateType","Datetime","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","DurationType","Enum","Enum","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","Float","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","IsNested","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Second","StaticArray","Str","String","String","StringChunked","StringOwned","StringType","Struct","Time","Time32","Time64","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_can_fast_explode","add","add","add","add","add","add","add","add","add","add","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","agg_list","agg_list","agg_list","agg_list","agg_list","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","apply","apply","apply","apply","apply","apply_amortized","apply_amortized_generic","apply_as_ints","apply_as_ints","apply_kernel","apply_kernel","apply_kernel","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_mut","apply_mut","apply_to_buffer","apply_to_inner","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_values","apply_values","apply_values","apply_values","apply_values","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_unique","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_binary","as_borrowed","as_ref","as_ref","as_ref_dtype","as_slice","binary_zip_and_apply_amortized","bitand","bitand","bitor","bitor","bitxor","bitxor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","call_categorical_merge_operation","cast","cast","cast","cast","cast","cast","cast","cast","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","categorical","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","contains_categoricals","contains_objects","contains_views","create_enum_data_type","data_type","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","divide","divide","divide","divide","divide","divide","divide","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dtype","dtype","dtype","dtype","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","explode_and_offsets","explode_and_offsets","field","fill_null_with_values","fill_null_with_values","filter","filter","filter","filter","filter","filter","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each_amortized","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arrow","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_owned","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter_with_dtype","from_slice","from_slice","from_slice","from_slice","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_trusted_len_iter_rev","from_vec","from_zeroable_vec","full","full","full","full","full","full","full","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null_with_dtype","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_as_series","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_inner","get_object","get_object_unchecked","get_str","get_unchecked","get_unchecked","get_values_size","get_values_size","get_values_size","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","gt","gt","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","hash","hash","hash","hash","hash","hash","hash_impl","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner_dtype","inner_dtype","inner_dtype","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_decimal","into_decimal_unchecked","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_series","into_series","into_static","is_array","is_binary","is_bool","is_boolean","is_categorical","is_decimal","is_enum","is_float","is_float","is_integer","is_integer","is_known","is_list","is_logical","is_nested","is_nested_null","is_nested_null","is_null","is_null","is_numeric","is_numeric","is_object","is_ord","is_primitive","is_signed_integer","is_signed_integer","is_string","is_struct","is_temporal","is_unsigned_integer","is_unsigned_integer","is_view","iter","last","lt","lt","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","max","max_as_series","max_as_series","max_as_series","mean","median","median","median_as_series","median_as_series","merge_dtypes","min","min_as_series","min_as_series","min_as_series","mmap_slice","mul","multiply","multiply","multiply","multiply","multiply","multiply","multiply","n_unique","n_unique","name","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_vec","new_from_vec_and_validity","not","not","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","offsets","offsets","par_iter","par_iter","par_iter_indexed","par_iter_indexed","partial_cmp","partial_cmp","precision","precision","quantile","quantile","quantile_as_series","quantile_as_series","rand_bernoulli","remainder","remainder","remainder","remainder","remainder","remainder","remainder","reverse","reverse","reverse","reverse","reverse","reverse","revmap","scale","scale","scatter_single","scatter_single","scatter_single","scatter_with","scatter_with","scatter_with","set","set","set","set_fast_explode","set_inner_dtype","set_name","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","sort","sort","sort","sort","sort_with","sort_with","sort_with","sort_with","std_as_series","std_as_series","strict_cast","string_cache","sub","subtract","subtract","subtract","subtract","subtract","subtract","subtract","sum","sum_as_series","sum_as_series","sum_as_series","take_unchecked","take_unchecked","take_unchecked","take_unchecked","to_arrow","to_arrow","to_arrow","to_arrow_field","to_ascii","to_decimal","to_logical","to_logical_type","to_ndarray","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string_unchecked","try_apply_amortized","try_apply_amortized_generic","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_strict_cast","try_to_arrow","try_zip_and_apply_amortized","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","underlying_physical_type","unique","unique","unique","unique","value","value_unchecked","value_within_range","values_iter","var_as_series","var_as_series","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_capacity","with_capacity","with_capacity","with_nullable_idx","with_validity_typed","zip_and_apply_amortized","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","__clone_box","_can_fast_unique","_with_fast_unique","append","append","append_null","append_value","arg_sort","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_categorical_merge_operation","cast","clone","clone_into","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drain_iter_and_finish","drop","drop","drop","drop","dtype","equal","equal","equal","equal_missing","equal_missing","equal_missing","finish","finish","finish","from","from","from","from","from_cats_and_rev_map_unchecked","from_global_indices_unchecked","from_string_to_enum","full_null","get_any_value","get_any_value_unchecked","get_rev_map","gt","gt","gt","gt_eq","gt_eq","gt_eq","init","init","init","init","into","into","into","into","into_iter","into_series","is_empty","is_enum","iter_str","len","lt","lt","lt","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","max_as_series","merge_map","min_as_series","n_unique","name","new","new","next","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","null_count","physical","register_value","revmap","size_hint","sort","sort_with","string_cache","to_arrow","to_enum","to_global","to_local","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unique","uses_lexical_ordering","value_counts","vzip","vzip","vzip","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","__clone_box","__clone_box","borrow","borrow","borrow_mut","borrow_mut","build_local","clone","clone","clone_into","clone_into","default","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","find","fmt","fmt","from","from","get","get_categories","get_optional","init","init","into","into","is_global","is_local","len","same_src","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","drop","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","Err","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","Ok","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","borrow","borrow_mut","borrow_mut","constants","deref","deref","deref","deref_mut","deref_mut","drop","drop","feature_gated","fmt","fmt","fmt","from","from","from","get_warning_function","init","init","into","into","map_err","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","error","error","msg","msg","FALSE","LENGTH_LIMIT_MSG","TRUE","_boost_hash_combine","ahash","arrow","chrono","num","once_cell","rayon","regex","FloatFmt","Full","Mixed","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt_decimal","from","get_decimal_separator","get_float_fmt","get_float_precision","get_thousands_separator","get_trim_decimal_zeros","init","into","set_decimal_separator","set_float_fmt","set_float_precision","set_thousands_separator","set_trim_decimal_zeros","to_owned","try_from","try_into","type_id","vzip","Any","ArrowChunk","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","__clone_box","__clone_box","_add_columns","_apply_columns","_apply_columns_par","_filter_seq","_select_impl","_select_impl_unchecked","_slice_and_realloc","add","add","add","agg_chunks","align_chunks","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone_into","clone_into","clone_into","column","columns","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","drop","drop","drop","drop","drop","drop","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","eq","eq","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","explode","explode_impl","extend","fields","fill_null","filter","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","group_by","group_by_stable","group_by_with_series","hash","hash_rows","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","index","index","index","index","index","index","index","init","init","init","init","init","insert_column","into","into","into","into","into","into_iter","into_iter","is_duplicated","is_empty","is_unique","iter","iter_chunks","iter_chunks_physical","max_horizontal","mean_horizontal","melt","melt2","min_horizontal","mul","mul","mul","n_chunks","new","new_no_checks","new_no_length_checks","next","next","null_count","partition_by","partition_by_stable","pipe","pipe_mut","pipe_with_args","pop","ptr_equal","rem","rem","rem","rename","replace","replace_column","replace_or_add","reverse","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_physical","select_series","select_with_schema","select_with_schema_unchecked","set_column_names","shape","shift","should_rechunk","shrink_to_fit","size_hint","size_hint","slice","slice_par","sort","sort_in_place","split_chunks","split_chunks_by_n","sub","sub","sub","sum_horizontal","tail","take","take_unchecked","take_unchecked_impl","to_ndarray","to_owned","to_owned","to_owned","to_string","top_k","transpose","try_apply","try_apply_at_idx","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_rows_iter_and_schema","try_get_column_index","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unique","unique_impl","unique_stable","vstack","vstack_mut","vzip","vzip","vzip","vzip","vzip","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","MeltArgs","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","id_vars","init","into","streamable","to_owned","try_from","try_into","type_id","value_name","value_vars","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","Idx","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","Slice","SlicedGroups","Std","Sum","Var","__clone_box","__clone_box","__clone_box","__clone_box","agg_list","aggregations","all","apply","as_list_chunked","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","count","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","df","drive_unindexed","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expr","first","first","first","first_mut","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","from","from","from","from","from","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","group_tuples","groups","idx_mut","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_idx","into_iter","into_iter","into_iter","into_par_iter","into_par_iter","into_par_iter","is_empty","is_empty","is_sorted_flag","iter","iter","keys","keys_sliced","last","len","len","max","mean","median","min","n_unique","new","new","next","nth","par_apply","par_iter","par_iter","quantile","select","slice","sort","sort","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unroll","unwrap_idx","unwrap_slice","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","All","AnyValueBuffer","AnyValueBufferTrusted","Boolean","Boolean","Float32","Float32","Float64","Float64","Int32","Int32","Int64","Int64","Null","Null","Row","String","String","UInt32","UInt32","UInt64","UInt64","__clone_box","__clone_box","__clone_box","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","coerce_data_type","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","infer_schema","init","init","init","into","into","into","into_series","into_series","new","new","new","reset","reset","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","concat_df_diagonal","concat_df_horizontal","IdBuildHasher","IdHasher","IdxHash","VecHash","_HASHMAP_INIT_SIZE","_boost_hash_combine","_df_rows_to_hashes_threaded_vertical","_hash_binary_array","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref","deref_mut","deref_mut","drop","drop","finish","fmt","from","from","hash","hash","idx","init","init","into","into","populate_multiple_key_hashmap","try_from","try_from","try_into","try_into","type_id","type_id","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vzip","vzip","write","write_i32","write_i64","write_u32","write_u64","Ambiguous","Arc","ArithmeticChunked","ArrayCollectIterExt","ArrayRef","ArrowField","ArrowSchema","BinaryChunkedBuilder","BooleanChunkedBuilder","C","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","ChunkAggSeries","ChunkId","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","ColumnNotFound","ComputeError","Context","DataFrame","Duplicate","DynArgs","Earliest","Err","Fortran","FromData","FromDataBinary","FromDataUtf8","Global","GlobalRevMapMerger","Higher","IO","IdxArr","IdxSize","IndexOrder","IndexToUsize","IntoSeries","IntoVec","InvalidOperation","LargeBinaryArray","LargeListArray","LargeStringArray","Latest","Lexical","LhsNumOps","Linear","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListFromIter","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","Local","Lower","MeltArgs","Midpoint","NamedFrom","NamedFromOwned","Nearest","NewChunkedArray","NoData","NonExistent","None","Null","Null","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","Ok","OutOfBounds","Physical","PolarsArray","PolarsError","PolarsIterator","PolarsObject","PolarsResult","PrimitiveChunkedBuilder","QuantileAggSeries","QuantileInterpolOptions","Raise","Raise","RevMapping","RollingOptionsFixedWindow","RollingQuantileParams","RollingVarParams","SchemaFieldNotFound","SchemaMismatch","Series","SeriesTrait","ShapeMismatch","SlicedArray","Some","StringCacheHolder","StringCacheMismatch","StringChunkedBuilder","StructFieldNotFound","UniqueKeepStrategy","VarAggSeries","VecHash","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","allocator","as_fd","as_ptr","as_raw_fd","as_ref","assume_init","assume_init","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_categorical_merge_operation","cause","center","checked_div","checked_div_num","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","compare","context","context_trace","convert_inner_type","data_type","data_type","datatypes","ddof","decrement_strong_count","decrement_strong_count_in","default","default","default","default","default","default","default_arrays","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","df","downcast","downcast_unchecked","downgrade","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extract","fields","filter","finish","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fn_params","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_data_default","from_data_unchecked_default","from_data_unchecked_default","from_fallible_iter","from_iter","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_primitive_trusted_len","from_iter_utf8_trusted_len","from_par_iter","from_raw","from_raw_in","from_str","from_vec","ge","get_mut","get_mut_unchecked","get_names","get_unchecked","gt","has_validity","hash","hash","hash","hash","hash","idx","increment_strong_count","increment_strong_count_in","index_of","indexes_to_usizes","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner_mut","interpol","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_raw","into_series","is_empty","is_null","is_null_idx","is_nullable","is_read_vectored","is_valid_bit_pattern","is_write_vectored","le","len","list","lt","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","max_as_series","max_as_series","median_as_series","metadata","metadata","min_as_series","min_as_series","min_periods","name","ne","negative_to_usize","new","new","new","new_cyclic","new_in","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","null","null","null","partial_cmp","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","prob","prod_as_series","prod_as_series","provide","ptr_eq","quantile_as_series","read","read_buf","read_to_end","read_to_string","read_vectored","revmap","seek","slice","slice_typed","slice_typed_unchecked","source","std_as_series","store","string_cache","strong_count","sum_as_series","sum_as_series","to_opt","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_negative_to_usize","try_new","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_pin","try_pin_in","try_unwrap","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrap_or_clone","utf8","var_as_series","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weak_count","weights","window_size","with_metadata","with_metadata","write","write_vectored","error","error","msg","msg","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","from_data_unchecked_default","AnonymousBuilder","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","is_empty","new","offsets","push","push_empty","push_multiple","push_null","push_opt","take_offsets","try_from","try_into","type_id","vzip","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","data_type","default","deref","deref_mut","drop","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","SlicedArray","slice_typed","slice_typed_unchecked","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","BinaryFromIter","Utf8FromIter","from_values_iter","from_values_iter","set_global_random_seed","IndexOfSchema","Schema","SchemaRef","__clone_box","borrow","borrow_mut","clone","clone_into","contains","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","from","from","from_fallible_iter","from_iter","get","get_at_index","get_at_index_mut","get_field","get_full","get_names","get_names","hash","index_of","index_of","init","insert_at_index","into","into_iter","is_empty","iter","iter_dtypes","iter_dtypes_mut","iter_fields","iter_names","len","merge","new","new_inserting_at_index","remove","rename","set_dtype","set_dtype_at_index","shift_remove","shift_remove_index","to_arrow","to_owned","to_supertype","try_from","try_get","try_get_at_index","try_get_field","try_get_full","try_get_mut","try_index_of","try_into","type_id","vzip","with_capacity","with_column","Ascending","Ascending","ChunkCompare","Descending","Descending","IntoSeries","IsSorted","IsSorted","Not","Not","Series","SeriesIter","SeriesPhysIter","SeriesTrait","__clone_box","__clone_box","_sum_as_series","_sum_as_series","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","add","add","add","append","arg_sort","arg_sort","arg_unique","arg_unique","arithmetic","array_ref","as_any","as_any_mut","as_any_mut","as_list","as_mut","as_ref","as_ref","as_single_ptr","as_single_ptr","as_single_ptr","binary","binary_offset","bitand","bitand","bitor","bitor","bitxor","bitxor","bool","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast","cast","cast_unchecked","categorical","checked_div","checked_div","checked_div","checked_div_num","chunk_lengths","chunks","chunks_mut","chunks_mut","clear","clone","clone","clone_inner","clone_into","clone_into","compute_len","decimal","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","div","div","div","div","dot","drop","drop","drop","drop_nulls","drop_nulls","dtype","dtype","eq","eq","equal","equal","equal","equal_missing","equal_missing","equal_missing","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","extend","extend_constant","f32","f64","field","field","fill_null","filter","filter_threaded","fmt","fmt","fmt","fmt_list","from","from","from","from","from_any_values","from_any_values_and_dtype","from_arrow","from_chunks_and_dtype_unchecked","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","full_null","gather_every","get","get_data_ptr","get_flags","get_object","get_object","get_object_chunked_unchecked","get_object_chunked_unchecked","get_unchecked","get_unchecked","gt","gt","gt","gt_eq","gt_eq","gt_eq","has_validity","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","init","init","into","into","into","into_frame","into_iter","into_series","into_series","is_empty","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","is_series","is_series","is_sorted_flag","iter","len","limit","limit","list","lt","lt","lt","lt_eq","lt_eq","lt_eq","max","max_as_series","max_as_series","mean","mean","mean_as_series","median","median","median_as_series","median_as_series","min","min_as_series","min_as_series","mul","mul","mul","mul","n_chunks","n_chunks","n_unique","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_null","next","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","null","null_count","ops","phys_iter","product","quantile_as_series","quantile_as_series","rechunk","rem","rem","rem","rename","rename","reshape","reverse","reverse","rolling_map","rolling_map","sample_frac","sample_n","set_sorted_flag","shift","shrink_to_fit","shrink_to_fit","shrink_to_fit","shuffle","size_hint","slice","sort","sort_with","sort_with","std","std","std_as_series","std_as_series","str","str_value","strict_cast","sub","sub","sub","sub","sum","sum_as_series","tail","take","take_slice","take_slice_unchecked","take_slice_unchecked_threaded","take_threaded","take_unchecked","take_unchecked_from_slice","take_unchecked_threaded","to_arrow","to_float","to_owned","to_owned","to_physical_repr","to_string","try_add","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","u16","u32","u64","u8","unique","unique","unique_stable","unpack","unstable","var","var","var_as_series","var_as_series","vzip","vzip","vzip","with_name","wrapping_trunc_div_scalar","zip_with","LhsNumOps","NumOpsDispatch","NumOpsDispatchInner","Output","add","add_to","add_to","add_to","checked","div","divide","divide","divide","mul","multiply","multiply","multiply","rem","remainder","remainder","remainder","sub","subtract","subtract","subtract","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","checked_div","checked_div","checked_div_num","checked_div_num","checked_div_num","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip","ArrayBox","UnstableSeries","__clone_box","as_mut","as_ref","borrow","borrow_mut","clone","clone_into","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array","Arg","CustomIterTools","CustomIterToolsSized","FromTrustedLenIterator","IntoVec","NoNull","TrustMyLength","Wrap","__clone_box","_set_partition_size","accumulate_dataframes_horizontal","accumulate_dataframes_vertical","accumulate_dataframes_vertical_unchecked","accumulate_dataframes_vertical_unchecked_optional","align_chunks_binary","align_chunks_ternary","all_equal","any_values_to_supertype","any_values_to_supertype_and_n_dtypes","arrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","coalesce_nulls","coalesce_nulls_series","collect_reversed","collect_trusted","concat_df","concat_df_unchecked","contains","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","dtypes_to_schema","dtypes_to_supertype","ensure_sorted_arg","eq","equivalent","equivalent","equivalent","flatten","fold_options","from","from","from","from_fallible_iter","from_iter","from_iter","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_par_iter","from_trusted_len_iter_rev","from_trusted_len_iter_rev","get_supertype","get_time_units","handle_casting_failures","hash","init","init","init","into","into","into","into_inner","into_iter","into_vec","into_vec","into_vec","materialize_dyn_int","new","new","next","next_back","rayon","size_hint","slice_slice","split_ca","split_df_as_ref","to_owned","trust_my_length","try_from","try_from","try_from","try_get_supertype","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_unstable_series","cap_and_offsets","flatten_df_iter","flatten_nullable","flatten_par","flatten_series"],"q":[[0,"polars_core"],[39,"polars_core::chunked_array"],[476,"polars_core::chunked_array::arithmetic"],[504,"polars_core::chunked_array::builder"],[608,"polars_core::chunked_array::builder::list"],[762,"polars_core::chunked_array::collect"],[776,"polars_core::chunked_array::float"],[778,"polars_core::chunked_array::from_iterator_par"],[782,"polars_core::chunked_array::iterator"],[819,"polars_core::chunked_array::iterator::par"],[821,"polars_core::chunked_array::object"],[892,"polars_core::chunked_array::object::builder"],[915,"polars_core::chunked_array::object::registry"],[943,"polars_core::chunked_array::ops"],[1066,"polars_core::chunked_array::ops::arity"],[1101,"polars_core::chunked_array::ops::float_sorted_arg_max"],[1103,"polars_core::chunked_array::ops::gather"],[1106,"polars_core::chunked_array::ops::search_sorted"],[1135,"polars_core::chunked_array::ops::sort"],[1142,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[1143,"polars_core::chunked_array::ops::sort::arg_sort_multiple"],[1150,"polars_core::chunked_array::ops::sort::options"],[1224,"polars_core::chunked_array::temporal"],[1225,"polars_core::chunked_array::temporal::conversion"],[1228,"polars_core::config"],[1232,"polars_core::datatypes"],[2605,"polars_core::datatypes::categorical"],[2745,"polars_core::datatypes::categorical::revmap"],[2797,"polars_core::datatypes::categorical::string_cache"],[2816,"polars_core::datatypes::revmap"],[2822,"polars_core::datatypes::string_cache"],[2826,"polars_core::error"],[2889,"polars_core::error::PolarsError"],[2893,"polars_core::error::constants"],[2896,"polars_core::export"],[2904,"polars_core::fmt"],[2934,"polars_core::frame"],[3198,"polars_core::frame::explode"],[3227,"polars_core::frame::group_by"],[3462,"polars_core::frame::group_by::GroupByMethod"],[3463,"polars_core::frame::group_by::GroupsProxy"],[3465,"polars_core::frame::group_by::aggregations"],[3478,"polars_core::frame::group_by::expr"],[3481,"polars_core::frame::row"],[3575,"polars_core::functions"],[3577,"polars_core::hashing"],[3625,"polars_core::prelude"],[4181,"polars_core::prelude::PolarsError"],[4185,"polars_core::prelude::default_arrays"],[4191,"polars_core::prelude::list"],[4214,"polars_core::prelude::null"],[4244,"polars_core::prelude::revmap"],[4250,"polars_core::prelude::slice"],[4253,"polars_core::prelude::string_cache"],[4257,"polars_core::prelude::utf8"],[4261,"polars_core::random"],[4262,"polars_core::schema"],[4334,"polars_core::series"],[4715,"polars_core::series::arithmetic"],[4740,"polars_core::series::arithmetic::checked"],[4748,"polars_core::series::ops"],[4774,"polars_core::series::unstable"],[4798,"polars_core::utils"],[4907,"polars_core::utils::flatten"],[4912,"dyn_clone::sealed"],[4913,"num_traits"],[4914,"num_traits::cast"],[4915,"core::option"],[4916,"core::iter::traits::iterator"],[4917,"core::ops::function"],[4918,"core::marker"],[4919,"core::ops::function"],[4920,"alloc::vec"],[4921,"core::iter::traits::double_ended"],[4922,"core::iter::traits::collect"],[4923,"core::fmt"],[4924,"core::fmt"],[4925,"core::result"],[4926,"polars_utils::iter::fallible"],[4927,"polars_arrow::bitmap::immutable"],[4928,"rayon::iter"],[4929,"polars_arrow::trusted_len"],[4930,"core::marker"],[4931,"bitflags::iter"],[4932,"bitflags::iter"],[4933,"core::iter::adapters::map"],[4934,"num_traits::cast"],[4935,"core::ops::range"],[4936,"rayon::iter"],[4937,"polars_utils::hashing"],[4938,"ndarray::aliases"],[4939,"ndarray::aliases"],[4940,"core::any"],[4941,"core::ops::function"],[4942,"core::clone"],[4943,"alloc::boxed"],[4944,"polars_arrow::array::boolean"],[4945,"core::any"],[4946,"polars_arrow::bitmap::utils::zip_validity"],[4947,"polars_arrow::offset"],[4948,"core::hash"],[4949,"core::error"],[4950,"polars_arrow::array::primitive"],[4951,"polars_row::row"],[4952,"chrono::naive::datetime"],[4953,"alloc::borrow"],[4954,"bytemuck::zeroable"],[4955,"core::convert"],[4956,"polars_arrow::datatypes::physical_type"],[4957,"core::borrow"],[4958,"smartstring::alias"],[4959,"polars_arrow::pushable"],[4960,"core::cmp"],[4961,"polars_arrow::datatypes::physical_type"],[4962,"polars_utils::idx_vec"],[4963,"rayon::iter::plumbing"],[4964,"core::iter::adapters::copied"],[4965,"core::iter::adapters::zip"],[4966,"polars_utils::float"],[4967,"polars_arrow::types::native"],[4968,"polars_arrow::array::binary"],[4969,"hashbrown::map"],[4970,"core::hash"],[4971,"std::os::fd::owned"],[4972,"std::os::fd::owned"],[4973,"core::mem::maybe_uninit"],[4974,"core::cmp"],[4975,"alloc::sync"],[4976,"polars_arrow::scalar"],[4977,"core::cmp"],[4978,"std::io::error"],[4979,"simdutf8::basic"],[4980,"alloc::collections"],[4981,"regex::error"],[4982,"std::path"],[4983,"std::path"],[4984,"std::ffi::os_str"],[4985,"core::ffi::c_str"],[4986,"alloc::borrow"],[4987,"polars_arrow::array::list"],[4988,"core::cmp"],[4989,"core::error"],[4990,"std::io"],[4991,"std::io"],[4992,"std::io"],[4993,"polars_arrow::array::utf8"],[4994,"polars_arrow::datatypes::schema"],[4995,"polars_arrow::datatypes"],[4996,"polars_arrow::legacy::trusted_len::rev"],[4997,"smartstring::config"],[4998,"smartstring"]],"if":"`````````````{{}b}``0``````````````{{}d}``````````````````{{cf}b{}}0{{{j{h}}}d}{{{j{c}}e}gl{nA`}{}}{{{j{c}}{j{c}}}el{}}01{{{j{c}}Ab}{{Ad{Ab}}}Af}{{{j{c}}Ah}Abl}{{{j{Aj}}}d}{{}Al}{{{j{Aj}}}{{An{d}}}}{{{j{h}}}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}{{{j{h}}Bf}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}42{{{j{c}}{j{c}}}b{{Bl{}{{Bh{Bj}}}}}}{{{j{c}}e}{{j{c}}}l{{C`{An}{{Bn{An}}}}Cb}}{{{j{h}}c}{{j{h}}}{{Cf{Cd}{{Bn{Ab}}}}}}{{{j{h}}e}{{j{g}}}{}{{Cf{{An{Cd}}}{{Bn{{An{c}}}}}}Cb}Bl}{{{j{Ch}}c}Ab{{C`{Ab}{{Bn{Ab}}}}}}{{{j{Cj}}c}Ab{{C`{Ab}{{Bn{Ab}}}}}}{{{j{c}}g}{{j{i}}}Bl{}{{Cf{An}{{Bn{{An{e}}}}}}}Bl}{{{j{c}}e}{{j{c}}}l{{C`{}{{Bn{}}}}Cb}}{{{j{c}}C`}{{j{c}}}l}{{{j{c}}C`}{{j{e}}}lBl}{{{j{Cl}}c}{{j{Cl}}}{{Cf{{D`{Cn}}}{{Bn{{D`{Cn}}}}}}}}{{{j{Db}}c}{{j{Db}}}{{Cf{Bf}{{Bn{Bf}}}}}}{{{j{c}}e}bl{{C`{}{{Bn{}}}}Cb}}{{{j{c}}Ddg}{{j{i}}}Bl{}{{Cf{}{{Bn{e}}}}}Bl}{{{j{Db}}c}{{j{Db}}}{{Cf{BfDf}}}}{{{j{h}}C`}{{Ad{Dh}}}}{{{j{c}}g{D`{e}}}bl{}{{C`{Ane}{{Bn{e}}}}}}9{{{j{c}}g}{{j{i}}}Bl{}{{Cf{}{{Bn{e}}}}}Bl}{{{j{c}}Dj}Dll}{{{j{c}}{D`{Ab}}Dn}{{Ad{Dl}}}l}{{{j{c}}}{{Ad{Dl}}}l}`{{{j{Db}}}E`}{{{j{c}}}{{j{c}}}Bl}{{{j{c}}}DdBl}{{{j{h}}{j{c}}{j{e}}g}{{j{h}}}BlBl{{Cf{{An{Cd}}AnAn}{{Bn{{An{Ab}}}}}}}}{{{j{c}}{j{c}}}eEb{}}{{AlAl}Al}{{AlAl}b}210{AlCn}0321{ce{}{}}00000``{{{j{c}}Dd}{{Ad{Ab}}}l}{{{j{c}}e}{{j{g}}}l{{C`{}{{Bn{}}}}Cb}l}1{{{j{c}}Ab}{{Ad{Ab}}}Ed}{{{j{c}}e}{{Ad{Ab}}}EdA`}{{{j{c}}}EfBl}{{{j{c}}}{{Ej{Eh}}}Bl}0=={AlAl}{{ce}b{}{}}0``1{{{j{c}}}{{Ad{D`}}}l}{{AlAl}d}{{{j{c}}}{{`{{El{}{{B`{D`}}}}}}}l}{{}{{j{c}}}Bl}{{}Al}{Enc{}}00000{{AlAl}Al}{{{j{c}}e}gl{nA`}{}}{{{j{c}}{j{c}}}el{}}01{{{j{c}}Ab}{{Ad{Ab}}}Af}{Enb}{{{j{c}}}bBl}11{{{j{c}}}DdBl}8;{{{j{c}}e}F`lA`}{{{j{c}}{j{c}}}F`l}10{{{j{c}}{j{c}}}bl}{{Alc}b{{Fb{}{{B`{Al}}}}}}{{{j{c}}}{{Ad{{j{c}}}}}l}{{{j{c}}F`}{{Ad{{j{c}}}}}l}{{{j{c}}}{{An{En}}}Bl}`{{{j{Aj}}Fd}Ff}{{{j{c}}Fd}Ffl}{{AlFd}Ff}0000{{{j{c}}e}bBl{{Cf{An}}}}{{{j{h}}c}b{{Cf{{An{Cd}}}}}}{c{{j{e}}}Fh{{Bl{}{{Fj{c}}}}}}{cc{}}00{Cn{{An{Al}}}}{CnAl}00{{Bfc}{{j{e}}}Fb{{Bl{}{{Fj{}}}}Bl}}{{{j{c}}e}{{j{c}}}{{Bl{}{{Fj{}}}}Bl}Fb}{{Bf{Ej{Eh}}}{{j{c}}}Bl}{{Bf{Ej{Eh}}Dd}{{j{c}}}Bl}{g{{Fl{ic}}}{}{}{{Fn{c}{{B`{e}}}}}{}}0{c{{j{e}}}{{Fb{}{{B`{{Gb{Ej{An{G`}}}}}}}}}l}{c{{j{e}}}{{Fb{}{{B`{An}}}}}l}{c{{j{Aj}}}{{Fb{}{{B`{{An{d}}}}}}}}{cAl{{Fb{}{{B`{Al}}}}}}{{Bfc}{{j{e}}}{{Bd{}{{B`{An}}}}}l}23{{Bfc}{{j{e}}}{{Bd{}{{B`{}}}}}l}`{Bf{{An{Al}}}}{c{{j{e}}}{{Gd{}{{B`{An}}}}}l}{{BfD`}{{j{c}}}l}{{Bf{D`{An}}}{{j{c}}}l}{c{{j{e}}}{{Gf{}{{B`{An}}}}}l}{{BfEj}{{j{c}}}l}{{BfEj{An{G`}}}{{j{c}}}l}{{BfEn}{{j{c}}}l}0{{{j{c}}En}{{j{c}}}Bl}{{BfEnDd}Dh}{{{j{c}}En}AnBl}{{{j{c}}En}{{Ad{Gh}}}l}{{{j{c}}En}Ghl}{{{j{h}}En}{{An{Ab}}}}{{{j{c}}}AlBl}{{{j{h}}}Ab}{{{j{{Gj{c}}}}En}{{An{Gl}}}Gn}0{AlH`}7{{{j{c}}dd}{{Ad{Ah}}}l}{{{j{c}}EndEn}AhEb}{{{j{c}}e}F`lA`}{{{j{c}}{j{c}}}F`l}10{{{j{c}}}dBl}{{{j{c}}{An{En}}}{{j{c}}}Bl}{{}En}00{{EnHb{An{Hd}}}{{j{c}}}l}{{{j{h}}}Dd}{{AlAl}b}{{AlAl}Al}{{AlAl}d}{ce{}{}}00{{{j{Hf}}{An{En}}En}{{Ad{Hh}}}}{{{j{Hf}}{An{En}}En}Hh}{{{j{c}}}el{}}{Alc{}}{{{j{c}}}{{`{HjHl{Hn{}{{B`{}}}}ElGf}}}l}{{{j{c}}}AbBl}{Ald}?0{{{j{c}}}F`I`}000{{{j{c}}}F`Bl}0{{{j{c}}}dBl}{{{j{c}}}H`Bl}{{{j{c}}}{{`{{Ib{}{{B`{An}}}}}}}Bl}{Al{{Id{Al}}}}{Al{{If{Al}}}}{{{j{c}}}{{Il{{Ih{Eh}}{Ij{Eh}{{Bn{{An{G`}}}}}}}}}Bl}`{{{j{c}}}AnBl}{{{j{c}}}{{An{En}}}Bl}{{{j{c}}}{{In{c}}}Bl}{{{j{c}}{j{c}}}el{}}0{{{j{c}}e}gl{}{}}0{{c{j{e}}}g{}l{}}0{{{j{c}}}EnBl}{{{j{c}}e}{{j{c}}}l{nJ`}}00{{{j{c}}En}{{j{c}}}Bl}{{{j{c}}e}F`lA`}{{{j{c}}{j{c}}}F`l}10{{{j{Aj}}}{{An{d}}}}{{{j{c}}}Anl}{{{j{c}}}Abl}{{{j{Aj}}}{{An{Jb}}}}{{{j{c}}}{{An{Jb}}}l}{{{j{c}}}{{An{Jb}}}Eb}{{{j{c}}}AbEb}654{{{j{c}}}{{An{Gb}}}l}{{Bf{D`{Cn}}EnEn}{{j{Aj}}}}{{BfD`}{{j{c}}}l}{{{j{c}}{j{c}}}el{}}{{{j{c}}e}gl{nA`}{}}01{{{j{c}}Ab}{{Ad{Ab}}}Af}{{{j{c}}}{{Ad{En}}}l}{{{j{c}}}BfBl}{{Bfc}{{j{Jd}}}{{Jh{{D`{Jf}}}}}}{{Bfc}{{j{Jd}}}{{Jh{{D`{{An{Jf}}}}}}}}{{Bfc}{{j{Jj}}}{{Jh{{D`{{An{Jl}}}}}}}}{{Bf{Jn{Jf}}}{{j{Jd}}}}{{Bfc}{{j{K`}}}{{Jh{{D`{Kb}}}}}}{{Bfc}{{j{Ch}}}{{Jh{{D`{Hb}}}}}}{{Bfc}{{j{Db}}}{{Jh{{D`{{An{Df}}}}}}}}{{Bfc}{{j{Aj}}}{{Jh{{D`{d}}}}}}{{Bfc}{{j{K`}}}{{Jh{{D`{{An{Kb}}}}}}}}{{Bfc}{{j{Cl}}}{{Jh{{D`{{Ej{Cn}}}}}}}}{{Bfc}{{j{Kd}}}{{Jh{{D`{{An{Hd}}}}}}}}{{Bfc}{{j{Kd}}}{{Jh{{D`{Hd}}}}}}{{Bfc}{{j{Aj}}}{{Jh{{D`{{An{d}}}}}}}}{{Bf{Jn{Kb}}}{{j{K`}}}}{{Bfc}{{j{Cj}}}{{Jh{{D`{Jb}}}}}}{{Bfc}{{j{Cl}}}{{Jh{{D`{{An{{Ej{Cn}}}}}}}}}}{{Bf{Jn{Jl}}}{{j{Jj}}}}{{Bfc}{{j{Ch}}}{{Jh{{D`{{An{Hb}}}}}}}}{{Bfc}{{j{Db}}}{{Jh{{D`{Df}}}}}}{{Bfc}{{j{Cj}}}{{Jh{{D`{{An{Jb}}}}}}}}{{Bfc}{{j{Jj}}}{{Jh{{D`{Jl}}}}}}{{Bf{Jn{Hd}}}{{j{Kd}}}}{Bf{{j{{Gj{c}}}}}Gn}{{{j{c}}EnEn}{{j{c}}}l}{{Bf{Ej{c}}}{{j{{Gj{c}}}}}Gn}{{Bf{Ej{c}}G`}{{j{{Gj{c}}}}}Gn}{{BfEj}{{j{c}}}l}{{{j{c}}}{{j{c}}}I`}{AlAl}{{{j{c}}{j{c}}}F`l}{{{j{c}}e}F`lA`}10{{{j{c}}}EnBl}``{{{j{h}}}{{`{{Kf{}{{B`{{An{Ab}}}}}}}}}}{{{j{Db}}}{{`{{Kf{}{{B`{{An{Bf}}}}}}}}}}{{{j{Db}}}{{`{{Kh{}{{B`{{An{Bf}}}}}}}}}}{{{j{h}}}{{`{{Kh{}{{B`{{An{Ab}}}}}}}}}}{{{j{c}}}Abl}{{{j{c}}}bBl}{{{j{c}}JbKj}{{Ad{{An{Jb}}}}}Eb}{{{j{c}}JbKj}{{Ad{Ab}}}Eb}{{BfEnJb}{{Ad{{j{Aj}}}}}}{{BfEnJbJb}{{Ad{{j{c}}}}}l}{{BfEn}{{j{c}}}l}{{BfEnJbJb}{{j{c}}}l}{{{j{c}}}{{j{c}}}Bl}{{{j{c}}}KlBl}{{{j{c}}e}gl{nA`}{}}{{{j{c}}{j{c}}}el{}}10{{{j{c}}Ab}{{Ad{Ab}}}Af}{{AlAl}b}{{{j{c}}Bf}bBl}{{{j{c}}}{{j{c}}}l}{{{j{c}}C`Kn}{{Ad{Ab}}}l}{{{j{c}}Ene}{{Ad{{j{c}}}}}I`{{Cf{{j{c}}}{{Bn{An}}}}}}{{{j{c}}Jbdd{An{Hd}}}{{Ad{{j{c}}}}}Bl}{{{j{c}}Endd{An{Hd}}}{{Ad{{j{c}}}}}Bl}{{{j{c}}eAn}{{Ad{{j{c}}}}}l{{Fb{}{{B`{L`}}}}}}{{{j{c}}eg}{{Ad{{j{c}}}}}l{{Fb{}{{B`{L`}}}}}{{C`{An}{{Bn{An}}}}}}{{{j{c}}F`An}{{Ad{{j{c}}}}}l}{{AlAld}b}{{{j{h}}}b}{{{j{h}}Dd}b}{{{j{c}}L`}bBl}{{{j{c}}H`}bBl}{{AlH`}b}{{{j{c}}Jf}{{j{c}}}l}{{{j{c}}JfAn}{{j{c}}}l}{{{j{c}}}bBl}{{{j{c}}JfEn}{{j{c}}}Bl}{{{j{c}}d}{{j{c}}}l}{{{j{c}}Dj}{{j{c}}}l}{{{j{c}}Cn}{{An{Jb}}}l}{{{j{c}}Cn}AbEb}{{{j{c}}{j{c}}}el{}}{{{j{c}}e}gl{nA`}{}}10{{AlAl}Al}{{AlAl}b}{{{j{c}}Ab}{{Ad{Ab}}}Af}{{{j{Aj}}}{{An{L`}}}}{{{j{c}}}Anl}{{{j{c}}}Abl}5{{{j{c}}{An{En}}}{{j{c}}}Bl}{{{j{c}}e}{{Ad{{j{c}}}}}Bl{{Jh{{D`{L`}}}}Lb}}{{{j{c}}Dl}{{Ad{{j{c}}}}}Bl}{{{j{c}}Dl}{{j{c}}}{{Bl{}{{Ld{Bj}}}}Bl}}{{{j{c}}e}{{j{c}}}{{Bl{}{{Ld{Bj}}}}Bl}{{Jh{{D`{L`}}}}Lb}}`{{{j{c}}dLf}{{Ej{{Ej{Lh}}}}}Bl}{{{j{c}}}{{j{c}}}I`}{{{j{Db}}En}{{Ad{Ab}}}}{{{j{h}}Dd}b}{{{j{h}}}{{Ad{Lj}}}}{{{j{c}}}{{Ad{Ll}}}l}{ce{}{}}0{{{j{Cl}}}Ln}{{{j{c}}}{{Ej{An}}}l}{{{j{c}}}{{M`{Ej{Ej{An}}}}}l}{{AlAl}b}{{{j{c}}{j{c}}}el{}}0{{{j{c}}e}gl{}{}}0{{c{j{e}}}g{}l{}}0{{{j{h}}c}{{Ad{{j{h}}}}}{{Cf{Cd}{{Bn{{Ad{Ab}}}}}}}}{{{j{h}}e}{{Ad{{j{g}}}}}{}{{Cf{{An{Cd}}}{{Bn{{Ad{{An{c}}}}}}}}Cb}Bl}{{{j{c}}i}{{Fl{{j{k}}g}}}Bl{}{}{{Cf{An}{{Bn{{Fl{{An{e}}g}}}}}}Cb}Bl}{{{j{c}}i}{{Fl{{j{k}}g}}}Bl{}{}{{Cf{}{{Bn{{Fl{eg}}}}}}}Bl}{c{{Fl{e}}}{}{}}00{{Bfg}{{Fl{{j{i}}e}}}Fh{}{{Fb{}{{B`{{Fl{ce}}}}}}}{{Bl{}{{Fj{c}}}}Bl}}111{{{j{h}}{j{c}}e}{{Ad{{j{h}}}}}Bl{{Cf{{An{Cd}}An}{{Bn{{Ad{{An{Ab}}}}}}}}}}{cMb{}}00{{AlAl}Al}{{{j{c}}}{{Ad{{j{c}}}}}l}{{{j{c}}Ab}{{Ad{{j{c}}}}}Bl}{{{j{c}}}bBl}{{{j{c}}En}{}Bl}{{{j{c}}Cn}{{An{Jb}}}l}{{{j{c}}Cn}AbEb}{ce{}{}}00{{Bfc}{{j{e}}}Fh{{Bl{}{{Fj{c}}}}Bl}}{{{j{c}}{Ej{Eh}}}{{j{c}}}Bl}{{{j{c}}Bf}{{j{c}}}Bl}{{{D`{Md}}e}c{}{{Mf{Dl}{{Bn{c}}}}}}{{{j{c}}H`}{{j{c}}}Bl}{{{j{c}}}el{}}0{{{j{c}}{j{c}}}el{}}0{{{j{c}}e}gl{}{}}01100{{c{j{e}}}g{}l{}}0221100221133221100221100{{{j{h}}{j{c}}e}{{j{h}}}Bl{{Cf{{An{Cd}}An}{{Bn{{An{Ab}}}}}}}}{{{j{c}}F`{j{c}}}{{Ad{{j{c}}}}}Bl}````{{{Mn{}{{Mh{c}}{Mj{e}}{Ml{g}}}}{Mn{}{{Mh{c}}{Mj{e}}{Ml{g}}}}}e{}{}{}}{{{Mn{}{{Mh{c}}{Mj{e}}{Ml{g}}}}c}e{}{}{}}{{c{Mn{}{{Mh{c}}{Mj{e}}{Ml{g}}}}}e{}{}{}}{{{Mn{}{{Mh{c}}{Mj{e}}{Ml{g}}}}{Mn{}{{Mh{c}}{Mj{e}}{Ml{g}}}}}g{}{}{}}{{{Mn{}{{Mh{c}}{Mj{e}}{Ml{g}}}}c}g{}{}{}}{{c{Mn{}{{Mh{c}}{Mj{e}}{Ml{g}}}}}g{}{}{}}{{{Mn{}{{Mh{c}}{Mj{e}}{Ml{g}}}}}e{}{}{}}65654654650654654````````{{cf}b{}}000{N`b}{{{Nb{c}}}b{NdLb}}{Nfb}{Nhb}{{{Nj{c}}}bl}{{{Nb{c}}{An{e}}}b{NdLb}{{Jh{c}}}}{{N`{An{c}}}b{}}{{N`c}b{}}{{{Nb{c}}e}b{NdLb}{{Jh{c}}}}{{Nfd}b}5{ce{}{}}0000000{{{Nb{c}}}{{Nb{c}}}{NdLb}}{NfNf}{NhNh}{{{Nj{c}}}{{Nj{c}}}{lNl}}{{ce}b{}{}}000{Enc{}}0000000{Enb}000{N`{{j{c}}}Bl}{{{Nb{Bf}}}Ln}{{{Nb{{D`{Cn}}}}}E`}{NnLn}{O`E`}{NfF`}`{{{Nj{c}}}{{j{c}}}l}{cc{}}000{{Bfe}Ob{}{{Bd{}{{B`{{An{c}}}}}}}}{{Bfe}Ob{}{{Bd{}{{B`{c}}}}}}{{Bf{D`{c}}}Ob{}}{{Bf{D`{{An{c}}}}}Ob{}}{{}En}000{ce{}{}}000`{{BfEn}{{Nb{c}}}{NdLb}}{{BfEn}Nf}{{BfEn}Nh}{{BfEn}{{Nj{c}}}l}{N`b}{Nfb}{Nhb}{{{Nj{c}}}bl}8888{c{{Fl{e}}}{}{}}0000000{cMb{}}000::::````````{{OdFh}b}{Odb}{Ofb}{{Ohc}b{{Bd{}{{B`{{An{d}}}}}}Gf}}{{{Oj{c}}e}bl{{Bd{}{{B`{An}}}}Gf}}{{{Oj{c}}e}bl{{Bd{}{{B`{}}}}Gf}}{Olb}54{Onb}{A@`b}{Ohb}{A@bb}{{{Oj{c}}}bl}{{Od{An{Fh}}}b}{{Od{An{Ab}}}{{Ad{b}}}}{{Ol{An{Ab}}}{{Ad{b}}}}{{{Oj{c}}{An{D`}}}bl}{{OlAb}{{Ad{b}}}}{{OdAb}{{Ad{b}}}}{{OfAb}{{Ad{b}}}}{{OnAb}{{Ad{b}}}}{{A@`Ab}{{Ad{b}}}}{{OhAb}{{Ad{b}}}}{{A@bAb}{{Ad{b}}}}{{{Oj{c}}Ab}{{Ad{b}}}l}{{{Oj{c}}D`}bl}{{Onc}b{{Bd{}{{B`{{An{Bf}}}}}}Gf}}{{A@`c}b{{Bd{}{{B`{{An{{D`{Cn}}}}}}}}Gf}}{{Onc}b{{Bd{}{{B`{Bf}}}}}}{{A@`c}b{{Bd{}{{B`{{D`{Cn}}}}}}}}{ce{}{}}0000000000000`{{}Od}{{}Of}{Enc{}}0000000000000{Enb}000000{Ond}{A@`d}{Ohd}{{{Oj{c}}}dl}{Old}{OnKl}{A@`Kl}{OhKl}{{{Oj{c}}}Kll}{OlKl}{OdDh}{OfDh}{A@bDh}{OlDh}{cc{}}000000{{DdEnEnBf}{{Ad{{A@d{Ol}}}}}}{{}En}000000{OnEh}{A@`Eh}{OhEh}{{{Oj{c}}}Ehl}{OlEh}{ce{}{}}000000{{BfEn{An{Dd}}}Od}{{BfEn{An{Dd}}}Of}{{BfEnEn}On}{{BfEnEn}A@`}{{BfEnEn}Oh}{{BfEn}A@b}{{BfEnEnDd}{{Oj{c}}}l}{{BfEnEnDdDd}{{Oj{c}}}l}{c{{Fl{e}}}{}{}}0000000000000{cMb{}}000000:::::::``{{A@fBf}{{j{c}}}Bl}{{A@h{j{c}}}{{j{c}}}Bl}10{{A@hBfDd}{{j{c}}}Bl}0{{A@fBf}{{Fl{{j{c}}e}}}Bl{}}{{A@h{j{c}}}{{Fl{{j{c}}e}}}Bl{}}10{{A@hBfDd}{{Fl{{j{c}}e}}}Bl{}}0`{A@jA@j}``{{A@lBfDd}e{}{{A@n{c}}}}{{eBfDd}A@n{}{{Gd{}{{B`{c}}}}}}```{ce{}{}}000{Enc{}}000{Enb}0{cc{}}0{{}En}04444{AA`AAb}{AAb{{An{c}}}{}}{{{AAd{c}}}{{An{e}}}Bd{}}1{{{AAd{c}}}{{An{e}}}El{}}`{AAb{{Gb{En{An{En}}}}}}{{{AAd{c}}}{{Gb{En{An{En}}}}}Bd}{c{{Fl{e}}}{}{}}000{cMb{}}0<<``````{{cf}b{}}{e{{AAf{c}}}Gn{{Fb{}{{B`{c}}}}}}{e{{AAf{c}}}Gn{{Fb{}{{B`{{An{c}}}}}}}}{{AAhe}g{}{{Fb{}{{B`{c}}}}}{}}0{GlAAj}{{{AAf{c}}}AAjGn}0{ce{}{}}0`{{{AAf{c}}}{{AAf{c}}}{GnNl}}{{ce}b{}{}}{{{AAf{c}}}AAhGn}{Enc{}}0{Enb}{{GlGl}d}0{{{AAf{c}}Fd}Ff{GnAAl}}{cc{}}{{EnAAh}{{AAf{c}}}Gn}{{{AAf{c}}En}{{An{c}}}Gn}{{}AAh}{{G`{AAf{c}}{AAf{c}}}{{AAf{c}}}Gn}{{AAhG`cc}{{AAf{e}}}{}Gn}{{G`{AAf{c}}e}{{AAf{c}}}Gn{}}{{G`c{AAf{e}}}{{AAf{e}}}{}Gn}{{}En}{ce{}{}}{{{AAf{c}}}eGn{}}{{{AAf{c}}En}dGn}{{cEn}d{}}1{{{AAf{c}}}{{ABb{c{AAn{c}}AB`}}}Gn}{{{AAf{c}}}{{ABb{egAB`}}}Gn{}{}}{{{AAf{c}}}EnGn}0`{{{AAf{c}}{An{G`}}}bGn}{{{AAf{c}}EnEn}bGn}{{cEnEn}e{}{}}01{Gl{{A@d{Gl}}}}{{{AAf{c}}}{{A@d{Fh}}}Gn};{g{{Fl{{AAf{c}}e}}}Gn{}{{Fb{}{{B`{{Fl{{An{c}}e}}}}}}}}{g{{Fl{{AAf{c}}e}}}Gn{}{{Fb{}{{B`{{Fl{ce}}}}}}}}{{AAhg}{{Fl{ie}}}{}{}{{Fb{}{{B`{{Fl{ce}}}}}}}{}}0{c{{Fl{e}}}{}{}}0{cMb{}}{GlBf}{{}Bf}{{{AAf{c}}}{{An{G`}}}Gn}{{{AAf{c}}En}cGn}{{{AAf{c}}En}eGn{}}1{{{AAf{c}}}{{ABd{{Ej{c}}}}}Gn}{{{AAf{c}}}{{AAn{c}}}Gn}{{{AAf{c}}}eGn{}}{ce{}{}}{{{AAf{c}}{An{G`}}}{{A@d{Fh}}}Gn}{{{AAf{c}}{An{G`}}}{{AAf{c}}}Gn}0`{{{ABf{c}}}bGn}0{{{ABf{c}}{An{c}}}bGn}{{{ABf{c}}c}bGn}{{{ABf{c}}AAj}bGn}{{{ABf{c}}AAj}{{Ad{b}}}Gn}77{{}{{ABf{c}}}Gn}{Enc{}}0{Enb}{{{ABf{c}}}{{ABh{c}}}Gn}{cc{}}{{}En}={{BfEn}{{ABf{c}}}Gn}{{{ABf{c}}}AbGn}{c{{Fl{e}}}{}{}}0{cMb{}}{ce{}{}}````{ABjb}{{ABj{An{AAj}}}b}{{ABjAAj}b}33`<<;{{ABlFd}Ff}:{{BfEn}{{A@d{ABj}}}}{{}ABn}{{}AAh}<7{{}d}`{{AC`ABnAAh}b}{ABjAb}<<;:``````````````````````````````````````````{{cf}b{}}{{{ACd{}{{ACb{c}}}}g}{{ACd{}{{ACb{c}}}}}{}{}{{C`{{An{e}}}{{Bn{{An{c}}}}}}Cb}}{{ACfC`}ACf}{{ACfC`}{{j{c}}}Bl}{{{ACd{}{{ACb{c}}}}i{D`{g}}}b{}{}{}{{C`{{An{e}}g}{{Bn{g}}}}}}{{{ACd{}{{ACb{c}}}}g}{{ACd{}{{ACb{c}}}}}{}{}{{C`{e}{{Bn{c}}}}Cb}}{{AChDj}Dl}{{ACh{D`{Ab}}Dn}{{Ad{Dl}}}}{ACj{{Ad{Dl}}}}`{ce{}{}}0{{AClDd}{{Ad{Ab}}}}0{ACnACn}{{ce}b{}{}}{Enc{}}0{Enb}{{ACnACn}d}{{{AD`{}{{B`{c}}}}e}c{}{}}0{ADb{{Ad{Ab}}}}{ADb{{Ad{{Gb{Ab{ADd{Jf}}}}}}}}`{{ADfc}{{Ad{ADf}}}{}}{{ADhF`}{{Ad{{j{c}}}}}Bl}`{{ACnFd}Ff}{cc{}}`{{BfcEn}ADj{}}{{BfEn}ADl}`{{ADnEn}{{Ad{Gh}}}}{{ADnEn}Gh}::{{ACnc}bAE`}{{}En}{ce{}{}}{AEb{{Ad{F`}}}}{AEd{{Ad{F`}}}}??{AEf{{An{c}}}{}}{AEf{{An{Jb}}}}{AEh{{An{c}}}{}}2{AEf{{An{{Gb{cc}}}}}{}}{ACj{{Ad{En}}}}{{AEjEnEn}{{j{c}}}Bl}{{{AD`{}{{B`{c}}}}e}c{}{}}0{ADb{{Ad{{ADd{Jf}}}}}}{{AEhJbKj}{{Ad{{An{c}}}}}{}}{AElAEl}{{AEnC`Kn}{{Ad{Ab}}}}{{AF`c{An{e}}}{{Ad{AF`}}}{{Fb{}{{B`{L`}}}}}{}}{{AF`ci}{{Ad{AF`}}}{{Fb{}{{B`{L`}}}}}{}{}{{C`{{An{e}}}{{Bn{{An{g}}}}}}}}`{{AF`F`{An{c}}}{{Ad{AF`}}}{}}{{AFbJf}{{j{c}}}Bl}{{AFdJfc}{{j{e}}}{}Bl}`{{AChd}{{j{c}}}Bl}{{AChDj}{{j{c}}}Bl}{{AFfCn}{{An{Jb}}}}{AEf{{An{c}}}{}}{{AFhc}{{Ad{AFh}}}Lb}{{AFjc}AFjLb}{AFl{{Ej{{D`{Cn}}}}}}{ce{}{}}{c{{Fl{e}}}{}{}}0{cMb{}}{ACj{{Ad{ACj}}}}83`{{AFnF`{j{c}}}{{Ad{{j{c}}}}}Bl}``````{{{j{c}}{j{e}}gik}{{j{m}}}BlBl{{C`{}{{Bn{}}}}}{{C`{}{{Bn{}}}}}{{C`{}{{Bn{}}}}}Bl}0{{{j{c}}{j{e}}i}{{j{k}}}BlBlFh{{Cf{}{{Bn{g}}}}}{{Bl{}{{Fj{g}}}}}}{{{j{c}}{j{e}}g}{{j{i}}}BlBl{{AG`{AnAn}}}Bl}{{{j{c}}{j{e}}g}bBlBl{{Cf{AnAn}}}}{{{j{c}}{j{e}}i}{{j{k}}}BlBl{}{{Cf{}{{Bn{g}}}}}Bl}{{{j{c}}{j{e}}iBf}{{j{k}}}BlBl{FhAGb}{{Cf{}{{Bn{g}}}}}{{Bl{}{{Fj{g}}}}}}{{{j{c}}{j{e}}iBf}{{j{k}}}BlBlFh{{Cf{}{{Bn{g}}}}}{{Bl{}{{Fj{g}}}}}}5{{{j{c}}{j{e}}g}{{Ad{Ab}}}BlBl{{Cf{}{{Bn{{A@d{Fh}}}}}}}}{{{j{c}}{j{e}}gdd}{{j{c}}}BlBl{{Cf{}{{Bn{{A@d{Fh}}}}}}}}64{{{j{c}}{j{e}}k}{{Fl{{j{m}}i}}}BlBl{}{}{{Cf{AnAn}{{Bn{{Fl{{An{g}}i}}}}}}}Bl}{{{j{c}}{j{e}}{j{g}}i}{{j{k}}}BlBlBl{{AGd{AnAnAn}}}Bl}{{{j{c}}{j{e}}k}{{Fl{{j{m}}i}}}BlBlFhAGf{{Cf{}{{Bn{{Fl{gi}}}}}}}{{Bl{}{{Fj{g}}}}}}2{{{j{c}}{j{e}}kBf}{{Fl{{j{m}}i}}}BlBlFhAGf{{Cf{}{{Bn{{Fl{gi}}}}}}}{{Bl{}{{Fj{g}}}}}}{{{j{c}}{j{e}}idd}{{Fl{{j{c}}g}}}BlBlAGf{{Cf{}{{Bn{{Fl{{A@d{Fh}}g}}}}}}}}{{{j{c}}{j{e}}{j{g}}m}{{Fl{{j{o}}k}}}BlBlBl{}{}{{Cf{AnAnAn}{{Bn{{Fl{{An{i}}k}}}}}}}Bl}{{{j{c}}i}{{Fl{{j{k}}g}}}Bl{}{}{{Cf{An}{{Bn{{Fl{{An{e}}g}}}}}}}Bl}{{{j{c}}i}{{Fl{{j{k}}g}}}Bl{}{}{{Cf{}{{Bn{{Fl{eg}}}}}}}Bl}{{{j{c}}i}{{Fl{{j{k}}g}}}Bl{FhAGb}AGf{{Cf{}{{Bn{{Fl{eg}}}}}}}{{Bl{}{{Fj{e}}}}}}{{{j{c}}e}{{j{g}}}Bl{{AGh{An}}}Bl}{{{j{c}}e}{{j{g}}}BlAGhBl}{{{j{c}}g}{{j{i}}}BlFh{{Cf{}{{Bn{e}}}}}{{Bl{}{{Fj{e}}}}}}0{{{j{c}}g}{{j{i}}}Bl{FhAGb}{{Cf{}{{Bn{e}}}}}{{Bl{}{{Fj{e}}}}}}0{{{j{c}}}Enl}0{{H`H`}H`}{{DlL`}{{Ad{b}}}}{{{AGj{L`}}L`}{{Ad{b}}}}````{{cf}b{}}{{AGlcd}L`AGb}{ce{}{}}0{AGlAGl}{{ce}b{}{}}{{}AGl}{Enc{}}0{Enb}{{AGlAGl}d}{{ce}d{}{}}00{{AGlFd}Ff}{cc{}}{{AGlc}bAE`}{{}En};{{{j{c}}}{{Gb{En{j{c}}}}}Bl}<{c{{Fl{e}}}{}{}}0{cMb{}}>`{{En{Ej{d}}}b}```{{AGnEnEn}AGn}0{{En{D`{Ab}}Dn}{{Ad{{AH`{Dl}}}}}}{{{D`{Ab}}{D`{d}}d}{{Ad{AHb}}}}{{Bf{D`{Ab}}{D`{d}}d}{{Ad{AHd}}}}{{Bf{D`{Ab}}}{{Ad{AHd}}}}{Ab{{Ad{Eh}}}}{{{D`{Ab}}}{{Ad{AHb}}}}{{{D`{Ab}}}{{Ad{AHd}}}}0```{{cf}b{}}0{ce{}{}}000{DjDj}{DnDn}{{ce}b{}{}}0{{}Dj}{{}Dn}{Enc{}}000``{Enb}0{{DjDj}d}{{DnDn}d}{{ce}d{}{}}00000{{DjFd}Ff}{{DnFd}Ff}{DnDj}{cc{}}{DjDn}1{{Djc}bAE`}{{Dnc}bAE`}{{}En}0{ce{}{}}0````?>``{{AGnEnEn}AGn}011{c{{Fl{e}}}{}{}}000{cMb{}}033{{Djd}Dj}{{Dnd}Dn}101010{{Dnc}Dn{{Fb{}{{B`{d}}}}}}{DjDj}{DnDn}`{AHfJf}00{{}d};;0```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{cf}b{}}0000000000000000000000000000{Dhd}{{HhHh}c{}}{{F`F`}c{}}0{{LnBf}c{}}{{LnLn}c{}}0{{E`{D`{Cn}}}c{}}{{E`E`}c{}}0{{GhGh}Gh}{{{j{c}}Ab}{{Fl{AbAHh}}}{}}000000{{LnAb}{{Ad{Ab}}}}{{E`Ab}{{Ad{Ab}}}}{{F`Ab}{{Ad{Ab}}}}{{DhAh}Ab}{{F`Ah}Ab}{{LnAh}Ab}{{E`Ah}Ab}{{{ABh{c}}Ah}AbGn}{F`d}{F`{{An{d}}}}{Dh{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}{{DhBf}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}32{{Dhc}Dh{{C`{{An{Ab}}}{{Bn{{An{Ab}}}}}}Cb}}{{F`c}F`{{C`{{An{d}}}{{Bn{{An{d}}}}}}Cb}}{{Lnc}Ln{{C`{{An{Bf}}}{{Bn{{An{{AHj{Bf}}}}}}}}Cb}}{{E`c}E`{{C`{{An{{D`{Cn}}}}}{{Bn{{An{{AHj{{D`{Cn}}}}}}}}}}Cb}}{{{ABh{c}}e}{{ABh{c}}}Gn{{C`{{An{c}}}{{Bn{{An{c}}}}}}Cb}}{{Dhc}Dh{{Cf{Cd}{{Bn{Ab}}}}}}{{Dhe}{{j{g}}}{}{{Cf{{An{Cd}}}{{Bn{{An{c}}}}}}Cb}Bl}{{AHlc}Ab{{C`{Ab}{{Bn{Ab}}}}}}{{AHnc}Ab{{C`{Ab}{{Bn{Ab}}}}}}{{F`C`}F`}{{LnC`}Ln}{{E`C`}E`}{{F`C`}{{j{c}}}Bl}{{LnC`}{{j{c}}}Bl}{{E`C`}{{j{c}}}Bl}{{Lnc}Ln{{Cf{Bf}{{Bn{Bf}}}}}}{{E`c}E`{{Cf{{D`{Cn}}}{{Bn{{D`{Cn}}}}}}}}{{Lnc}Ln{{Cf{BfDf}}}}{{DhC`}{{Ad{Dh}}}}{{Dhe{D`{c}}}b{}{{C`{{An{Ab}}c}{{Bn{c}}}}}}{{F`e{D`{c}}}b{}{{C`{{An{d}}c}{{Bn{c}}}}}}{{Lne{D`{c}}}b{}{{C`{{An{Bf}}c}{{Bn{c}}}}}}{{E`e{D`{c}}}b{}{{C`{{An{{D`{Cn}}}}c}{{Bn{c}}}}}}{{{ABh{c}}g{D`{e}}}bGn{}{{C`{{An{c}}e}{{Bn{e}}}}}}{{Dhc}Dh{{C`{Ab}{{Bn{Ab}}}}Cb}}{{F`c}F`{{C`{d}{{Bn{d}}}}Cb}}{{Lnc}Ln{{C`{Bf}{{Bn{{AHj{Bf}}}}}}Cb}}{{E`c}E`{{C`{{D`{Cn}}}{{Bn{{AHj{{D`{Cn}}}}}}}}Cb}}{{{ABh{c}}e}{{ABh{c}}}Gn{{C`{c}{{Bn{c}}}}Cb}}{{F`Dj}Dl}{{LnDj}Dl}{{E`Dj}Dl}{{AHdDj}Dl}{{F`{D`{Ab}}Dn}{{Ad{Dl}}}}{{Ln{D`{Ab}}Dn}{{Ad{Dl}}}}{{E`{D`{Ab}}Dn}{{Ad{Dl}}}}{{AHd{D`{Ab}}Dn}{{Ad{Dl}}}}{F`{{Ad{Dl}}}}{Ln{{Ad{Dl}}}}{E`{{Ad{Dl}}}}{{{ABh{c}}}{{Ad{Dl}}}Gn}{eAI`{}{{Fb{}{{B`{c}}}}}}0{{AAhe}AIb{}{{Fb{}{{B`{c}}}}}}0{LnE`}{GhGh}{DdDd}{KlDd}{AIdDd}{{{AGb{}{{AIf{c}}{AIh{e}}{AIj{g}}}}}{{An{{D`{c}}}}}Nl{AIl{AIn{c}}}{{El{}{{B`{c}}}}GfHjHl}}{{Dh{j{c}}{j{e}}g}DhBlBl{{Cf{{An{Cd}}AnAn}{{Bn{{An{Ab}}}}}}}}{{F`F`}c{}}00000{ce{}{}}0000000000000000000000000000000000000000000000000000000000000000000{Dd{{A@d{Dd}}}}{{AJ`AJ`c}{{Ad{AJ`}}}AJb}{{AJdDd}{{Ad{Ab}}}}{{HhDd}{{Ad{Ab}}}}{{DhDd}{{Ad{Ab}}}}{{F`Dd}{{Ad{Ab}}}}{{LnDd}{{Ad{Ab}}}}{{E`Dd}{{Ad{Ab}}}}{{AHdDd}{{Ad{Ab}}}}{{GhDd}Gh}54321`{{{j{c}}Ab}{{Fl{AbAHh}}}{}}0000{{AHlAb}{{Ad{Ab}}}}{{AHnAb}{{Ad{Ab}}}}{{{AJf{ce}}}{{AJf{ce}}}BlBl}{AJhAJh}{GhGh}{AJjAJj}{DdDd}{KlKl}{AJlAJl}{AJnAJn}{AK`AK`}{K`K`}{KdKd}{AKbAKb}{AKdAKd}{JjJj}{JdJd}{ChCh}{CjCj}{AKfAKf}{AKhAKh}{DbDb}{ClCl}{AKjAKj}{AjAj}{AKlAKl}{AKnAKn}{AL`AL`}{ALbALb}{AAhAAh}{ALdALd}{{ce}b{}{}}0000000000000000000000000000{{KlDd}b}{ALfe{}{{AI`{c}}AGb}}0{{ALfAAh}e{}{{AIb{c}}AGb}}0{Ddd}00{ALhDd}{KlDd}{{}Gh}{{}AJj}{{}Dd}{{}AAh}{Enc{}}{{{AJf{ce}}}gBlBl{}}11111111111111111111111111111111101111111111111111111111111111111111{{HhHh}c{}}{{{j{c}}Ab}{{Fl{AbAHh}}}{}}000000{Enb}000000000000000000000000000000000{AJdDd}{HhDd}{GhDd}`{{GhGh}d}{{AJjAJj}d}{{DdAAh}d}{{DdDd}d}{{KlKl}d}{{AJlAJl}d}{{AAhAAh}d}{{ALdALd}d}{{GhGhd}d}{{DhDh}F`}{{F`F`}F`}{{LnLn}F`}{{LnBf}F`}{{E`E`}F`}{{E`{D`{Cn}}}F`}543201{{ce}d{}{}}00000000000000000000{Dh{{Ad{{Gb{Ab{ADd{Jf}}}}}}}}{Ln{{Ad{{Gb{Ab{ADd{Jf}}}}}}}}{{{AJf{ce}}}KlBlBl}{{F`d}{{Ad{F`}}}}{{E`{D`{Cn}}}{{Ad{E`}}}}{{DhF`}{{Ad{Dh}}}}{{F`F`}{{Ad{{j{Aj}}}}}}{{LnF`}{{Ad{{j{Db}}}}}}{{E`F`}{{Ad{{j{Cl}}}}}}{{AHdF`}{{Ad{AHd}}}}{{{ABh{c}}F`}{{Ad{{j{{Gj{c}}}}}}}Gn}{{AJbALjALj}{{Ad{ALj}}}}{{DhFd}Ff}{{LnFd}Ff}{{E`Fd}Ff}{{{ABh{c}}Fd}FfGn}{{AJhFd}Ff}{{GhFd}Ff}0{{AJjFd}Ff}{{DdFd}Ff}0{{KlFd}Ff}{{AJlFd}Ff}0{{AAhFd}{{Fl{bALl}}}}{{ALdFd}{{Fl{bALl}}}}{{Dhc}b{{Cf{{An{Cd}}}}}}{cc{}}0000000{cGhALn}{{{An{c}}}Gh{{AM`{Gh}}}}2{AAhDd}3{GhDd}0{AMbKl}5{GhKl}{ALdAJl}777777777777777777777{AMdAAh}8{AMfAAh}9{{AAhd}Dd}{cDh{{Fb{}{{B`{{An{{A@d{Fh}}}}}}}}}}{cDh{{Fb{}{{B`{{An{Ab}}}}}}}}{eDh{{AMh{Ab}}}{{Fb{}{{B`{c}}}}}}{cF`{{Fb{}{{B`{d}}}}}}{eLn{{Jh{Bf}}}{{Fb{}{{B`{{An{c}}}}}}}}{eLn{{`{Bf}}}{{Fb{}{{B`{c}}}}}}{eE`{{`{{D`{Cn}}}}}{{Fb{}{{B`{c}}}}}}{eE`{{Jh{{D`{Cn}}}}}{{Fb{}{{B`{{An{c}}}}}}}}{e{{ABh{c}}}Gn{{Fb{}{{B`{{An{c}}}}}}}}{{Bfc}{{j{Aj}}}{{Bd{}{{B`{{An{d}}}}}}}}{{Bfe}Ln{{Jh{Bf}}}{{Bd{}{{B`{{An{c}}}}}}}}{{Bfe}E`{{Jh{{D`{Cn}}}}}{{Bd{}{{B`{{An{c}}}}}}}}{{Bfe}{{ABh{c}}}Gn{{Bd{}{{B`{{An{c}}}}}}}};:97856{eAHd{{`{{D`{Cn}}}}}{{Fb{}{{B`{c}}}}}}{eAHd{{Jh{{D`{Cn}}}}}{{Fb{}{{B`{{An{c}}}}}}}}6{{Bfc}{{j{Aj}}}{{Bd{}{{B`{d}}}}}}{{Bfe}Ln{{Jh{Bf}}}{{Bd{}{{B`{c}}}}}}{{Bfe}E`{{Jh{{D`{Cn}}}}}{{Bd{}{{B`{c}}}}}}{{Bfe}{{ABh{c}}}Gn{{Bd{}{{B`{c}}}}}}{{AMjDd}Kl}{cDh{{Gd{}{{B`{{An{Ab}}}}}}}}{cF`{{Gd{}{{B`{d}}}}}}{cF`{{Gd{}{{B`{{An{d}}}}}}}}{eLn{{`{Bf}}HjHlAMl}{{Gd{}{{B`{c}}}}}}{eLn{{Jh{Bf}}HjHl}{{Gd{}{{B`{{An{c}}}}}}}}{eE`{{`{{D`{Cn}}}}HjHlAMl}{{Gd{}{{B`{c}}}}}}{eE`{{Jh{{D`{Cn}}}}HjHl}{{Gd{}{{B`{{An{c}}}}}}}}{{cBfDd}Dh{{Gd{}{{B`{{An{Ab}}}}}}}}{{Bf{D`{d}}}F`}{{Bf{D`{c}}}Ln{{Jh{Bf}}}}{{Bf{D`{c}}}E`{{Jh{{D`{Cn}}}}}}{{Bf{D`{c}}}{{ABh{c}}}Gn}{{Bf{D`{{An{d}}}}}F`}{{Bf{D`{{An{c}}}}}Ln{{Jh{Bf}}}}{{Bf{D`{{An{c}}}}}E`{{Jh{{D`{Cn}}}}}}{{Bf{D`{{An{c}}}}}{{ABh{c}}}Gn}{cF`{{Gf{}{{B`{{An{d}}}}}}}}{{{Ej{c}}AAh}{{AGb{}{{AIf{c}}{AIh{e}}{AIj{g}}}}}Nl{AIl{AIn{c}}}{{El{}{{B`{c}}}}GfHjHl}}{{{Ej{c}}AAh}{{AGb{}{{AIf{e}}{AIh{c}}{AIj{g}}}}}{AIl{AIn{e}}}Nl{{El{}{{B`{e}}}}GfHjHl}}{{EncAAh}{{AGb{}{{AIf{c}}{AIh{e}}{AIj{g}}}}}Nl{AIl{AIn{c}}}{{El{}{{B`{c}}}}GfHjHl}}{{BfAbEn}Dh}{{BfdEn}F`}{{BfBfEn}Ln}{{Bf{D`{Cn}}En}E`}{{Bf{D`{Cn}}En}AHd}{{BfcEn}{{ABh{c}}}Gn}{{EnAAh}{{AGb{}{{AIf{c}}{AIh{e}}{AIj{g}}}}}Nl{AIl{AIn{c}}}{{El{}{{B`{c}}}}GfHjHl}}{{BfEn}Dh}{{BfEn}F`}{{BfEn}Ln}{{BfEn}E`}{{BfEn}AHd}{{BfEn}{{ABh{c}}}Gn}{{BfEnDd}Dh}{{{AGb{}{{AIf{c}}{AIh{e}}{AIj{g}}}}En}{{An{c}}}Nl{AIl{AIn{c}}}{{El{}{{B`{c}}}}GfHjHl}}{{HhEn}{{Ad{Gh}}}}{{AJdEn}{{Ad{Gh}}}}0{{DhEn}{{Ad{Gh}}}}{{F`En}{{Ad{Gh}}}}{{LnEn}{{Ad{Gh}}}}{{E`En}{{Ad{Gh}}}}{{AHdEn}{{Ad{Gh}}}}{{{ABh{c}}En}{{Ad{Gh}}}Gn}{{HhEn}Gh}{{AJdEn}Gh}0{{DhEn}Gh}{{F`En}Gh}{{LnEn}Gh}{{E`En}Gh}{{AHdEn}Gh}{{{ABh{c}}En}GhGn}{{DhEn}{{An{Ab}}}}{{}Dd}00000000000000000000000{DhAb}{{{ABh{c}}En}{{An{Gl}}}Gn}0{Gh{{An{Bf}}}}{{AMnEn}Gh}{{{AGb{}{{AIf{c}}{AIh{e}}{AIj{g}}}}En}{{An{c}}}Nl{AIl{AIn{c}}}{{El{}{{B`{c}}}}GfHjHl}}{DhEn}{LnEn}{AHdEn}{{Dhdd}{{Ad{Ah}}}}{{F`dd}{{Ad{Ah}}}}{{Lndd}{{Ad{Ah}}}}{{E`dd}{{Ad{Ah}}}}{{AHddd}{{Ad{Ah}}}}{{{ABh{c}}dd}{{Ad{Ah}}}Gn}{{DhDh}F`}{{F`F`}F`}{{LnLn}F`}{{LnBf}F`}{{E`{D`{Cn}}}F`}{{E`E`}F`}543210{{Ghc}bAE`}{{AJjc}bAE`}{{Ddc}bAE`}{{AJlc}bAE`}{{AAhc}bAE`}{{ALdc}bAE`}{{Ghcd}bAE`}{{}En}000000000000000000000000000000000{DhDd}{Dd{{An{Dd}}}}{AAh{{An{AAh}}}}{ce{}{}}000000000000000000000000000000000{{AN`{An{En}}En}{{Ad{Hh}}}}{{AN`{An{En}}En}Hh}{Dhc{}}{F`c{}}{Lnc{}}{E`c{}}{AHdc{}}{{{ABh{c}}}eGn{}}{HhAb}{AN`Ab}{Gh{{Ad{Gh}}}}{Ddd}00{Ghd}111010111110101011110111101{AAhd}{{{AGb{}{{AIf{c}}{AIh{e}}{AIj{g}}}}}{{ABb{cgAB`}}}Nl{AIl{AIn{c}}}{{El{}{{B`{c}}}}GfHjHl}}{{{AGb{}{{AIf{c}}{AIh{e}}{AIj{g}}}}}{{An{c}}}Nl{AIl{AIn{c}}}{{El{}{{B`{c}}}}GfHjHl}}{{DhDh}F`}{{F`F`}F`}{{LnLn}F`}{{LnBf}F`}{{E`E`}F`}{{E`{D`{Cn}}}F`}543210{{AJ`AJ`}{{Ad{{Gb{AJ`AJ`}}}}}}{{DhDh}{{Ad{{Gb{DhDh}}}}}}{{DdDd}{{Ad{d}}}}{F`{{An{d}}}}{F`Ab}{LnAb}{E`Ab}{F`{{An{Jb}}}}{AHl{{An{Hb}}}}{AHn{{An{Jb}}}}{AHlAb}{AHnAb}{{DdDd}{{Ad{Dd}}}}9876{{Bf{D`{Cn}}EnEn}F`}{{HhHh}c{}}{{{j{c}}Ab}{{Fl{AbAHh}}}{}}000000{Ln{{Ad{En}}}}{E`{{Ad{En}}}}{KlAMj}`{{}c{}}00{{Bfc}Ln{{Jh{{D`{{An{{AHj{Bf}}}}}}}}}}{{Bfc}Ln{{Jh{{D`{{AHj{Bf}}}}}}}}{{Bfc}Ln{{Jh{{D`{{An{Bf}}}}}}}}{{Bfc}Ln{{Jh{{D`{Bf}}}}}}{{Bfc}E`{{Jh{{D`{{D`{Cn}}}}}}}}{{Bfc}E`{{Jh{{D`{{An{{D`{Cn}}}}}}}}}}{{Bfc}E`{{Jh{{D`{{An{{AHj{{D`{Cn}}}}}}}}}}}}{{Bfc}E`{{Jh{{D`{{AHj{{D`{Cn}}}}}}}}}}{{Bf{D`{c}}}{{ABh{c}}}Gn}{{Bfe}{{ABh{c}}}Gn{{Jh{{D`{{An{c}}}}}}}}{{BfDd}Kl}{Bf{{ABh{c}}}Gn}{{DhEnEn}Dh}{{F`EnEn}F`}{{LnEnEn}Ln}{{E`EnEn}E`}{{AHdEnEn}AHd}{{{ABh{c}}EnEn}{{ABh{c}}}Gn}{{Bf{Ej{c}}}{{ABh{c}}}Gn}{{Bf{Ej{c}}G`}{{ABh{c}}}Gn}{F`c{}}0{{DhDh}F`}{{F`F`}F`}{{LnLn}F`}{{LnBf}F`}{{E`{D`{Cn}}}F`}{{E`E`}F`}542310{Dh{{Ad{{ADd{Jf}}}}}}{Ln{{Ad{{ADd{Jf}}}}}}{Dh{{`{{Kf{}{{B`{{An{Ab}}}}}}}}}}{Ln{{`{{Kf{}{{B`{{An{Bf}}}}}}}}}}{Dh{{`{{Kh{}{{B`{{An{Ab}}}}}}}}}}{Ln{{`{{Kh{}{{B`{{An{Bf}}}}}}}}}}{{GhGh}{{An{ANb}}}}{{AJlAJl}{{An{ANb}}}}{Hh{{An{En}}}}{{{AJf{AKlHf}}}{{An{En}}}}{{AHlJbKj}{{Ad{{An{Hb}}}}}}{{AHnJbKj}{{Ad{{An{Jb}}}}}}{{AHlJbKj}{{Ad{Ab}}}}{{AHnJbKj}{{Ad{Ab}}}}{{BfEnJb}{{Ad{F`}}}}{{{j{c}}Ab}{{Fl{AbAHh}}}{}}000000{DhDh}{F`F`}{LnLn}{E`E`}{AHdAHd}{{{ABh{c}}}{{ABh{c}}}Gn}`{HhEn}{{{AJf{AKlHf}}}En}{{F`c{An{d}}}{{Ad{F`}}}{{Fb{}{{B`{L`}}}}}}{{Lnc{An{Bf}}}{{Ad{Ln}}}{{Fb{}{{B`{L`}}}}}}{{E`c{An{{D`{Cn}}}}}{{Ad{E`}}}{{Fb{}{{B`{L`}}}}}}{{F`ce}{{Ad{F`}}}{{Fb{}{{B`{L`}}}}}{{C`{{An{d}}}{{Bn{{An{d}}}}}}}}{{Lnce}{{Ad{Ln}}}{{Fb{}{{B`{L`}}}}}{{C`{{An{Bf}}}{{Bn{{An{Df}}}}}}}}{{E`ce}{{Ad{E`}}}{{Fb{}{{B`{L`}}}}}{{C`{{An{{D`{Cn}}}}}{{Bn{{An{{Ej{Cn}}}}}}}}}}{{F`F`{An{d}}}{{Ad{F`}}}}{{LnF`{An{Bf}}}{{Ad{Ln}}}}{{E`F`{An{{D`{Cn}}}}}{{Ad{E`}}}}{Dhb}{{DhDd}b}{{KlAMj}b}{{DhJf}Dh}{{F`Jf}F`}{{LnJf}Ln}{{E`Jf}E`}{{AHdJf}AHd}{{{ABh{c}}Jf}{{ABh{c}}}Gn}{{DhJf{An{Ab}}}Dh}{{F`Jf{An{d}}}F`}{{LnJf{An{Bf}}}Ln}{{E`Jf{An{{D`{Cn}}}}}E`}{{AHdJf{An{{D`{Cn}}}}}AHd}{{{ABh{c}}Jf{An{{Gj{c}}}}}{{j{{Gj{c}}}}}Gn}{{F`d}F`}{{Lnd}Ln}{{E`d}{{j{Cl}}}}{{AHdd}AHd}{{F`Dj}{{j{Aj}}}}{{LnDj}{{j{Db}}}}{{E`Dj}{{j{Cl}}}}{{AHdDj}AHd}{{AHlCn}Ab}{{AHnCn}Ab}{{GhDd}{{An{Gh}}}}`{{HhHh}c{}}{{{j{c}}Ab}{{Fl{AbAHh}}}{}}000000{F`{{An{L`}}}}{F`Ab}{LnAb}{E`Ab}{{Lnc}Ln{{Jh{{D`{L`}}}}Lb}}{{LnDl}Ln}{{E`Dl}E`}{{E`c}E`{{Jh{{D`{L`}}}}Lb}}{{Ddd}AAh}{{Kld}AMb}{AJlALd}{{DdBfd}AMb}{AJlBf}{{LnEn}{{Ad{Ab}}}}{{DhDd}b}{AAhAAh}{Dh{{Ad{Lj}}}}{ce{}{}}0000000000000000000000000000{DdDd}{AAhANd}{cDf{}}00{E`Ln}{{Dhc}{{Ad{Dh}}}{{Cf{Cd}{{Bn{{Ad{Ab}}}}}}}}{{Dhe}{{Ad{{j{g}}}}}{}{{Cf{{An{Cd}}}{{Bn{{Ad{{An{c}}}}}}}}Cb}Bl}{g{{Fl{AI`e}}}{}{}{{Fb{}{{B`{{Fl{ce}}}}}}}}0{{AAhg}{{Fl{AIbe}}}{}{}{{Fb{}{{B`{{Fl{ce}}}}}}}}0{ALf{{Fl{eg}}}{}{{AI`{c}}AGb}{}}0{{ALfAAh}{{Fl{eg}}}{}{{AIb{c}}AGb}{}}0{Gh{{Ad{c}}}J`}{c{{Fl{e}}}{}{}}0000000000000000000000000000000000000000000000000000000000000000000{{GhDd}{{Ad{Gh}}}}{{Ddd}{{Ad{AAh}}}}{{Dh{j{c}}e}{{Ad{Dh}}}Bl{{Cf{{An{Cd}}An}{{Bn{{Ad{{An{Ab}}}}}}}}}}{cMb{}}000000000000000000000000000000000{AAhAAh}{F`{{Ad{F`}}}}{Ln{{Ad{Ln}}}}{E`{{Ad{E`}}}}{{{ABh{c}}}{{Ad{{j{{Gj{c}}}}}}}Gn}{{{AGb{}{{AIf{c}}{AIh{e}}{AIj{g}}}}En}cNl{AIl{AIn{c}}}{{El{}{{B`{c}}}}GfHjHl}}0{{DdGh}d}{{{AGb{}{{AIf{c}}{AIh{e}}{AIj{g}}}}}gNl{AIl{AIn{c}}}{{El{}{{B`{c}}}}GfHjHl}}{{AHlCn}Ab}{{AHnCn}Ab}{{F`Lf{Ej{Hd}}}{{Ad{b}}}}{{ANfLf{Ej{Hd}}}{{Ad{b}}}}{{ANhLf{Ej{Hd}}}{{Ad{b}}}}{{ALjLf{Ej{Hd}}}{{Ad{b}}}}{{ANjLf{Ej{Hd}}}{{Ad{b}}}}{{ANlLf{Ej{Hd}}}{{Ad{b}}}}{{ANnLf{Ej{Hd}}}{{Ad{b}}}}{{AO`Lf{Ej{Hd}}}{{Ad{b}}}}{{AObLf{Ej{Hd}}}{{Ad{b}}}}{{AN`Lf{Ej{Hd}}}{{Ad{b}}}}{{AHlLf{Ej{Hd}}}{{Ad{b}}}}{{AHnLf{Ej{Hd}}}{{Ad{b}}}}{{LnLf{Ej{Hd}}}{{Ad{b}}}}{{E`Lf{Ej{Hd}}}{{Ad{b}}}}{{AHdLf{Ej{Hd}}}{{Ad{b}}}}{{{ABh{c}}Lf{Ej{Hd}}}{{Ad{b}}}Gn}{{F`Lf{D`{Hd}}}{{Ad{b}}}}{{ANfLf{D`{Hd}}}{{Ad{b}}}}{{ANhLf{D`{Hd}}}{{Ad{b}}}}{{ALjLf{D`{Hd}}}{{Ad{b}}}}{{ANjLf{D`{Hd}}}{{Ad{b}}}}{{ANlLf{D`{Hd}}}{{Ad{b}}}}{{ANnLf{D`{Hd}}}{{Ad{b}}}}{{AO`Lf{D`{Hd}}}{{Ad{b}}}}{{AObLf{D`{Hd}}}{{Ad{b}}}}{{AN`Lf{D`{Hd}}}{{Ad{b}}}}{{AHlLf{D`{Hd}}}{{Ad{b}}}}{{AHnLf{D`{Hd}}}{{Ad{b}}}}{{LnLf{D`{Hd}}}{{Ad{b}}}}{{E`Lf{D`{Hd}}}{{Ad{b}}}}{{AHdLf{D`{Hd}}}{{Ad{b}}}}{{{ABh{c}}Lf{D`{Hd}}}{{Ad{b}}}Gn}{ce{}{}}000000000000000000000000000000000{Enc{}}0{En{{AOd{ce}}}{}{}}{{{D`{Md}}e}c{}{{Mf{Dl}{{Bn{c}}}}}}{{{AGb{}{{AIf{c}}{AIh{e}}{AIj{g}}}}{An{G`}}}{{AGb{}{{AIf{c}}{AIh{e}}{AIj{g}}}}}Nl{AIl{AIn{c}}}{{El{}{{B`{c}}}}GfHjHl}}{{Dh{j{c}}e}DhBl{{Cf{{An{Cd}}An}{{Bn{{An{Ab}}}}}}}}```````````{{cf}b{}}{AJ`d}{{AJ`d}AJ`}{{AOf{An{Bf}}}b}{{AJ`AJ`}{{Ad{b}}}}{AOfb}{{AOfBf}b}{{AJ`Dj}Dl}========{{AJ`AJ`c}{{Ad{AJ`}}}AJb}{{AJ`Dd}{{Ad{Ab}}}}{AJ`AJ`}{{ce}b{}{}}{{}AOh}{Enc{}}0000000{{AOfc}AJ`{{Fb{}{{B`{{An{Bf}}}}}}}}{Enb}000{AJ`Dd}{{AJ`Ln}c{}}{{AJ`Bf}c{}}{{AJ`AJ`}c{}}201{{AJbALjALj}{{Ad{ALj}}}}{AOfAJ`}{AOh{{ABd{AOj}}}}{cc{}}000{{ALj{ABd{AOj}}dAOl}AJ`}{{ALjAOl}AJ`}{{LnALhAOl}{{Ad{AJ`}}}}{{BfdEnAOl}AJ`}{{AJ`En}{{Ad{Gh}}}}{{AJ`En}Gh}{AJ`{{ABd{AOj}}}}=<;<=;{{}En}000{ce{}{}}0000{AJ`Ab}{AJ`d}0{AJ`AOn}{AJ`En}{{AJ`Bf}c{}}{{AJ`Ln}c{}}{{AJ`AJ`}c{}}021{{AJ`AJ`}{{Ad{{Gb{AJ`AJ`}}}}}}{{DhDh}{{Ad{{Gb{DhDh}}}}}}8{{AOh{ABd{AOj}}}{{Ad{b}}}}9{AJ`{{Ad{En}}}}{AJ`Bf}{{BfEnAOl}AOf}{{{ABd{AOj}}}AOh}{AOn{{An{c}}}{}}:988:9;{AJ`ALj}{{AOfBf}{{Gb{Kbd}}}}`{AOn{{Gb{En{An{En}}}}}}{{AJ`d}AJ`}{{AJ`Dj}AJ`}`{{AJ`dd}Eh}{{AJ`ALhB@`}AJ`}{AJ`{{Ad{AJ`}}}}{AJ`AJ`}{ce{}{}}{c{{Fl{e}}}{}{}}0000000{cMb{}}0004{AJ`d}{AJ`{{Ad{B@b}}}}4444``````{{cf}b{}}05555{ALhAOj}{AOlAOl}{AOjAOj}{{ce}b{}{}}0{{}AOl}{{}AOj}{Enc{}}000{Enb}0{{AOlAOl}d}{{AOjBf}{{An{Kb}}}}{{AOlFd}Ff}{{AOjFd}Ff}{cc{}}0{{AOjKb}Bf}{AOjALh}{{AOjKb}{{An{Bf}}}}{{}En}0{ce{}{}}0{AOjd}0{AOjEn}{{AOjAOj}d}33{c{{Fl{e}}}{}{}}000{cMb{}}055`55{{}B@d}{Enc{}}0{{}b}{Enb}{B@db}2?4;:665{{}d};```````330``````````````````````{B@fBf}<<<<`55{B@f}6644`{{B@hFd}{{Fl{bALl}}}}{{B@fFd}{{Fl{bALl}}}}0{cc{}}{cB@f{{AM`{{AHj{Bf}}}}}}1{{}{{Ij{BfB@h}{{Bn{b}}}}}}{{}En}0{ce{}{}}0{cAHhAGf}````{{{Ij{BfB@h}{{Bn{b}}}}}b}{cAHhB@j}{cDf{}}{c{{Fl{e}}}{}{}}000{cMb{}}066``````````````````{{cf}b{}}77{B@lB@l}{{ce}b{}{}}{Enc{}}0{Enb}{{FdB@nEn}Ff}{cc{}}{{}BA`}{{}B@l}{{}{{An{En}}}}{{}Df}{{}d}{{}En}{ce{}{}}{{{An{BA`}}}b}{B@lb}{{{An{En}}}b}2{{{An{d}}}b}4{c{{Fl{e}}}{}{}}0{cMb{}}6````````````{{cf}b{}}00{{B@b{Ej{Ab}}BAb}{{Ad{b}}}}{{B@bC`}{{Ej{Ab}}}}0{{B@bF`}{{Ad{B@b}}}}{{B@b{D`{AMj}}}{{Ad{B@b}}}}0{{B@bJfEn}B@b}{{B@bAb}c{}}{{B@bB@b}c{}}1{B@bB@b}0{{B@bBfe}{{Ad{B@b}}}BAd{{Mf{Ab}{{Bn{c}}}}}}{{B@bEne}{{Ad{B@b}}}BAd{{Mf{Ab}{{Bn{c}}}}}}22{ce{}{}}0000000003{BAfBAf}{BAhBAh}5{{ce}b{}{}}00{{B@bBf}{{Ad{Ab}}}}{{B@be}{{Ad{{Ej{Ab}}}}}{{Jh{Bf}}}{{Fb{}{{B`{c}}}}}}{{}BAh}{{}B@b}{Enc{}}000000000=<={Enb}0000{{B@bBf}{{Ad{B@b}}}}6{{B@b{D`{c}}}B@b{{Jh{Bf}}}}{{B@b{BAj{Bf}}}B@b}{{B@b{An{{D`{c}}}}}{{Ad{B@b}}}{{Jh{Bf}}}}{B@b{{Ej{Dd}}}}7{{BAhBAh}d}{{B@bB@b}d}00{{ce}d{}{}}00{B@bEn}`{{B@be}{{Ad{B@b}}}{{Jh{Bf}}}{{Fb{}{{B`{c}}}}}}{{B@b{Ej{Ab}}}{{Ad{B@b}}}}{{B@bB@b}{{Ad{b}}}}{B@b{{Ej{Kl}}}}{{B@bACn}{{Ad{B@b}}}}{{B@bF`}{{Ad{B@b}}}}{{BAfFd}Ff}{{BAhFd}Ff}{{B@bFd}Ff}0{cc{}}000{BAlB@b}{BAbB@b}2{g{{Fl{ic}}}{}{}{{Fn{c}{{B`{e}}}}}{}}{cB@b{{Fb{}{{B`{Ab}}}}}}{{{D`{BAn}}}{{Ad{B@b}}}}{{{D`{BAn}}BAb}{{Ad{B@b}}}}{{cBAb}{{Ad{B@b}}}{{Bd{}{{B`{BAn}}}}}}{{B@bEn}{{An{{Ej{Gh}}}}}}{{B@bBf}{{An{En}}}}{B@b{{Ej{Bf}}}}{B@b{{Ej{AMj}}}}{B@b{{D`{Ab}}}}{B@b{{Ej{Ab}}}}{{B@bEn}{{Ad{BAn}}}}{{B@bEnBAn}{{Ad{b}}}}{{B@bEnBAn}b}{B@b{{An{{Ad{Dd}}}}}}`{{B@be}{{Ad{BB`}}}{{Jh{Bf}}}{{Fb{}{{B`{c}}}}}}0{{B@b{Ej{Ab}}dd}{{Ad{BB`}}}}{{BAhc}bAE`}{{B@b{An{Lf}}}{{Ad{ANj}}}}{{B@b{An{En}}}B@b}{B@bEn}{{B@b{D`{Ab}}}{{Ad{B@b}}}}0{{B@b{D`{Ab}}}B@b}{{B@b{BBb{En}}}c{}}{{B@b{BBd{En}}}c{}}{{B@bBBf}c{}}{{B@b{BBh{En}}}c{}}{{B@b{BBj{En}}}c{}}{{B@bEn}c{}}{{B@b{Jn{En}}}c{}}{{B@bBf}c{}}{{}En}0000{{B@bEnc}{{Ad{B@b}}}BAd}{ce{}{}}000000{B@b{{Ad{F`}}}}{B@bd}1{B@b{{Ih{Ab}}}}{{B@bd}BBl}{B@bBBn}{B@b{{Ad{{An{Ab}}}}}}{{B@bBAf}{{Ad{{An{Ab}}}}}}{{B@bce}{{Ad{B@b}}}{{BC`{AMj}}}{{BC`{AMj}}}}{{B@bBCb}{{Ad{B@b}}}}3{{B@bAb}c{}}{{B@bB@b}c{}}1{B@bEn}{{{Ej{c}}}{{Ad{B@b}}}BAd}{{{Ej{Ab}}}B@b}{{{Ej{Ab}}}{{Ad{B@b}}}}{BBl{{An{c}}}{}}{BBn{{An{c}}}{}}{B@bB@b}{{B@bcd}{{Ad{{Ej{B@b}}}}}{{BC`{Df}}}}0{{B@be}{{Ad{c}}}{}{{C`{B@b}{{Bn{{Ad{c}}}}}}}}0{{B@bgc}{{Ad{e}}}{}{}{{C`{B@bc}{{Bn{{Ad{e}}}}}}}}{B@b{{An{Ab}}}}{{B@bB@b}d}=<={{B@bBfBf}{{Ad{B@b}}}}{{B@bBfc}{{Ad{B@b}}}BAd}{{B@bEnc}{{Ad{B@b}}}BAd}18`{{B@bAbdd{An{Hd}}}{{Ad{B@b}}}}0{{B@bEndd{An{Hd}}}{{Ad{B@b}}}}{B@bBAb}{{B@bB@b}{{Ad{b}}}}{{B@be}{{Ad{B@b}}}{{Jh{Bf}}}{{Fb{}{{B`{c}}}}}}{{B@bEn}{{An{Ab}}}}{{B@bc}{{Ad{B@b}}}{{BCd{En}}}}2{{B@bc}{{Ad{{Ej{Ab}}}}}{{BC`{AMj}}}}{{B@beBCf}{{Ad{B@b}}}{{Jh{Bf}}}{{Fb{}{{B`{c}}}}}}{{B@beBAb}{{Ad{B@b}}}{{Jh{Bf}}}{{Fb{}{{B`{c}}}}}}{{B@b{D`{c}}}{{Ad{b}}}{{Jh{Bf}}}}{B@b{{Gb{EnEn}}}}{{B@bJf}B@b}{B@bd}{B@bb}{BBl{{Gb{En{An{En}}}}}}{BBn{{Gb{En{An{En}}}}}}{{B@bJfEn}B@b}0{{B@bcDn}{{Ad{B@b}}}{{BC`{AMj}}}}0{B@b{{`{{Bd{}{{B`{B@b}}}}}}}}{{B@bEnd}{{Ej{B@b}}}}{{B@bB@b}c{}}{{B@bAb}c{}}0{{B@bBAf}{{Ad{{An{Ab}}}}}}{{B@b{An{En}}}B@b}{{B@bDl}{{Ad{B@b}}}}{{B@bDl}B@b}{{B@bDld}B@b}{{B@bBCh}{{Ad{Lj}}}}{ce{}{}}00{cDf{}}{{B@bEncDn}{{Ad{B@b}}}{{BC`{AMj}}}}{{B@b{An{Bf}}{An{{M`{Df{Ej{Df}}}}}}}{{Ad{B@b}}}}{{B@bBfe}{{Ad{B@b}}}BAd{{Mf{Ab}{{Bn{{Ad{c}}}}}}}}{{B@bEne}{{Ad{B@b}}}BAd{{Mf{Ab}{{Bn{{Ad{c}}}}}}}}{c{{Fl{e}}}{}{}}0000{{{Gb{BCj{D`{AMb}}}}}{{Ad{B@b}}}}{BCl{{Ad{B@b}}}}{{cBAb}{{Ad{B@b}}}{{Bd{}{{B`{{Ad{BAn}}}}}}}}{{B@bBf}{{Ad{En}}}}44444{cMb{}}0000{{B@b{An{{D`{Df}}}}BAh{An{{Gb{JfEn}}}}}{{Ad{B@b}}}}{{B@bd{An{{D`{Df}}}}BAh{An{{Gb{JfEn}}}}}{{Ad{B@b}}}}1{{B@bB@b}{{Ad{B@b}}}}0>>>>>{B@bEn}{{B@bc}{{Ad{B@b}}}BAd}{{B@bcBAb}{{Ad{B@b}}}BAd}{{B@bAb}B@b}{{B@bBf{An{L`}}}{{Ad{B@b}}}}{{B@bBf{An{L`}}}B@b}`{{cf}b{}}{ce{}{}}0{BCbBCb}{{ce}b{}{}}{{}BCb}{Enc{}}0{Enb}{{BCbBCb}d}{{ce}d{}{}}00{{BCbFd}Ff}{cc{}}{{BCbc}bAE`}`{{}En};`;{c{{Fl{e}}}{}{}}0{cMb{}}```=````````````````````````````````>>>>{BB`{{Ad{B@b}}}}`{BCn{{D`{BD`}}}}{{BB`c}{{Ad{B@b}}}{{Cf{B@b}{{Bn{{Ad{B@b}}}}}}HjHl}}{AhDh}{ce{}{}}000000000000000{BCnBCn}{AhAh}{BB`BB`}{BDbBDb}{{ce}b{}{}}0009{{}BCn}{{}Ah}{Enc{}}000{BDdc{}}111111111111`{{BDfe}{}{}{{BDh{c}}}}{Enb}0000{BCnb}111{{BCnBCn}d}{{AhAh}d}{{ce}d{}{}}00000`{BDjL`}{BCn{{D`{L`}}}}{BB`{{Ad{B@b}}}}{BCn{{Ej{L`}}}}{{BCnFd}Ff}{{AhFd}Ff}{{BB`Fd}Ff}{{BDbFd}Ff}0{{BfBDb}Df}{cc{}}000{{{Ej{BDl}}}BCn}1{{{Ej{{Ej{BDl}}}}}BCn}{{{Ej{{Gb{{Ej{L`}}{Ej{BD`}}}}}}}BCn}{BCnAh}444{g{{Fl{ic}}}{}{}{{Fn{c}{{B`{e}}}}}{}}{cBCn{{Fb{}{{B`{BDl}}}}}}{cBCn{{Gd{}{{B`{BDl}}}}}}{{AhEn}BDj}{BB`Ah}0{AhDl}{{BDndd}{{Ad{Ah}}}}0{BB`{{Ad{B@b}}}}{AhBCn}{{}En}0000000{ce{}{}}000000020{BCnc{}}0100{BDjd}{Ahd}{BCnd}{BCn{{BEb{{BE`{{Ih{L`}}}}{Ih{BD`}}}}}}{AhBEd}{BB`{{Ej{Ab}}}}{{BB`{An{{Gb{JfEn}}}}}{{Ej{Ab}}}};{BDjEn}{AhEn}====={{{Ej{L`}}{Ej{BD`}}d}BCn}{{B@b{Ej{Ab}}Ah{An{{Ej{Df}}}}}BB`}{BEd{{An{c}}}{}}{{BEdEn}{{An{c}}}{}}{{BB`c}{{Ad{B@b}}}{{C`{B@b}{{Bn{{Ad{B@b}}}}}}HjHl}}{c{}{}}{AhBDf}{{BB`JbKj}{{Ad{B@b}}}}{{BB`e}BB`{{Jh{Bf}}}{{Fb{}{{B`{c}}}}}}{{AhJfEn}BDd}{BCnb}{Ahb}{{BB`Cn}{{Ad{B@b}}}}{BB`{{Ad{B@b}}}}{Ah{{Ej{L`}}}}0{BB`Ah}0{ce{}{}}000{cDf{}}{c{{Fl{e}}}{}{}}000000000000000{cMb{}}0000000{AhAh}{AhBCn}{AhBEf}:66666666`````{{BCnc}Ab{{C`{{Gb{L`BD`}}}{{Bn{An}}}}HjHl}}{{BCnc}Ab{{C`{{Gb{L`BD`}}}{{Bn{}}}}HjHl}}{{{D`{{BEh{L`}}}}c}Ab{{C`{{BEh{L`}}}{{Bn{An}}}}HjHl}}{{{D`{{BEh{L`}}}}c}Ab{{C`{{BEh{L`}}}{{Bn{}}}}HjHl}}{{{D`{c}}eBEj}{{AGj{c}}}{BElBEn}{{Bd{}{{B`{{Gb{L`L`}}}}}}Gf}}{{{D`{c}}G`eBEj}{{AGj{c}}}{BElBEn}{{Bd{}{{B`{{Gb{L`L`}}}}}}Gf}}{{{j{c}}L`L`}{{j{c}}}Bl}{{BEf{D`{Eh}}}d}{{BF`Ah}Ab}{{BFbBFb}BFb}0`{{BFdB@bAh}{{Ad{Ab}}}}{BFd{{Ad{Bf}}}}```````````````````````{{cf}b{}}00{{BFfGh}{{An{b}}}}{{BFhGh}b}0{ce{}{}}00000{BFfBFf}{BFhBFh}{BAnBAn}{{ce}b{}{}}00{{{D`{c}}}Dd{{AMh{Dd}}}}{{}BAn}{Enc{}}00000{Enb}00{{BAnBAn}d}{{ce}d{}{}}00{{BAnFd}Ff}{cc{}}{{{Gb{DdEn}}}BFf}1{{{Gb{DdEn}}}BFh}2{{eEn}BAb{{AM`{Dd}}}{{Bd{}{{B`{{Ej{{Gb{Dfc}}}}}}}}}}{{}En}00{ce{}{}}00{BFfAb}{BFhAb}{{DdEn}BFf}{{DdEn}BFh}{{{Ej{Gh}}}BAn}{{BFfEn}Ab}{{BFhEn}Ab}{{{D`{BAn}}{An{En}}}{{Ad{BAb}}}}0{{{D`{BAn}}{An{En}}}{{Ad{{Ej{Dd}}}}}}999{c{{Fl{e}}}{}{}}00000{cMb{}}00;;;{{{D`{B@b}}}{{Ad{B@b}}}}0`````{{HdHd}Hd}{{{D`{B@b}}{An{Lf}}}{{Ad{{Gb{{Ej{ANj}}Lf}}}}}}{{{BFj{Jf}}Lf{Ej{Hd}}}b}????{{}BFl}{Enc{}}000{Enb}0{BFlHd}{{BFnFd}Ff}{cc{}}0{{BFnc}bAE`}``{{}En}0{ce{}{}}0{{{BG`{BFnce}}L`HdB@bgi}b{}BGb{{C`{}{{Bn{c}}}}}{{Cf{c}}}}????>>{{BGdLf{Ej{Hd}}}{{Ad{b}}}}0{{BGdLf{D`{Hd}}}{{Ad{b}}}}033{{BFl{D`{Cn}}}b}{{BFlJl}b}{{BFlJf}b}{{BFlKb}b}{{BFlHd}b}`````````````````````````````````````````````````````````````````````````````````````````````````````````{{cf}b{}}0000000000{{{ABd{ce}}}e{}BGf}{{{ABd{c}}}BGh{BGjLb}}{{{ABd{ce}}}{}LbBGf}{{{ABd{c}}}JlBGl}{{{ABd{ce}}}cLbBGf}{{{ABd{{BGn{c}}e}}}{{ABd{ce}}}{}BGf}{{{ABd{{D`{{BGn{c}}}}e}}}{{ABd{{D`{c}}e}}}{}BGf}{ce{}{}}00030000000000000000000000{{AJ`AJ`c}{{Ad{AJ`}}}AJb}{{{ABd{c}}}{{An{AGf}}}{AGfLb}}`{{BH`Ab}{{Ad{Ab}}}}{{BH`c}{{Ad{Ab}}}A`}{MdMd}{BHbBHb}{{{ABd{ce}}}{{ABd{ce}}}Lb{BGfNl}}{KnKn}{BChBCh}{AMbAMb}{BAlBAl}{KjKj}{BHdBHd}{BHfBHf}{BHhBHh}{{ce}b{}{}}0000000000{{{ABd{ce}}{ABd{ce}}}ANb{BHjLb}BGf}{ALfe{}{{AI`{c}}AGb}}0{{ALfAAh}e{}{{AIb{c}}AGb}}0{{ce}ANb{}{}}{{AHhB@f}AHh}{AHhAHh}{{FhAAh}{{A@d{Fh}}}}{AMbAAh}```{{}b}{cbBGf}{{}{{ABd{c}}}BHl}{{}Kn}{{}BCh}{{}AMb}{{}BAl}{{}Kj}`{Enc{}}000{{{ABd{ce}}}cLbBGf}1111111111111111111111{{{ABd{c}}}Bf{AGfLb}}`{{{ABd{AAjc}}}{{Fl{{ABd{ec}}{ABd{AAjc}}}}}BGf{AAjHjHl}}{{{ABd{AAjc}}}{{ABd{ec}}}BGf{AAjHjHl}}{{{ABd{ce}}}{{BHn{ce}}}Lb{NlBGf}}{Enb}000{{{ABd{ce}}}bLbBGf}111111111{{MdMd}d}{{{ABd{BI`}}BI`}d}{{{ABd{Fh}}Fh}d}{{{ABd{ce}}{ABd{ce}}}d{BIbLb}BGf}{{BChBCh}d}{{AMbAMb}d}{{BAlBAl}d}{{KjKj}d}{{BHhBHh}d}{{ce}d{}{}}00000000000000000000{BHb{{Gb{KbKb}}}}`{{BAlc}BAl{{C`{EnAMb}{{Bn{d}}}}}}{{AJbALjALj}{{Ad{ALj}}}}{{{ABd{BId}}}{{Fl{bBIf}}}}{{AHhFd}{{Fl{bALl}}}}0{{MdFd}{{Fl{bALl}}}}{{BHbFd}{{Fl{bALl}}}}{{{ABd{ce}}Fd}{{Fl{bALl}}}LbBGf}{{{ABd{ce}}Fd}{{Fl{bALl}}}{AAlLb}BGf}{{{ABd{ce}}Fd}{{Fl{bALl}}}{B@jLb}BGf}{{BChFd}Ff}{{AMbFd}{{Fl{bALl}}}}{{BAlFd}{{Fl{bALl}}}}{{KjFd}{{Fl{bALl}}}}{{BHdFd}{{Fl{bALl}}}}{{BHfFd}{{Fl{bALl}}}}{{BHhFd}{{Fl{bALl}}}}`{BIhAHh}{BIjAHh}{cc{}}{BIlAHh}{BIfAHh}{KbMd}33{c{{ABd{c}}}{}}{Df{{ABd{Bf}}}}{Bf{{ABd{Bf}}}}{BInc{}}{{{BEh{c}}}{{ABd{{D`{c}}}}}{}}{BJ`{{ABd{BJ`}}}}{BJb{{ABd{BJ`}}}}{BJd{{ABd{BJf}}}}{{{A@d{ce}}}{{ABd{ce}}}LbBGf}<{{{ABd{Bf}}}{{ABd{{D`{Cn}}}}}}{BJh{{ABd{BJj}}}}{{{Ej{ce}}}{{ABd{{D`{c}}e}}}{}{BGfNl}}{BJj{{ABd{BJj}}}}{{{AHj{c}}}{{ABd{c}}}{BJlLb}}{BJf{{ABd{BJf}}}}{{{D`{c}}}{{ABd{{D`{c}}}}}Nl}{cc{}}000{{{Ej{AMb}}}BAl}11111{{c{An{G`}}}BJn{}}{{{BK`{Jf}}{BK`{Cn}}{An{G`}}}BKb}{{{BK`{Jf}}{BK`{Cn}}{An{G`}}}BKd}{g{{Fl{ic}}}{}{}{{Fn{c}{{B`{e}}}}}{}}{e{{ABd{{D`{c}}}}}{}{{Fb{}{{B`{c}}}}}}{{gEn}{{BKf{Jf}}}Jh{{Fb{}{{B`{{An{c}}}}}}}{{Fb{}{{B`{{An{e}}}}}}}}0{e{{BKf{Jf}}}{{Fb{}{{B`{{An{d}}}}}}}{{Fb{}{{B`{{An{c}}}}}}}}{{gAAh}{{BKf{Jf}}}BEn{{Fb{}{{B`{{An{c}}}}}}}{{Fb{}{{B`{{An{e}}}}}}}}2{e{{ABd{{D`{c}}}}}Hj{{Gd{}{{B`{c}}}}}}{{}{{ABd{c}}}Lb}{c{{ABd{ec}}}BGfLb}{Bf{{Fl{BKh}}}}{{Bfc}BKj{}}{{{ABd{ce}}{ABd{ce}}}d{BKlLb}BGf}{{{ABd{ce}}}{{An{c}}}LbBGf}{{{ABd{ce}}}cLbBGf}{BAl{{Ej{Bf}}}}{{EhEn}Gh}4{BKnd}{{{ABd{ce}}g}b{BL`Lb}BGfAE`}{{BChc}bAE`}{{AMbc}bAE`}{{Kjc}bAE`}{{BHhc}bAE`}{MdKb}{{}b}{cb{NlBGf}}{{BAlBf}{{An{En}}}}{{{D`{Kb}}}{{`{{Bd{}{{B`{En}}}}}}}}{{}En}000000000000`{BHbHd}`{ce{}{}}000000000000{{{ABd{ce}}}{{An{c}}}{}BGf}{{{ABd{ce}}}{}LbBGf}{{{ABd{BLb}}}Ab}{BAld}{BHbd}{Mdd}`{{{ABd{BId}}}d}{cd{}}1{{{ABd{ce}}{ABd{ce}}}d{BKlLb}BGf}{BAlEn}`1{{AJ`AJ`}{{Ad{{Gb{AJ`AJ`}}}}}}{{DhDh}{{Ad{{Gb{DhDh}}}}}}{{{ABd{ce}}}cNl{BGfNl}}{BLdAb}0{BLfAb}``11``{{{ABd{ce}}{ABd{ce}}}d{BIbLb}BGf}{{BLhEn}{{An{En}}}}{{Bfc}BLj{}}{c{{ABd{c}}}{}}{{cAAhd}AMb{{AM`{Df}}}}{e{{ABd{c}}}{}{{Mf{{BHn{c}}}{{Bn{c}}}}}}{{ce}{{ABd{ce}}}{}BGf}{{}{{ABd{{BGn{c}}}}}{}}{c{{ABd{{BGn{e}}c}}}BGf{}}{En{{ABd{{D`{{BGn{c}}}}}}}{}}{{Enc}{{ABd{{D`{{BGn{e}}}}c}}}BGf{}}3210`{{}Md}{{}BHb}{{{ABd{ce}}{ABd{ce}}}{{An{ANb}}}{BKlLb}BGf}{c{{BLl{{ABd{c}}}}}{}}{{ce}{{BLl{{ABd{ce}}}}}{}BGf}`````{BLdAb}0{{{ABd{c}}BLn}b{AGfLb}}{{{ABd{ce}}{ABd{ce}}}dLbBGf}{{BLfJbKj}{{Ad{Ab}}}}{{{ABd{BId}}{D`{Cn}}}{{Fl{EnBIf}}}}{{{ABd{BId}}BM`}{{Fl{bBIf}}}}{{{ABd{BId}}{Ej{Cn}}}{{Fl{EnBIf}}}}{{{ABd{BId}}Df}{{Fl{EnBIf}}}}{{{ABd{BId}}{D`{BMb}}}{{Fl{EnBIf}}}}`{{{ABd{BId}}BMd}{{Fl{HdBIf}}}}`{{AGnEnEn}AGn}0{{{ABd{c}}}{{An{AGf}}}{AGfLb}}{{BMfCn}Ab}{{KbKb}BHb}`{{{ABd{ce}}}EnLbBGf}>>{Md{{An{Kb}}}}{ce{}{}}0000000000{cDf{}}0{ALf{{Fl{eg}}}{}{{AI`{c}}AGb}{}}0{{ALfAAh}{{Fl{eg}}}{}{{AIb{c}}AGb}{}}0{c{{Fl{e}}}{}{}}000{{{ABd{{D`{c}}e}}}{{Fl{{ABd{{BEh{c}}e}}}}}{}BGf}1111111111111111111111{{BLhEn}{{Fl{EnAHh}}}}{c{{Fl{{ABd{c}}BMh}}}{}}{{ce}{{Fl{{ABd{ce}}BMh}}}{}BGf}{{}{{Fl{{ABd{{BGn{c}}}}BMh}}}{}}{c{{Fl{{ABd{{BGn{e}}c}}BMh}}}BGf{}}10{c{{Fl{{BLl{{ABd{c}}}}BMh}}}{}}{{ce}{{Fl{{BLl{{ABd{ce}}}}BMh}}}{}BGf}{{{ABd{ce}}}{{Fl{c{ABd{ce}}}}}{}BGf}{cMb{}}000000000000{{{ABd{ce}}}cNl{BGfNl}}`{{BMfCn}Ab}{ce{}{}}000000000000{{{ABd{ce}}}EnLbBGf}``{{AMb{BMj{DfDf}}}AMb}{{BAl{BMj{DfDf}}}BAl}{{{ABd{BId}}{D`{Cn}}}{{Fl{EnBIf}}}}{{{ABd{BId}}{D`{BMl}}}{{Fl{EnBIf}}}}```````{{c{An{G`}}}BJn{}}{{{BK`{Jf}}{BK`{Cn}}{An{G`}}}BKb}{{{BK`{Jf}}{BK`{Cn}}{An{G`}}}BKd}`88{Enc{}}0{Enb}{{BMn{An{AAh}}}{{Fl{{BKf{Jf}}AHh}}}}{cc{}}{{}En}={BMnd}{EnBMn}{BMn{{D`{Jf}}}}{{BMnFh}b}{BMnb}{{BMn{D`{{A@d{Fh}}}}}b}1{{BMn{An{Fh}}}b}{BMn{{BN`{Jf}}}}{c{{Fl{e}}}{}{}}0{cMb{}}{ce{}{}}`{{cf}b{}}{BNbAAj}{BNb{{A@d{Fh}}}}133{BNbBNb}{{ce}b{}{}}{BNbAAh}{{}BNb}{Enc{}}0{Enb}{{BNbEn}b}{{BNbFd}{{Fl{bALl}}}}{cc{}}{{}En}={BNbEn}{EnBNb}{BNbb}60{ce{}{}}{c{{Fl{e}}}{}{}}0{cMb{}}{BNb{{An{BNd}}}}3```````{{AGnEnEn}AGn}0`{{}b}0{{}d}``{{eEnEn}{{BNf{Jf}}}{{Jh{Bf}}}{{Bd{}{{B`{c}}}}}}{{eEnEn}{{BFj{Jf}}}{{Jh{{D`{Cn}}}}}{{Bd{}{{B`{c}}}}}}{Hdb}```{{cf}b{}}::{BAbBAb}{{ce}b{}{}}{{BAbBf}d}{{}BAb}{Enc{}}0{Enb}{{BAbBAb}d}{{ce}d{}{}}00{{BAbFd}Ff}{{{D`{Ab}}}BAb}{BAlBAb}{cc{}}{BNhBAb}{BAnBAb}13{g{{Fl{ic}}}{}{}{{Fn{c}{{B`{e}}}}}{}}{eBAb{{AM`{Kl}}}{{Fb{}{{B`{c}}}}}}{{BAbBf}{{An{Dd}}}}{{BAbEn}{{An{{Gb{AMjDd}}}}}}0{{BAbBf}{{An{Kl}}}}{{BAbBf}{{An{{Gb{EnAMjDd}}}}}}{BNj{{Ej{Bf}}}}{BAb{{Ej{Bf}}}}{{BAbc}bAE`}{{BNjBf}{{An{En}}}}{{BAbBf}{{An{En}}}}{{}En}{{BAbEnAMjDd}{{Ad{{An{Dd}}}}}}{ce{}{}}{BAbc{}}{BAbd}{BAb{{`{{Bd{}{{B`{{Gb{AMjDd}}}}}}}}}}{BAb{{`{{Hn{}{{B`{Dd}}}}}}}}0{BAb{{`{{Hn{}{{B`{Kl}}}}}}}}{BAb{{`{{Hn{}{{B`{AMj}}}}}}}}{BAbEn}{{BAbBAb}b}{{}BAb}{{BAbEnAMjDd}{{Ad{BAb}}}}{{BAbBf}{{An{Dd}}}}{{BAbBfAMj}{{An{AMj}}}}{{BAbBfDd}{{An{Dd}}}}{{BAbEnDd}{{An{Dd}}}}3{{BAbEn}{{An{{Gb{AMjDd}}}}}}{{BAbd}BAl}{ce{}{}}{{BAbBAb}{{Ad{d}}}}{c{{Fl{e}}}{}{}}{{BAbBf}{{Ad{Dd}}}}{{BAbEn}{{Ad{{Gb{AMjDd}}}}}}{{BAbBf}{{Ad{Kl}}}}{{BAbBf}{{Ad{{Gb{EnAMjDd}}}}}}3{{BNjBf}{{Ad{En}}}}5{cMb{}}8{EnBAb}{{BAbAMjDd}{{An{Dd}}}}``````````````{{cf}b{}}0{BLb{{Ad{Ab}}}}0{{Bf{Ej{Eh}}AAh}{{Ad{Ab}}}}{{Bf{Ej{Eh}}AAh{An{BNl}}}{{Ad{Ab}}}}{{AbAb}c{}}0{{Abc}e{nJ`}{}}0{{AbAb}{{Ad{Ab}}}}{{BLbDj}Dl}0{BLb{{Ad{Dl}}}}0`{{AbEn}Eh}{BLbAAj}00{AbDh}{BLb{{j{c}}}Bl}0{AbBLb}{BLb{{Ad{En}}}}0{Ab{{Ad{En}}}}{Ab{{Ad{E`}}}}{Ab{{Ad{AHd}}}}{{BLbAb}{{Ad{Ab}}}}00000{Ab{{Ad{F`}}}}{ce{}{}}00000{{BLbDd}{{Ad{Ab}}}}{{AbDd}{{Ad{Ab}}}}0{Ab{{Ad{AJ`}}}}55{{AbAb}{{Ad{Ab}}}}{{Abc}{{Ad{Ab}}}A`}{BLbEf}{BLb{{Ej{Eh}}}}0{Ab{{Ej{Eh}}}}{AbAb}{H`H`}1{BLb{{ABd{BLb}}}}{{ce}b{}{}}0{Abb}{Ab{{Ad{Hh}}}}{{}Ab}{Enc{}}0{Abc{}}1111{{AbAb}c{}}0{{Abc}e{nJ`}{}}0{{AbAb}{{Ad{Jb}}}}{Enb}00{BLbAb}0{BLbDd}0{{H`H`}d}{{AbAb}d}{{Abc}{{Ad{F`}}}ALn}{{AbBf}{{Ad{F`}}}}{{AbAb}{{Ad{F`}}}}0{{Abc}eALn{}}{{AbBf}c{}}55{{ce}d{}{}}00{AbEn}{Ab{{Ad{Ab}}}}{{AbAb}{{Ad{Ab}}}}{{AbGhEn}{{Ad{Ab}}}}{Ab{{Ad{AHl}}}}{Ab{{Ad{AHn}}}}{BLb{{AHj{Kl}}}}0{{AbACn}{{Ad{Ab}}}}{{BLbF`}{{Ad{Ab}}}}{{AbF`d}{{Ad{Ab}}}}{{H`Fd}Ff}{{AbFd}Ff}0{AbDf}{cc{}}00{{{j{c}}}AbBl}{{Bf{D`{Gh}}d}{{Ad{Ab}}}}{{Bf{D`{Gh}}Ddd}{{Ad{Ab}}}}{{BfEh}{{Ad{Ab}}}}{{Bf{Ej{Eh}}Dd}Ab}{g{{Fl{ic}}}{}{}{{Fn{c}{{B`{e}}}}}{}}{cAb{{Fb{}{{B`{Bf}}}}}}{cAb{{Fb{}{{B`{{An{Jf}}}}}}}}{cAb{{Fb{}{{B`{Jf}}}}}}{cAb{{Fb{}{{B`{{An{Hd}}}}}}}}{cAb{{Fb{}{{B`{d}}}}}}0{cAb{{Fb{}{{B`{{An{Hb}}}}}}}}{cAb{{Fb{}{{B`{Kb}}}}}}{cAb{{Fb{}{{B`{{An{Jb}}}}}}}}{cAb{{Fb{}{{B`{{An{d}}}}}}}}{cAb{{Fb{}{{B`{Hb}}}}}}3{cAb{{Fb{}{{B`{Jl}}}}}}{cAb{{Fb{}{{B`{Hd}}}}}}{cAb{{Fb{}{{B`{Jb}}}}}}{cAb{{Fb{}{{B`{Df}}}}}}2;3{cAb{{Fb{}{{B`{{An{Kb}}}}}}}}2{cAb{{Fb{}{{B`{{An{Jl}}}}}}}}6{{Bf{Ej{Hb}}}Ab}{{Bf{Ej{Jf}}}Ab}{{Bf{Ej{Jb}}}Ab}{{Bf{Ej{Jl}}}Ab}{{Bf{Ej{Hd}}}Ab}{{Bf{Ej{Kb}}}Ab}{{BfEnDd}Ab}{{AbEnEn}Ab}{{BLbEn}{{Ad{Gh}}}}{AbEn}{AbAl}{{BLbEn}{{An{Gl}}}}0{{BLbEnEn}{{An{Gl}}}}0{{BLbEn}Gh}0{{AbBf}{{Ad{F`}}}}{{Abc}{{Ad{F`}}}ALn}{{AbAb}{{Ad{F`}}}}{{AbBf}c{}}12{BLbd}{{H`c}bAE`}{{Ab{An{En}}}Ab}{Ab{{Ad{ANn}}}}{Ab{{Ad{AO`}}}}{Ab{{Ad{AOb}}}}{Ab{{Ad{ANl}}}}{Ab{{Ad{Dl}}}}`{Ab{{Ad{Dh}}}}{{}En}00{ce{}{}}00{AbB@b}1{BAdAb}{AbAb}=={Ab{{Ad{F`}}}}000{BLbF`}0{{}d}00{AbH`}{AbBNn}{BLbEn}{{BLbEn}Ab}0<{{Abc}{{Ad{F`}}}ALn}{{AbAb}{{Ad{F`}}}}{{AbBf}c{}}210{Ab{{Ad{{An{c}}}}}J`}{BLb{{Ad{Ab}}}}0{BLb{{An{Jb}}}}0=0011211{{Abc}e{nJ`}{}}{{AbAb}c{}}1099{BLb{{Ad{En}}}}0{BLbBf}{{Bfc}Ab{{Jh{{D`{{AHj{Bf}}}}}}}}{{Bfc}Ab{{Jh{{D`{{An{{AHj{{D`{Cn}}}}}}}}}}}}{{Bfc}Ab{{Jh{{D`{Df}}}}}}{{Bfc}Ab{{Jh{{D`{Ab}}}}}}{{Bfc}Ab{{Jh{{D`{{An{Hb}}}}}}}}{{Bf{Jn{Kb}}}Ab}{{Bfc}Ab{{Jh{{D`{d}}}}}}{{Bfc}Ab{{Jh{{D`{{An{{D`{Cn}}}}}}}}}}{{Bfc}Ab{{Jh{{D`{Hb}}}}}}{{Bfc}Ab{{Jh{{D`{Bf}}}}}}{{Bfc}Ab{{Jh{{D`{Jf}}}}}}{{Bfc}Ab{{Jh{{D`{{An{Jl}}}}}}}}{{Bfc}Ab{{Jh{{D`{Jb}}}}}}{{Bfc}Ab{{Jh{{D`{{AHj{{D`{Cn}}}}}}}}}}{{Bfc}Ab{{Jh{{D`{{An{d}}}}}}}}{{Bfc}Ab{{Jh{{D`{{An{Kb}}}}}}}}{{Bfc}Ab{{Jh{{D`{Kb}}}}}}{{Bf{Jn{Jf}}}Ab}{{Bfc}Ab{{Jh{{D`{{An{Jb}}}}}}}}{{Bfc}Ab{{Jh{{D`{{An{Df}}}}}}}}{{Bfc}Ab{{Jh{{D`{{Ej{Cn}}}}}}}}{{Bfc}Ab{{Jh{{D`{{An{Hd}}}}}}}}{{Bfc}Ab{{Jh{{D`{{An{{Ej{Cn}}}}}}}}}}{{Bfc}Ab{{Jh{{D`{{An{Bf}}}}}}}}{{Bfc}Ab{{Jh{{D`{{D`{Cn}}}}}}}}{{Bfc}Ab{{Jh{{D`{{An{Ab}}}}}}}}{{Bf{Jn{Hd}}}Ab}{{Bfc}Ab{{Jh{{D`{Jl}}}}}}{{Bfc}Ab{{Jh{{D`{Gh}}}}}}{{Bfc}Ab{{Jh{{D`{{An{Jf}}}}}}}}{{Bf{Jn{Jl}}}Ab}{{BfAb}Ab}{{Bfc}Ab{{Jh{{D`{Hd}}}}}}{{Bfc}AbBAd}{{Bfc}Ab{{Jh{{D`{{An{{AHj{Bf}}}}}}}}}}{{BfDd}Ab}{{BLbEnEn}Ab}{{BfEn}Ab}{BNn{{An{c}}}{}}{{AbAb}{{Ad{F`}}}}{{AbBf}{{Ad{F`}}}}{{Abc}{{Ad{F`}}}ALn}2{{AbBf}c{}}{{Abc}eALn{}}{Ab{{Ad{`}}}}{BLbEn}`{AbBO`}{Ab{{Ad{Ab}}}}{{BLbJbKj}{{Ad{Ab}}}}0{BLbAb}{{AbAb}c{}}{{Abc}e{nJ`}{}}0{{BLbBf}b}{{AbBf}Ab}{{Ab{D`{Jf}}}{{Ad{Ab}}}}5{H`H`}{{BLbC`Kn}{{Ad{Ab}}}}0{{AbJbdd{An{Hd}}}{{Ad{Ab}}}}{{AbEndd{An{Hd}}}{{Ad{Ab}}}}{{AbH`}b}{{BLbJf}Ab}{BLbb}0{Abb}{{Ab{An{Hd}}}Ab}{BNn{{Gb{En{An{En}}}}}}{{BLbJfEn}Ab}{{AbDj}{{Ad{Ab}}}}{{BLbDj}{{Ad{Ab}}}}0{{BLbCn}{{An{Jb}}}}0{{BLbCn}{{Ad{Ab}}}}0{Ab{{Ad{Ln}}}}{{AbEn}{{Ad{{AHj{Bf}}}}}}{{AbDd}{{Ad{Ab}}}}{{AbAb}c{}}{{Abc}e{nJ`}{}}01{Ab{{Ad{c}}}J`}{Ab{{Ad{Ab}}}}{{Ab{An{En}}}Ab}{{BLbDl}{{Ad{Ab}}}}{{BLb{D`{L`}}}{{Ad{Ab}}}}{{BLb{D`{L`}}}Ab}{{Ab{D`{L`}}d}Ab}{{AbDld}{{Ad{Ab}}}}{{BLbDl}Ab}{{Ab{D`{L`}}}Ab}{{AbDld}Ab}{{AbEnd}Eh}:{ce{}{}}0{Ab{{AHj{Ab}}}}{cDf{}}{{AbAb}{{Ad{Ab}}}}{c{{Fl{e}}}{}{}}0{{{Gb{Bf{Ej{Eh}}}}}{{Ad{Ab}}}}{{{Gb{AMb{Ej{Eh}}}}}{{Ad{Ab}}}}{{{Gb{BfEh}}}{{Ad{Ab}}}}{{{Gb{AMbEh}}}{{Ad{Ab}}}}4444{cMb{}}00{Ab{{Ad{ANh}}}}{Ab{{Ad{ALj}}}}{Ab{{Ad{ANj}}}}{Ab{{Ad{ANf}}}}{BLb{{Ad{Ab}}}}0{Ab{{Ad{Ab}}}}{BLb{{Ad{{j{c}}}}}Bl}`{{BLbCn}{{An{Jb}}}}0{{BLbCn}{{Ad{Ab}}}}0{ce{}{}}00{{AbBf}Ab}{{Abc}Ab{nJ`}}{{AbF`Ab}{{Ad{Ab}}}}````{{{BOb{}{{Bn{c}}}}Ab}c{}}{{BOdAb}{{Ad{Ab}}}}{{{j{Af}}Ab}{{Ad{Ab}}}}0`2100210021002100``{{BH`Ab}{{Ad{Ab}}}}{{{j{Ed}}Ab}{{Ad{Ab}}}}0{{BH`c}{{Ad{Ab}}}A`}{{{j{Ed}}c}{{Ad{Ab}}}A`}0```{{cf}b{}};;{BOfBOf}{{ce}b{}{}}{{}BOf}{Enc{}}0{Enb}{{BOfBOf}d}{{ce}d{}{}}00{{BOfFd}Ff}{cc{}}{{BOfc}bAE`}{{}En}{ce{}{}}0{c{{Fl{e}}}{}{}}0{cMb{}}2``>{CdAb}033{CdCd}>1<<;754{AbCd}{{CdEh}b}65546{{CdEhe}c{}{{C`{Cd}{{Bn{c}}}}}}````````{{cf}b{}}9{{{Ej{B@b}}}{{Ad{B@b}}}}{c{{Ad{B@b}}}{{Fb{}{{B`{B@b}}}}}}{cB@b{{Fb{}{{B`{B@b}}}}}}{c{{An{B@b}}}{{Fb{}{{B`{B@b}}}}}}{{{j{c}}{j{e}}}{{Gb{{AHj{{j{c}}}}{AHj{{j{e}}}}}}}BlBl}{{{j{c}}{j{e}}{j{g}}}{{Gb{{AHj{{j{c}}}}{AHj{{j{e}}}}{AHj{{j{g}}}}}}}BlBlBl}{BOhd}{c{{Ad{Dd}}}{{Fb{}{{B`{Gh}}}}}}{c{{Ad{{Gb{DdEn}}}}}{{Fb{}{{B`{Gh}}}}}}`{ce{}{}}00000{{{BOj{ec}}}{{BOj{ec}}}Nl{Nl{Bd{}{{B`{c}}}}}}{{ce}b{}{}}{{{j{c}}{j{c}}}{{Gb{{AHj{{j{c}}}}{AHj{{j{c}}}}}}}Bl}{{AbAb}{{Gb{AbAb}}}}{BOhe{}{{BOl{c}}}}{BOhe{}{{BOn{c}}}}>={{BOhc}dBIb}{{{C@`{c}}}e{}{}}{Enc{}}{{{AH`{c}}}e{}{}}111011{Enb}00{cBAb{{Fb{}{{B`{Dd}}}}}}{c{{Ad{Dd}}}{{Fb{}{{B`{Dd}}}}}}{{AbBf}{{Ad{b}}}}{{{C@`{Ab}}{C@`{Ab}}}d}{{ce}d{}{}}00`{{BOhcg}{{An{c}}}{}{}{{Cf{ce}{{Bn{c}}}}}}{cc{}}00{g{{Fl{ic}}}{}{}{{Fn{c}{{B`{e}}}}}{}}{c{{AH`{F`}}}{{Fb{}{{B`{d}}}}}}{c{{AH`{{j{e}}}}}{{Fb{}{{B`{}}}}}l}{eBOn{}{{Fb{}{{B`{c}}}}}}12{c{{AH`{{j{e}}}}}{{Gd{}{{B`{}}}}}l}{c{{AH`{F`}}}{{Gf{}{{B`{d}}}}}}{c{{AH`{{j{e}}}}}{{Gf{}{{B`{}}}}}l}{{DdDd}{{An{Dd}}}}{{AJlAJl}AJl}{{AbAb}{{Ad{b}}}}{{{C@`{Ab}}c}bAE`}{{}En}00{ce{}{}}00{{{AH`{c}}}c{}}1{BC`{{Ej{c}}}{}}{c{{Ej{{C@d{C@b}}}}}{}}{c{{Ej{Df}}}{}}{B@nGh}{c{{AH`{c}}}{}}{{eEn}{{BOj{ec}}}{}{{Bd{}{{B`{c}}}}}}{{{BOj{ec}}}An{}{{Bd{}{{B`{c}}}}}}{{{BOj{ec}}}An{}{{Bd{}{{B`{c}}}}El}}`{{{BOj{ec}}}{{Gb{En{An{En}}}}}{}{{Bd{}{{B`{c}}}}}}{{{D`{c}}JfEn}{{D`{c}}}{}}{{{j{c}}En}{{Ad{{Ej{{j{c}}}}}}}Bl}{{B@bEnd}{{Ad{{Ej{B@b}}}}}}={{BOhEn}{{BOj{BOhc}}}{}}{c{{Fl{e}}}{}{}}00{{DdDd}{{Ad{Dd}}}}111{cMb{}}00{ce{}{}}00{{Dde}c{}{{C`{Cd}{{Bn{c}}}}}}{{{D`{{Ej{c}}}}}{{Gb{En{Ej{En}}}}}{}}{B@b{{`{{Bd{}{{B`{B@b}}}}}}}}{{{D`{c}}}{{AGj{L`}}}{{Jh{{D`{Md}}}}HjHl}}{{{D`{e}}}{{Ej{c}}}{HjHlCb}{{Jh{{D`{c}}}}}}{Ab{{Ej{Ab}}}}","D":"IHd","p":[[1,"unit"],[1,"bool"],[5,"Private",4912],[5,"ListType",1232],[5,"ChunkedArray",39],[10,"PolarsNumericType",1232],[10,"Num",4913],[10,"ToPrimitive",4914],[5,"Series",4334],[8,"PolarsResult",3625],[10,"NumOpsDispatchInner",4715],[6,"GroupsProxy",3227],[5,"BooleanType",1232],[5,"Settings",39],[6,"Option",4915],[17,"Item"],[8,"ArrayBox",4774],[10,"Iterator",4916],[1,"str"],[17,"IsNested"],[5,"FalseT",1232],[10,"PolarsDataType",1232],[17,"Output"],[10,"Fn",4917],[10,"Copy",4918],[5,"UnstableSeries",4774],[10,"FnMut",4917],[5,"Float32Type",1232],[5,"Float64Type",1232],[5,"BinaryType",1232],[1,"u8"],[1,"slice"],[5,"StringType",1232],[6,"DataType",1232],[5,"String",4919],[8,"ListChunked",1232],[5,"SortOptions",1150],[8,"IdxCa",1232],[5,"SortMultipleOptions",1150],[8,"BinaryChunked",1232],[10,"PolarsIntegerType",1232],[10,"NumOpsDispatchCheckedInner",4740],[8,"ChunkIdIter",39],[8,"ArrayRef",3625],[5,"Vec",4920],[10,"DoubleEndedIterator",4921],[1,"usize"],[8,"BooleanChunked",1232],[10,"IntoIterator",4922],[5,"Formatter",4923],[8,"Result",4923],[10,"Array",4924],[17,"Array"],[6,"Result",4925],[10,"FallibleIterator",4926],[5,"Bitmap",4927],[1,"tuple"],[10,"IntoParallelIterator",4928],[10,"TrustedLen",4929],[6,"AnyValue",1232],[5,"ObjectType",1232],[10,"PolarsObjectSafe",821],[10,"PolarsObject",821],[6,"IsSorted",4334],[1,"f32"],[1,"u64"],[5,"Int128Type",1232],[8,"DecimalChunked",1232],[10,"Send",4918],[10,"Sync",4918],[10,"ExactSizeIterator",4930],[10,"PolarsFloatType",1232],[10,"PolarsIterator",782],[5,"Iter",4931],[5,"IterNames",4931],[5,"Iter",4932],[1,"fn"],[5,"Map",4933],[6,"ChunkedArrayLayout",39],[10,"NumCast",4914],[1,"f64"],[5,"Int64Type",1232],[1,"i64"],[10,"AsRef",4934],[5,"Int32Type",1232],[1,"i32"],[5,"Range",4935],[5,"UInt32Type",1232],[1,"u32"],[5,"UInt64Type",1232],[10,"ParallelIterator",4928],[10,"IndexedParallelIterator",4928],[6,"QuantileInterpolOptions",3625],[5,"Field",1232],[5,"RollingOptionsFixedWindow",3625],[8,"IdxSize",3625],[10,"Sized",4918],[17,"HasViews"],[5,"RandomState",4936],[5,"BytesHash",4937],[8,"Array2",4938],[8,"ArrayView1",4938],[8,"StringChunked",1232],[6,"Either",4939],[5,"TypeId",4940],[5,"NullableIdxSize",3625],[10,"FnOnce",4917],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",476],[10,"ChunkedBuilder",504],[5,"BinViewChunkedBuilder",504],[10,"ViewType",4941],[5,"BooleanChunkedBuilder",504],[5,"NullChunkedBuilder",504],[5,"PrimitiveChunkedBuilder",504],[10,"Clone",4942],[8,"StringChunkedBuilder",504],[8,"BinaryChunkedBuilder",504],[10,"NewChunkedArray",504],[5,"AnonymousListBuilder",608],[5,"AnonymousOwnedListBuilder",608],[5,"ListBooleanChunkedBuilder",608],[5,"ListPrimitiveChunkedBuilder",608],[10,"ListBuilderTrait",608],[5,"ListStringChunkedBuilder",608],[5,"ListBinaryChunkedBuilder",608],[5,"ListNullChunkedBuilder",608],[5,"Box",4943],[10,"ChunkedCollectInferIterExt",762],[10,"ChunkedCollectIterExt",762],[10,"Canonical",776],[10,"ChunkedCollectParIterExt",778],[10,"FromParIterWithDtype",778],[5,"BooleanArray",4944],[5,"BoolIterNoNull",782],[5,"SomeIterator",782],[5,"ObjectArray",821],[6,"ArrowDataType",1232],[10,"Any",4940],[10,"Debug",4923],[8,"ObjectValueIter",821],[5,"BitmapIter",4945],[6,"ZipValidity",4946],[5,"Arc",3625],[5,"ObjectChunkedBuilder",892],[8,"ObjectChunked",1232],[10,"AnonymousObjectBuilder",915],[5,"ObjectRegistry",915],[8,"ObjectConverter",915],[8,"BuilderConstructor",915],[17,"FuncRet"],[10,"ChunkApply",943],[10,"ChunkApplyKernel",943],[10,"ChunkSort",943],[10,"ChunkUnique",943],[10,"ChunkCast",943],[6,"FillNullStrategy",943],[10,"ChunkCompare",943],[10,"ChunkExplode",943],[5,"OffsetsBuffer",4947],[10,"ChunkFillNullValue",943],[10,"ChunkFilter",943],[10,"ChunkFull",943],[10,"ChunkFullNull",943],[10,"ChunkAnyValue",943],[10,"Hasher",4948],[10,"IsFirstDistinct",943],[10,"IsLastDistinct",943],[10,"ChunkAgg",943],[10,"ChunkQuantile",943],[10,"ChunkExpandAtIndex",943],[10,"ChunkReverse",943],[10,"ChunkRollApply",943],[10,"ChunkSet",943],[10,"ChunkShift",943],[10,"ChunkShiftFill",943],[10,"ChunkVar",943],[10,"ChunkTake",943],[10,"ChunkTakeUnchecked",943],[10,"ChunkBytes",943],[10,"ChunkZip",943],[10,"BinaryFnMut",1066],[10,"StaticArray",1232],[10,"TernaryFnMut",1066],[10,"Error",4949],[10,"UnaryFnMut",1066],[5,"PrimitiveArray",4950],[6,"SearchSortedSide",1106],[10,"SlicedArray",3625],[5,"NoNull",4798],[5,"RowsEncoded",4951],[8,"BinaryOffsetChunked",1232],[5,"NaiveDateTime",4952],[6,"PolarsError",3625],[6,"Cow",4953],[8,"Float32Chunked",1232],[8,"Float64Chunked",1232],[10,"ArrayFromIter",1232],[10,"ArrayFromIterDtype",1232],[10,"AsRefDataType",1232],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",4954],[10,"From",4934],[5,"CategoricalChunked",2605],[10,"CategoricalMergeOperation",2605],[10,"LogicalType",1232],[5,"Logical",1232],[5,"OwnedObject",1232],[6,"UnknownKind",1232],[6,"TimeUnit",1232],[5,"UInt8Type",1232],[5,"UInt16Type",1232],[5,"Int8Type",1232],[5,"Int16Type",1232],[5,"DateType",1232],[5,"TimeType",1232],[5,"BinaryOffsetType",1232],[5,"DecimalType",1232],[5,"DatetimeType",1232],[5,"DurationType",1232],[5,"CategoricalType",1232],[6,"ArrowTimeUnit",1232],[10,"ArrayCollectIterExt",3625],[8,"Utf8ViewArray",4941],[8,"UInt32Chunked",1232],[5,"Error",4923],[10,"NumericNative",1232],[10,"Into",4934],[5,"ArrowField",3625],[6,"PrimitiveType",4955],[6,"IntegerType",4956],[10,"Borrow",4957],[8,"String",4958],[10,"NoOption",4959],[10,"GetAnyValue",1232],[8,"Int128Chunked",1232],[6,"Ordering",4960],[6,"PhysicalType",4956],[8,"UInt8Chunked",1232],[8,"UInt16Chunked",1232],[8,"UInt64Chunked",1232],[8,"Int8Chunked",1232],[8,"Int16Chunked",1232],[8,"Int32Chunked",1232],[8,"Int64Chunked",1232],[8,"PlIdHashMap",1232],[5,"CategoricalChunkedBuilder",2605],[5,"GlobalRevMapMerger",2605],[6,"RevMapping",2745],[6,"CategoricalOrdering",2745],[5,"CatIter",2605],[1,"u128"],[5,"DataFrame",2934],[5,"StringCacheHolder",2797],[5,"ErrString",2826],[6,"PolarsWarning",2826],[10,"Display",4923],[6,"FloatFmt",2904],[1,"i128"],[1,"char"],[5,"Schema",4262],[10,"IntoSeries",4334],[6,"NullStrategy",2934],[6,"UniqueKeepStrategy",2934],[8,"PlHashSet",1232],[5,"ArrowSchema",3625],[5,"Row",3481],[5,"GroupBy",3227],[5,"RangeToInclusive",4935],[5,"RangeTo",4935],[5,"RangeFull",4935],[5,"RangeInclusive",4935],[5,"RangeFrom",4935],[5,"RecordBatchIter",2934],[5,"PhysRecordBatchIter",2934],[10,"IntoVec",4798],[5,"MeltArgs",3198],[10,"RangeBounds",4935],[8,"SchemaRef",4262],[6,"IndexOrder",3625],[8,"ArrowChunk",2934],[5,"StructArray",4961],[5,"GroupsIdx",3227],[8,"IdxVec",4962],[6,"GroupByMethod",3227],[5,"SlicedGroups",3227],[5,"GroupsProxyParIter",3227],[10,"UnindexedConsumer",4963],[6,"GroupsIndicator",3227],[8,"IdxItem",3227],[10,"IntoGroupsProxy",3227],[5,"Copied",4964],[5,"Zip",4965],[5,"GroupsProxyIter",3227],[8,"GroupsSlice",3227],[1,"array"],[8,"DynArgs",3625],[10,"IsFloat",4966],[10,"NativeType",4967],[10,"AggList",3465],[10,"TakeExtremum",3465],[10,"PhysicalAggExpr",3478],[6,"AnyValueBuffer",3481],[6,"AnyValueBufferTrusted",3481],[5,"BinaryArray",4968],[5,"IdHasher",3577],[5,"IdxHash",3577],[5,"HashMap",4969],[10,"BuildHasher",4948],[10,"VecHash",3577],[10,"Allocator",4970],[5,"BorrowedFd",4971],[10,"AsFd",4971],[10,"AsRawFd",4972],[20,"MaybeUninit",4973],[10,"NumOpsDispatchChecked",3625],[5,"ChunkId",3625],[5,"RollingVarParams",3625],[5,"RollingQuantileParams",3625],[6,"NonExistent",3625],[10,"Ord",4960],[10,"Default",4974],[5,"Weak",4975],[10,"Scalar",4976],[10,"PartialEq",4960],[5,"File",4977],[5,"Error",4978],[5,"Utf8Error",4979],[5,"TryReserveError",4980],[6,"Error",4981],[1,"never"],[5,"Path",4982],[5,"PathBuf",4982],[5,"OsString",4983],[5,"OsStr",4983],[5,"CString",4984],[5,"CStr",4985],[10,"ToOwned",4953],[10,"FromData",4185],[5,"Buffer",4986],[10,"FromDataUtf8",4185],[10,"FromDataBinary",4185],[5,"ListArray",4987],[6,"Ambiguous",3625],[10,"NamedFromOwned",3625],[10,"PartialOrd",4960],[10,"PolarsArray",3625],[10,"Hash",4948],[10,"SeriesTrait",4334],[10,"ChunkAggSeries",3625],[10,"QuantileAggSeries",3625],[10,"IndexToUsize",3625],[10,"NamedFrom",3625],[5,"Pin",4988],[5,"Request",4949],[5,"BorrowedCursor",4989],[5,"IoSliceMut",4990],[6,"SeekFrom",4990],[10,"VarAggSeries",3625],[5,"AllocError",4970],[5,"BTreeMap",4991],[5,"IoSlice",4990],[5,"AnonymousBuilder",4191],[5,"Offsets",4947],[5,"MutableNullArray",4214],[5,"MutableBitmap",4992],[5,"Utf8Array",4993],[8,"ArrowSchemaRef",4994],[10,"IndexOfSchema",4262],[8,"Metadata",4995],[5,"SeriesIter",4334],[8,"SeriesPhysIter",4334],[10,"LhsNumOps",4715],[10,"NumOpsDispatch",4715],[6,"NullBehavior",4748],[10,"CustomIterTools",4798],[5,"TrustMyLength",4798],[10,"FromIteratorReversed",4996],[10,"FromTrustedLenIterator",4798],[5,"Wrap",4798],[5,"LazyCompact",4997],[5,"SmartString",4998],[8,"FillNullLimit",943],[10,"InitHashMaps",1232],[10,"InitHashMaps2",1232],[5,"TrueT",1232],[15,"IO",2889],[15,"Context",2889],[15,"Count",3462],[15,"Slice",3463],[10,"ListFromIter",3625],[10,"Utf8FromIter",4257],[10,"BinaryFromIter",4257]],"b":[[53,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[54,"impl-Add-for-%26ChunkedArray%3CT%3E"],[55,"impl-Add-for-ChunkedArray%3CT%3E"],[56,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[70,"impl-ChunkedArray%3CFloat32Type%3E"],[71,"impl-ChunkedArray%3CFloat64Type%3E"],[76,"impl-ChunkedArray%3CBinaryType%3E"],[77,"impl-ChunkedArray%3CStringType%3E"],[78,"impl-ChunkedArray%3CT%3E"],[99,"impl-Settings"],[100,"impl-Flags-for-Settings"],[140,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[141,"impl-Div-for-%26ChunkedArray%3CT%3E"],[142,"impl-Div-for-ChunkedArray%3CT%3E"],[143,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[152,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[153,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[154,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[155,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[162,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[163,"impl-Debug-for-ChunkedArray%3CT%3E"],[164,"impl-Debug-for-Settings"],[165,"impl-UpperHex-for-Settings"],[166,"impl-LowerHex-for-Settings"],[167,"impl-Octal-for-Settings"],[168,"impl-Binary-for-Settings"],[176,"impl-Flags-for-Settings"],[177,"impl-Settings"],[185,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[186,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[187,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[190,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[191,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[217,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[218,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[219,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[220,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[259,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[260,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[261,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[262,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[263,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[264,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[270,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[271,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[272,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[273,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[274,"impl-ChunkedArray%3CBooleanType%3E"],[275,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[277,"impl-ChunkedArray%3CBooleanType%3E"],[278,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[281,"impl-ChunkedArray%3CBooleanType%3E"],[282,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[285,"impl-ChunkedArray%3CBooleanType%3E"],[286,"impl-ChunkedArray%3CT%3E"],[287,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[288,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[289,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[290,"impl-Mul-for-ChunkedArray%3CT%3E"],[294,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[295,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[296,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[297,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[298,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[299,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[300,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[301,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[302,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[303,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[304,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[305,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[306,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[307,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[308,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[309,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[310,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[311,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[312,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[313,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[314,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[315,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[323,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[324,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[325,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[326,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[330,"impl-ChunkedArray%3CListType%3E"],[331,"impl-ChunkedArray%3CStringType%3E"],[332,"impl-ChunkedArray%3CStringType%3E"],[333,"impl-ChunkedArray%3CListType%3E"],[344,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[345,"impl-Rem-for-ChunkedArray%3CT%3E"],[346,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[347,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[373,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[374,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[375,"impl-Sub-for-ChunkedArray%3CT%3E"],[376,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[380,"impl-ChunkedArray%3CBooleanType%3E"],[381,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[385,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[386,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[387,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[388,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[394,"impl-ChunkedArray%3CListType%3E"],[395,"impl-ChunkedArray%3CT%3E"],[402,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[403,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[404,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[405,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[406,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[407,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[438,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[439,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[440,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[441,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[442,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[443,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[444,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[445,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[446,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[447,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[448,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[449,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[450,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[451,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[452,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[453,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[454,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[455,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[456,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[457,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[458,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[459,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[460,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[461,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[462,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[463,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[464,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[465,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[466,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[467,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[468,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[469,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[470,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[471,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[472,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[473,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[556,"impl-BinViewChunkedBuilder%3Cstr%3E"],[557,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[826,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[827,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[859,"impl-ObjectArray%3CT%3E"],[860,"impl-StaticArray-for-ObjectArray%3CT%3E"],[872,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[873,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[883,"impl-StaticArray-for-ObjectArray%3CT%3E"],[884,"impl-ObjectArray%3CT%3E"],[886,"impl-ObjectArray%3CT%3E"],[887,"impl-StaticArray-for-ObjectArray%3CT%3E"],[889,"impl-Array-for-ObjectArray%3CT%3E"],[890,"impl-ObjectArray%3CT%3E"],[893,"impl-ObjectChunkedBuilder%3CT%3E"],[894,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[896,"impl-ObjectChunkedBuilder%3CT%3E"],[897,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1462,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[1463,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[1464,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[1465,"impl-Add-for-ChunkedArray%3CStringType%3E"],[1466,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[1467,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[1468,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[1469,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[1544,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[1545,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[1546,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[1547,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[1548,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[1549,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[1831,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[1832,"impl-PartialEq-for-DataType"],[1840,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[1841,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[1842,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[1843,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[1846,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[1847,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[1848,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[1849,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[1888,"impl-Debug-for-AnyValue%3C\'a%3E"],[1889,"impl-Display-for-AnyValue%3C\'_%3E"],[1891,"impl-Debug-for-DataType"],[1892,"impl-Display-for-DataType"],[1894,"impl-Debug-for-TimeUnit"],[1895,"impl-Display-for-TimeUnit"],[1907,"impl-From%3CK%3E-for-AnyValue%3C\'_%3E"],[1908,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[1910,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[1912,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[1913,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[1914,"impl-From%3C%26Field%3E-for-Field"],[1916,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[1939,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[1941,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[1944,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[1945,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[1946,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[1948,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[1949,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[1950,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[1951,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[1957,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[1958,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[1960,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[1961,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[1962,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[1963,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[1964,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[1965,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[1973,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[1974,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[1975,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[1976,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[1977,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[1978,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2067,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2068,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2069,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2070,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2073,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2074,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2075,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2076,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2202,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2203,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2204,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2205,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2208,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2209,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2210,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2211,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2245,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2246,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2247,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2248,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[2249,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2250,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2251,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2252,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2253,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2254,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2265,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[2266,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[2269,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2270,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2271,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2272,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2275,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2276,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2277,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2278,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2358,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[2359,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[2360,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2361,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[2651,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2652,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2653,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2654,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2655,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2656,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2671,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2672,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2673,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2674,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2675,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2676,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2691,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2692,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2693,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2694,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2695,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2696,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2707,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2708,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2709,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2710,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2711,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2712,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2863,"impl-Display-for-ErrString"],[2864,"impl-Debug-for-ErrString"],[2956,"impl-Add%3C%26Series%3E-for-DataFrame"],[2957,"impl-Add%3C%26DataFrame%3E-for-%26DataFrame"],[2958,"impl-Add%3C%26Series%3E-for-%26DataFrame"],[2996,"impl-Div%3C%26Series%3E-for-DataFrame"],[2997,"impl-Div%3C%26DataFrame%3E-for-%26DataFrame"],[2998,"impl-Div%3C%26Series%3E-for-%26DataFrame"],[3028,"impl-Display-for-DataFrame"],[3029,"impl-Debug-for-DataFrame"],[3034,"impl-From%3C%26ArrowSchema%3E-for-DataFrame"],[3035,"impl-From%3C%26Schema%3E-for-DataFrame"],[3063,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3064,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3065,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3066,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3067,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3068,"impl-Index%3Cusize%3E-for-DataFrame"],[3069,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3070,"impl-Index%3C%26str%3E-for-DataFrame"],[3095,"impl-Mul%3C%26Series%3E-for-%26DataFrame"],[3096,"impl-Mul%3C%26DataFrame%3E-for-%26DataFrame"],[3097,"impl-Mul%3C%26Series%3E-for-DataFrame"],[3112,"impl-Rem%3C%26Series%3E-for-%26DataFrame"],[3113,"impl-Rem%3C%26DataFrame%3E-for-%26DataFrame"],[3114,"impl-Rem%3C%26Series%3E-for-DataFrame"],[3146,"impl-Sub%3C%26DataFrame%3E-for-%26DataFrame"],[3147,"impl-Sub%3C%26Series%3E-for-DataFrame"],[3148,"impl-Sub%3C%26Series%3E-for-%26DataFrame"],[3168,"impl-TryFrom%3C(RecordBatch%3CBox%3Cdyn+Array%3E%3E,+%26%5BField%5D)%3E-for-DataFrame"],[3169,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3339,"impl-Display-for-GroupByMethod"],[3340,"impl-Debug-for-GroupByMethod"],[3346,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[3348,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[3349,"impl-From%3CVec%3C(Vec%3Cu32%3E,+Vec%3CUnitVec%3Cu32%3E%3E)%3E%3E-for-GroupsIdx"],[3383,"impl-IntoIterator-for-%26GroupsIdx"],[3384,"impl-IntoIterator-for-GroupsIdx"],[3386,"impl-IntoParallelIterator-for-GroupsIdx"],[3387,"impl-IntoParallelIterator-for-%26GroupsIdx"],[3746,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[3747,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[3871,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[3872,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[3873,"impl-PartialEq-for-Arc%3CT,+A%3E"],[3905,"impl-Display-for-PolarsError"],[3906,"impl-Debug-for-PolarsError"],[3909,"impl-Pointer-for-Arc%3CT,+A%3E"],[3910,"impl-Debug-for-Arc%3CT,+A%3E"],[3911,"impl-Display-for-Arc%3CT,+A%3E"],[3920,"impl-From%3CUtf8Error%3E-for-PolarsError"],[3921,"impl-From%3CTryReserveError%3E-for-PolarsError"],[3923,"impl-From%3CError%3E-for-PolarsError"],[3924,"impl-From%3CError%3E-for-PolarsError"],[3928,"impl-From%3CT%3E-for-Arc%3CT%3E"],[3929,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[3930,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[3932,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[3933,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[3934,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[3935,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[3936,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[3938,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[3939,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[3940,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[3941,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[3942,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[3943,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[3944,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[4280,"impl-From%3C%26%5BSeries%5D%3E-for-Schema"],[4281,"impl-From%3C%26ArrowSchema%3E-for-Schema"],[4283,"impl-From%3CArc%3CArrowSchema%3E%3E-for-Schema"],[4284,"impl-From%3C%26Row%3C\'_%3E%3E-for-Schema"],[4285,"impl-From%3C%26Arc%3CArrowSchema%3E%3E-for-Schema"],[4286,"impl-From%3CArrowSchema%3E-for-Schema"],[4354,"impl-Add-for-%26Series"],[4355,"impl-Add-for-Series"],[4356,"impl-Add%3CT%3E-for-%26Series"],[4357,"impl-Add%3CT%3E-for-Series"],[4418,"impl-Div-for-Series"],[4419,"impl-Div-for-%26Series"],[4420,"impl-Div%3CT%3E-for-Series"],[4421,"impl-Div%3CT%3E-for-%26Series"],[4432,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4433,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4434,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4435,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4436,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4437,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4455,"impl-Display-for-Series"],[4456,"impl-Debug-for-Series"],[4467,"impl-FromIterator%3C%26str%3E-for-Series"],[4468,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[4469,"impl-FromIterator%3Ci64%3E-for-Series"],[4470,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[4471,"impl-FromIterator%3Cbool%3E-for-Series"],[4472,"impl-FromIterator%3C%26bool%3E-for-Series"],[4473,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[4474,"impl-FromIterator%3C%26u32%3E-for-Series"],[4475,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[4476,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[4477,"impl-FromIterator%3C%26f32%3E-for-Series"],[4478,"impl-FromIterator%3Cu32%3E-for-Series"],[4479,"impl-FromIterator%3C%26i32%3E-for-Series"],[4480,"impl-FromIterator%3Cu64%3E-for-Series"],[4481,"impl-FromIterator%3C%26f64%3E-for-Series"],[4482,"impl-FromIterator%3CString%3E-for-Series"],[4483,"impl-FromIterator%3C%26u64%3E-for-Series"],[4484,"impl-FromIterator%3C%26i64%3E-for-Series"],[4485,"impl-FromIterator%3Ci32%3E-for-Series"],[4486,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[4487,"impl-FromIterator%3Cf64%3E-for-Series"],[4488,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[4489,"impl-FromIterator%3Cf32%3E-for-Series"],[4490,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[4491,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[4492,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[4493,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[4494,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[4495,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[4507,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4508,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4509,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4510,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4511,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4512,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4550,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4551,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4552,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4553,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4554,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4555,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4569,"impl-Mul%3CT%3E-for-%26Series"],[4570,"impl-Mul-for-Series"],[4571,"impl-Mul%3CT%3E-for-Series"],[4572,"impl-Mul-for-%26Series"],[4578,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[4579,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[4580,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[4581,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[4582,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[4583,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[4584,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[4585,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[4586,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[4587,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[4588,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[4589,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[4590,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[4591,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[4592,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[4593,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[4594,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[4595,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[4596,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[4597,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[4598,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[4599,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[4600,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[4601,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[4602,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[4603,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[4604,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[4605,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[4606,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[4607,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[4608,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[4609,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[4610,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[4611,"impl-NamedFrom%3CT,+T%3E-for-Series"],[4612,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[4617,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4618,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4619,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4620,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4621,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4622,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4631,"impl-Rem-for-%26Series"],[4632,"impl-Rem%3CT%3E-for-%26Series"],[4633,"impl-Rem%3CT%3E-for-Series"],[4661,"impl-Sub-for-Series"],[4662,"impl-Sub%3CT%3E-for-Series"],[4663,"impl-Sub%3CT%3E-for-%26Series"],[4664,"impl-Sub-for-%26Series"],[4685,"impl-TryFrom%3C(%26str,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[4686,"impl-TryFrom%3C(%26Field,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[4687,"impl-TryFrom%3C(%26str,+Box%3Cdyn+Array%3E)%3E-for-Series"],[4688,"impl-TryFrom%3C(%26Field,+Box%3Cdyn+Array%3E)%3E-for-Series"],[4858,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[4859,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[4861,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[4862,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[4864,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[4865,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"]],"c":"OjAAAAEAAAAAAAwAEAAAAMAMBw1EDUcNSA1JDUoNSw1QDVMNWA1ZDX4N","e":"OzAAAAEAAG4O5wEAAAQABgACAAsAAAANAAAAEgACABcAAAAcAAEAIQAHACoAEQBEAAAARwACAEsABABTAAMAWAAAAFoABABhAAAAZQABAGkABgBxAAAAcwACAHkABAB/AAAAhAAHAI0ACACYAAQAnwABAKIACgCxAAAAtAABALgABAC+AAIAxAADAMoAAwDPAAMA1gAAANgABQDgAAMA6wAFAPQAAwD7AAEAAAEBAAMBBgAPAQ4AIAEFACcBGQBEAQMASQEAAEsBBABRAQEAVwEAAFkBBABgAQAAZQECAGkBAQBtAQIAcgEHAHwBAwCHAQEAjQEBAJMBCACdAQoAqQEAAKsBAACtAQUAtQEAALcBIwDcASkACgICABACIwA6AgUARAIAAEYCJgBvAkwAwwIMANcCNwASAwkAHgMBACIDAQAlAxIAOgMTAE8DBwBYAwAAWgMAAF0DAgBiAw4AcgMAAHQDAAB3AwMAfAMBAH8DAQCCAwgAjAMAAI4DBQCWAwEAmQMAAJsDAQCeAwMAowMDAKgDAgCsAwMAsgMAALUDAAC9AwAAwgMAAMUDAQDKAwEAzQMAANADAADaAwAA4wMCAOgDBQDwAwIA9gMAAPgDAAD6AwEAAAQBAAMEAQAKBAEAEAQAABMEAAAWBAAAGAQAABoEAAAcBAAAIQQEACgEAQArBAcANAQCADoEAAA8BAMAQQQBAEQEBQBQBBUAZwQBAGsEBABxBAMAeAQGAIIEDwCUBAwAogQAAKQEAwC0BAkAyQQNANkEAgDdBAUA5QQAAOcEDAD3BAAA+QQAAP4EAQABBQAAAwUCAAcFAAAJBQAADAUAAA8FAAARBQEAFAUAABYFAgAaBQwAKAUAACoFAQAtBQAALwUBADIFAAA0BQEANwUAADkFAQA8BQAAQAUAAEQFAQBIBQAASwUAAE0FAABPBQMAVAUAAFcFBwBgBQEAYwUEAGkFAQBtBQAAbwUAAHQFAgB4BQEAewUAAH0FAQCABQAAggUBAIUFAACHBQEAigUAAIwFAQCPBQAAkQUAAJQFOgDVBQQA3AUJAOgFBADuBQgA+AUAAPoFqQClBgcArgZzACMHAAAlB0YAdAcBAHcHAAB5BwIAfQcBAJQHAACWBwAAmAcXALQHJADbBwYA5AceAAkIPQBJCAAAbAgJAHgIAAB6CAEAfQgBAIAIAACFCAUAjAgAAI8IAgCUCCEAtwgJAMIIDQDRCBwA7wgGAPcIGgATCRUAKgkMADgJAAA9CQAAPwkAAEQJHABjCQIAZwlOALcJKQDiCUoALgoEADQKAQA3CgIAOwoEAEEKIwBsCgIAcAoJAH4KAwCDChcAnQoBAKAKBACmCg0AtQoFALwKAAC+ChUA1QoBANsKAgDgCgEA5AoJAO8KBAD1CgEA+goAAPwKAgAACwEAAwsAAAULAQALCwQAEQsEABcLDgAnCwoAMwsAADULAgA6CwQAQAskAGYLBQBtCwkAeAsAAHsLAAB+CwoAigsFAJYLEACpCxMAxAsBAMgLAgDMCwAAzgsAANMLAwDbCwEA3gsAAO0LAADwCwEA+AsMAAsMAQAYDAIAHwwBACkMAgAxDAAANAwAADoMAABDDAEARgwAAEkMBABUDAQAXAwGAGUMCQBwDAAAdAwEAIAMDQCPDAIAlAwKAKAMAQCjDAMAqAwDAK0MCQC4DAcAwQwBAMQMGADeDCgACA0GABMNAAAVDQIAGw0DACENAAAmDQcANg0NAEUNAQBMDQMAUQ0BAFUNAgBaDQAAXA0fAH8NDACODQUAlQ0HAJ4NFgC3DQsAxA0OANQNAADWDQAA2A0DAN8NBgDpDQ4A+g0BAP0NEQARDgQAGQ4FACEOCQAsDgIAMQ4HADoOCwBHDgMATA4WAGQOCABuDgUAdQ4UAI0OEACfDgAAoQ4BAKUOHADEDgIAyA4SANwOBgDmDgEA6w4iABEPAwAWDwsAIw8aAEAPEgBUDwIAXA8AAG4PAAB0DwAAdw8AAH4PAACBDwAAhg8BAIkPBgCSDxEAsw8DALgPAgC8DwEAvw8BANoPAgDgDwQA5w8AAOoPBwD0DwAA9g8BAPsPLQAyEAwAQBAAAEIQDABUEAkAYBAGAGgQAABqEBwAiBAAAIoQCwCXEAAAmRABAKIQBACpEAUAsBAKALwQBQDIEAEAyxABAM8QAQDhEAAA4xAAAOUQAADpEAMA7xAEAPUQAwD6EAQAAxEDAAwRAAASEQIAGhEFACERBgArEQMAMxECADcRAQA7EQ8ATxEDAFURAQBZEQIAZxEDAG4RAABxEQAAcxEeAJURAACcEQEAnxEAAKERAACjEQAAqREBAKwRAgCyEQMAvhEDAMcRAADJEQEAzBEAANIRAADaEQMA4xEbAAASBQAIEgEACxIBAA4SAQASEgEAGBICAB0SAAAfEgAAIxIBACkSAQAtEgEANBIAADYSAwBHEgEAShIOAGASAQBmEgIAahIAAGwSGgCKEgIAjxIOAJ8SAQCiEgUAqRIKALUSAAC3EgAAuRIEAL8SBADFEgQAzBIAAM8SAADSEggA3BICAOESDADwEgYA+hIIAAQTBQANEw8AHhMCACITCAAsEwQA"}],\
["polars_io",{"t":"KFFKKKNNECNNNNNNNNCMCNNNNNNNNNONNNNNNNNMMMNNNNNNNNNNCCCOCMMMOCCCCCONNNNNNNNNNCNNGFFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFNNNNNNNOHNNNNNNNNNNNNNNNONNNNNNNNNNHNNNNNNNNNNNCONONNNNNNNNNNNNNNNNPPPGPPPPGPPPPPPPPFGPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCPPFFGGFFPPPGFFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNOHNONNNNNNNNNNNNNNNNNNHNOONNNNNNNNOONONOOONNNNOONNNNNONNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPFFFPPPGFNNNONNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNONONNNNNNNNNNOONNOOOONNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFGFFFFFFFFFFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFPGPFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPKPGNNNNNNNNNNNNNNNNCHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCCFIFNNNNNNNNOONNNNHONNNNNNNNNNNNNNOOOOOONONNNNNNNNONNPFPPGFFFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNFPFPFPPGFFIPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNKFNNNNNNNNHNNMNNNHNNHFFKKHNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNKKEMMMMNNNJJJJHHHHHHHH","n":["ArrowReader","HiveOptions","RowIndex","SerReader","SerWriter","WriterFactory","__clone_box","__clone_box","async_glob","avro","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cloud","create_writer","csv","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","enabled","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extension","finish","finish","fmt","fmt","from","from","hash","hash","init","init","into","into","ipc","json","mmap","name","ndjson","new","new","next_record_batch","offset","parquet","partition","pl_async","predicates","prelude","schema","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","utils","vzip","vzip","AvroCompression","AvroReader","AvroWriter","Compression","Deflate","Deflate","Snappy","Snappy","__clone_box","arrow_schema","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","finish","finish","fmt","from","from","from","hash","init","init","init","into","into","into","new","new","schema","set_rechunk","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_columns","with_compression","with_n_rows","with_name","with_projection","CloudLocation","CloudWriter","PolarsObjectStore","__clone_box","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bucket","build_object_store","clone","clone_into","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","execute","expansion","flush","fmt","fmt","from","from","from","from_url","get","get_range","get_ranges","glob","head","init","init","init","into","into","into","new","new","new","new_with_object_store","options","prefix","queue","scheme","sync_update","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","write","write_varint","AccessKey","AccessKeyId","AccountName","AmazonS3ConfigKey","ApplicationCredentials","AuthorityId","Aws","Azure","AzureConfigKey","Bucket","Bucket","Checksum","Client","Client","Client","ClientId","ClientSecret","CloudOptions","CloudType","ConditionalPut","ContainerCredentialsRelativeUri","ContainerName","CopyIfNotExists","DefaultRegion","DisableTagging","DisableTagging","Encryption","Endpoint","Endpoint","FederatedTokenFile","File","Gcp","GoogleConfigKey","Http","ImdsV1Fallback","MetadataEndpoint","MsiEndpoint","MsiResourceId","ObjectId","Region","S3Express","SasKey","SecretAccessKey","ServiceAccount","ServiceAccountKey","SkipSignature","SkipSignature","Token","Token","UnsignedPayload","UseAzureCli","UseEmulator","UseFabricEndpoint","VirtualHostedStyleRequest","__clone_box","__clone_box","__clone_box","__clone_box","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_aws","build_azure","build_gcp","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_str","from_str","from_str","from_str","from_untyped_config","hash","hash","hash","hash","init","init","init","init","init","into","into","into","into","into","max_retries","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_aws","with_azure","with_gcp","read","write","AllColumns","AllColumnsSingle","BatchedCsvReaderMmap","BatchedCsvReaderRead","CommentPrefix","CsvEncoding","CsvReader","CsvReaderOptions","LossyUtf8","Multi","Named","NullValues","OwnedBatchedCsvReader","OwnedBatchedCsvReaderMmap","Single","Utf8","__clone_box","__clone_box","__clone_box","__clone_box","_with_comment_prefix","batched_borrowed_mmap","batched_borrowed_read","batched_mmap","batched_read","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","comment_prefix","count_rows","decimal_comma","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encoding","eol_char","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_path","has_header","has_header","hash","hash","hash","hash","ignore_errors","infer_file_schema","infer_schema","infer_schema_length","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","is_compressed","low_memory","low_memory","n_threads","new","new_from_str","new_multi","new_single","next_batches","next_batches","next_batches","next_batches","null_values","quote_char","raise_if_empty","raise_if_empty","sample_size","schema","schema_overwrite","separator","serialize","serialize","serialize","serialize","skip_rows","skip_rows_after_header","to_owned","to_owned","to_owned","to_owned","truncate_ragged_lines","truncate_ragged_lines","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_parse_dates","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_chunk_size","with_columns","with_comment_prefix","with_decimal_comma","with_dtypes","with_dtypes_slice","with_encoding","with_end_of_line_char","with_ignore_errors","with_missing_is_null","with_n_rows","with_n_threads","with_null_values","with_options","with_path","with_predicate","with_projection","with_quote_char","with_rechunk","with_row_index","with_schema","with_separator","with_skip_rows","with_skip_rows_after_header","with_try_parse_dates","Always","BatchedWriter","CsvWriter","CsvWriterOptions","Necessary","Never","NonNumeric","QuoteStyle","SerializeOptions","__clone_box","__clone_box","__clone_box","batch_size","batched","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","date_format","datetime_format","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","float_precision","fmt","fmt","fmt","from","from","from","from","from","hash","hash","hash","include_bom","include_bom","include_header","include_header","init","init","init","init","init","into","into","into","into","into","line_terminator","maintain_order","n_threads","new","null","quote_char","quote_style","separator","serialize","serialize","serialize","serialize_options","time_format","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_batch_size","with_date_format","with_datetime_format","with_float_precision","with_line_terminator","with_null_value","with_quote_char","with_quote_style","with_separator","with_time_format","write_batch","BatchedWriter","IpcCompression","IpcReadOptions","IpcReader","IpcReaderAsync","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOption","IpcWriterOptions","LZ4","ZSTD","__clone_box","__clone_box","__clone_box","__clone_box","arrow_schema","batched","batched_async","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","compression","count_rows","create_writer","create_writer","data","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extension","extension","finish","finish","finish","finish","finish","finish_with_scan_ops","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_uri","hash","hash","hash","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","maintain_order","memory_map","memory_mapped","metadata","new","new","new","new","new","new","new_async","schema","schema","serialize","serialize","serialize","set_rechunk","set_rechunk","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_columns","with_columns","with_compression","with_compression","with_compression","with_compression","with_extension","with_extension","with_n_rows","with_n_rows","with_pl_flavor","with_pl_flavor","with_predicate","with_projection","with_projection","with_projection","with_row_index","with_row_index","with_row_index","with_row_limit","write_batch","BatchedWriter","Json","JsonFormat","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","__clone_box","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","finish","finish","fmt","from","from","from","from","from","hash","infer_schema_len","init","init","init","init","init","into","into","into","into","into","maintain_order","new","new","new","serialize","set_rechunk","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_batch_size","with_ignore_errors","with_json_format","with_json_format","with_projection","with_schema","with_schema_overwrite","write_batch","Borrowed","Mapped","MmapBytesReader","Owned","ReaderBytes","borrow","borrow_mut","deref","deref","deref_mut","drop","from","from","init","into","to_bytes","to_file","try_from","try_into","type_id","vzip","core","infer_schema","JsonLineReader","StructArray","__clone_box","arced","as_any","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","boxed","clone","clone_into","data_type","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","fields","finish","fmt","from","from","from","from","from_path","get_fields","infer_schema_len","init","init","into","into","into_data","into_iter","iter","len","low_memory","new","new","new_empty","new_null","set_validity","slice","slice","slice_typed","slice_typed_unchecked","slice_unchecked","slice_unchecked","sliced","sliced_unchecked","take_validity","to_boxed","to_owned","try_from","try_from","try_into","try_into","try_new","type_id","type_id","validity","validity","values","values_iter","vzip","vzip","with_chunk_size","with_ignore_errors","with_n_rows","with_n_threads","with_path","with_rechunk","with_schema","with_schema_overwrite","with_validity","with_validity","metadata","read","write","FileMetaData","FileMetaDataRef","ParquetStatistics","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","column_order","column_orders","created_by","deref","deref","deref_mut","deref_mut","deserialize","distinct_count","drop","drop","eq","fmt","fmt","from","from","from","init","init","into","into","into_thrift","key_value_metadata","key_value_metadata","max_value","min_value","null_count","num_rows","row_groups","schema","schema_descr","to_owned","try_from","try_from","try_from_thrift","try_into","try_into","type_id","type_id","version","vzip","vzip","Auto","BatchedParquetReader","Columns","None","ParallelStrategy","ParquetAsyncReader","ParquetOptions","ParquetReader","RowGroups","__clone_box","__clone_box","batched","batched","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","finishes_this_batch","fmt","fmt","from","from","from","from","from","from_uri","get_metadata","get_metadata","hash","hash","init","init","init","init","init","into","into","into","into","into","is_finished","iter","limit_reached","low_memory","materialize_empty_df","new","new","next_batches","num_rows","num_rows","parallel","read_parallel","read_parallel","schema","schema","schema","serialize","serialize","set_low_memory","set_rechunk","set_rechunk","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","use_statistics","use_statistics","use_statistics","vzip","vzip","vzip","vzip","vzip","with_columns","with_hive_partition_columns","with_hive_partition_columns","with_n_rows","with_n_rows","with_predicate","with_predicate","with_projection","with_projection","with_row_index","with_row_index","with_schema","BatchedWriter","Brotli","BrotliLevel","Gzip","GzipLevel","Lz4Raw","Lzo","ParquetCompression","ParquetWriteOptions","ParquetWriter","RowGroupIter","Snappy","Uncompressed","Zstd","ZstdLevel","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","batched","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","compression","data_pagesize_limit","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","encode_and_compress","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_writer","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","into","into","into","into","into","into","into","maintain_order","new","row_group_size","serialize","serialize","serialize","serialize","serialize","set_parallel","statistics","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_new","try_new","try_new","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_compression","with_data_page_size","with_row_group_size","with_statistics","write_batch","write_row_groups","PartitionedWriter","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","new","try_from","try_into","type_id","vzip","with_parallel","GetSize","RuntimeManager","block_on","block_on_potential_spawn","borrow","borrow_mut","deref","deref_mut","drop","from","get_runtime","init","into","size","spawn","try_from","try_into","tune_with_concurrency_budget","type_id","vzip","with_concurrency_budget","BatchStats","ColumnStats","PhysicalIoExpr","StatsEvaluator","apply_predicate","as_stats_evaluator","borrow","borrow","borrow_mut","borrow_mut","column_stats","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","dtype","evaluate_io","fmt","fmt","from","from","from_column_literal","from_field","get_max_state","get_min_state","get_null_count_state","get_stats","init","init","into","into","new","new","null_count","num_rows","schema","serialize","serialize","should_read","to_max","to_min","to_min_max","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","SerReader","SerWriter","cloud","finish","finish","new","new","set_rechunk","set_rechunk","set_rechunk","BOOLEAN_RE","FLOAT_RE","FLOAT_RE_DECIMAL","INTEGER_RE","check_projected_arrow_schema","check_projected_schema","check_projected_schema_impl","get_reader_bytes","get_sequential_row_statistics","is_cloud_url","materialize_projection","resolve_homedir"],"q":[[0,"polars_io"],[80,"polars_io::avro"],[146,"polars_io::cloud"],[216,"polars_io::cloud::options"],[395,"polars_io::csv"],[397,"polars_io::csv::read"],[641,"polars_io::csv::write"],[781,"polars_io::ipc"],[1034,"polars_io::json"],[1130,"polars_io::mmap"],[1151,"polars_io::ndjson"],[1153,"polars_io::ndjson::core"],[1233,"polars_io::parquet"],[1236,"polars_io::parquet::metadata"],[1288,"polars_io::parquet::read"],[1424,"polars_io::parquet::write"],[1606,"polars_io::partition"],[1622,"polars_io::pl_async"],[1643,"polars_io::predicates"],[1697,"polars_io::prelude"],[1707,"polars_io::utils"],[1719,"dyn_clone::sealed"],[1720,"alloc::boxed"],[1721,"std::io"],[1722,"core::result"],[1723,"serde::de"],[1724,"std::path"],[1725,"polars_core::frame"],[1726,"polars_error"],[1727,"core::fmt"],[1728,"core::fmt"],[1729,"std::io"],[1730,"core::option"],[1731,"serde::ser"],[1732,"core::any"],[1733,"polars_arrow::datatypes::schema"],[1734,"std::io"],[1735,"alloc::string"],[1736,"alloc::vec"],[1737,"object_store"],[1738,"alloc::sync"],[1739,"std::io::error"],[1740,"crossterm::command"],[1741,"std::io::error"],[1742,"object_store::path"],[1743,"bytes::bytes"],[1744,"core::ops::range"],[1745,"object_store"],[1746,"parquet_format_safe::thrift::varint::decode"],[1747,"core::convert"],[1748,"core::convert"],[1749,"polars_core::schema"],[1750,"polars_core::datatypes::dtype"],[1751,"core::num::nonzero"],[1752,"futures_io::if_std"],[1753,"core::marker"],[1754,"core::marker"],[1755,"polars_arrow::datatypes::schema"],[1756,"core::any"],[1757,"polars_arrow::datatypes::field"],[1758,"polars_arrow::array::growable::structure"],[1759,"polars_arrow::array::struct_::mutable"],[1760,"polars_arrow::bitmap::immutable"],[1761,"polars_arrow::scalar"],[1762,"polars_arrow::array::struct_::iterator"],[1763,"polars_arrow::bitmap::utils::iterator"],[1764,"polars_arrow::bitmap::utils::zip_validity"],[1765,"polars_error"],[1766,"polars_parquet::parquet::metadata::row_metadata"],[1767,"polars_parquet::arrow::read::statistics"],[1768,"parquet_format_safe::parquet_format"],[1769,"parquet_format_safe::parquet_format"],[1770,"polars_parquet::parquet::error"],[1771,"polars_core::series"],[1772,"core::iter::traits::iterator"],[1773,"polars_parquet::arrow::write::file"],[1774,"std::sync::mutex"],[1775,"core::marker"],[1776,"tokio::runtime::task::join"],[1777,"polars_core::datatypes::field"],[1778,"core::marker"]],"i":[0,0,0,0,0,0,3,4,0,0,3,4,3,4,3,4,3,4,0,5,0,4,3,4,3,4,3,4,3,4,4,3,4,3,3,3,4,4,4,5,14,6,3,4,3,4,3,4,3,4,3,4,0,0,0,3,0,14,6,21,3,0,0,0,0,0,4,3,4,3,4,3,4,3,4,3,4,0,3,4,0,0,0,0,29,29,29,29,29,26,26,30,29,26,30,29,29,29,26,30,29,26,30,29,26,30,29,29,29,29,29,26,30,29,26,30,29,29,26,30,29,26,30,29,26,30,26,26,29,26,30,29,26,30,29,26,30,29,26,30,29,26,30,26,30,26,0,0,0,41,42,37,41,42,37,41,37,0,41,41,37,42,37,41,42,37,41,42,42,37,41,37,42,37,42,37,41,42,37,41,37,41,41,41,0,41,42,37,41,42,37,41,42,37,41,42,0,37,42,37,42,41,42,37,41,42,37,41,42,37,41,42,37,41,42,42,57,56,57,0,58,57,59,59,0,56,58,56,56,57,58,57,57,0,0,56,56,57,56,56,56,57,56,56,57,57,59,59,0,59,56,56,57,57,57,56,56,57,56,58,58,56,57,56,57,56,57,57,57,56,36,56,57,58,56,57,58,36,59,56,57,58,36,59,56,57,58,36,36,36,36,56,57,58,36,56,57,58,36,36,59,56,57,58,36,59,56,57,58,36,56,57,58,36,59,56,57,58,36,59,56,57,58,36,36,36,56,56,56,57,57,57,58,58,58,36,56,57,58,36,59,56,57,58,59,56,57,58,36,36,56,57,58,36,59,56,57,58,36,59,56,57,58,36,36,56,57,58,36,56,57,58,36,59,56,57,58,36,59,56,57,58,36,59,56,57,58,36,59,56,57,58,36,36,36,0,0,74,74,0,0,0,0,0,0,73,65,74,0,0,0,65,73,72,73,65,74,64,64,64,64,64,67,70,68,71,64,72,73,65,74,67,70,68,71,64,72,73,65,74,72,73,65,74,72,73,65,74,72,0,72,72,73,67,70,68,71,64,72,73,65,74,67,70,68,71,64,72,73,65,74,72,73,65,74,67,70,70,68,71,71,64,72,73,65,74,72,72,72,73,65,74,72,72,72,73,73,73,65,65,65,74,74,74,64,72,73,65,74,67,70,68,71,64,72,73,65,74,64,64,72,72,73,65,74,72,0,64,72,67,70,68,71,64,72,73,65,74,67,70,68,71,64,72,73,65,74,0,64,72,72,64,65,65,65,67,70,68,71,72,72,64,72,64,72,72,72,72,73,65,74,72,72,72,73,65,74,64,72,67,70,68,71,64,72,73,65,74,67,70,68,71,64,72,73,65,74,72,67,70,68,71,64,72,73,65,74,67,70,68,71,64,72,73,65,74,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,83,0,0,0,83,83,83,0,0,81,82,83,81,79,79,80,81,82,83,79,80,81,82,83,81,82,83,81,82,83,82,82,81,82,83,79,80,81,82,83,79,80,81,82,83,81,82,83,79,80,81,82,83,81,82,83,81,81,81,82,82,82,83,83,83,79,80,82,81,82,83,79,80,81,82,83,81,82,83,79,81,79,81,79,80,81,82,83,79,80,81,82,83,82,81,79,79,82,82,82,82,81,82,83,81,82,81,82,83,79,80,81,82,83,79,80,81,82,83,79,80,81,82,83,79,80,81,82,83,79,79,79,79,79,79,79,79,79,79,80,0,0,0,0,0,0,0,0,0,0,0,0,94,94,91,92,93,94,85,86,86,100,95,85,101,98,86,87,99,91,92,93,94,100,95,85,101,98,86,87,99,91,92,93,94,91,92,93,94,91,92,93,94,93,95,98,99,95,98,99,92,93,94,100,95,85,101,98,86,87,99,91,92,93,94,100,95,85,101,98,86,87,99,91,92,93,94,91,93,94,100,95,85,101,98,86,87,99,91,92,93,94,91,93,94,93,93,93,94,94,94,98,99,100,85,101,86,87,100,91,93,94,100,95,85,101,98,86,87,99,91,92,93,94,95,91,93,94,100,95,85,101,98,86,87,99,91,92,93,94,100,95,85,101,98,86,87,99,91,92,93,94,93,91,100,95,100,85,101,98,86,99,86,100,85,91,93,94,100,85,91,92,93,94,100,95,85,101,98,86,87,99,91,92,93,94,100,95,85,101,98,86,87,99,91,92,93,94,100,95,85,101,98,86,87,99,91,92,93,94,100,95,85,101,98,86,87,99,91,92,93,94,100,85,101,98,86,99,98,99,100,85,101,86,92,100,85,92,100,85,92,92,87,0,107,0,107,0,0,0,103,107,104,106,105,103,107,104,106,105,103,103,103,103,107,104,106,105,103,107,104,106,105,103,103,107,104,106,105,103,103,103,103,103,104,105,103,107,104,106,105,103,103,105,107,104,106,105,103,107,104,106,105,103,103,104,106,105,103,105,103,107,104,106,105,103,107,104,106,105,103,107,104,106,105,103,107,104,106,105,103,105,105,104,105,105,105,105,106,76,76,0,76,0,76,76,76,76,76,76,76,76,76,76,66,66,76,76,76,76,0,0,0,0,109,109,109,109,114,109,114,109,109,109,109,109,114,109,114,109,114,109,109,109,109,114,109,114,109,109,109,114,109,114,114,109,114,109,109,109,109,109,114,114,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,114,109,114,109,109,114,109,109,109,109,109,114,109,114,114,114,114,114,114,114,114,109,109,0,0,0,0,0,0,123,126,123,126,123,123,123,123,123,123,126,123,126,123,0,126,126,123,126,126,123,126,126,123,126,123,126,123,123,123,123,126,126,126,123,123,123,123,123,126,123,123,126,123,126,123,123,126,123,136,0,136,136,0,0,0,0,136,135,136,132,134,133,132,134,135,136,133,132,134,135,136,135,136,135,136,136,133,132,134,135,136,133,132,134,135,136,135,136,133,132,134,135,136,135,136,135,135,135,136,136,136,132,134,133,135,136,133,132,134,135,136,134,132,134,135,136,133,132,134,135,136,133,132,134,135,136,133,133,133,135,0,133,132,133,132,134,135,132,134,133,132,134,135,136,132,132,134,135,136,133,132,134,135,136,133,132,134,135,136,133,132,134,135,136,132,134,135,133,132,134,135,136,132,132,134,132,134,132,134,132,134,132,134,132,0,142,0,142,0,142,142,0,0,0,0,142,142,142,0,141,142,143,144,145,139,140,139,141,142,143,144,145,140,139,141,142,143,144,145,141,142,143,144,145,141,142,143,144,145,141,141,141,142,140,139,141,142,143,144,145,140,139,141,142,143,144,145,141,142,143,144,145,140,139,141,142,143,144,145,140,141,142,143,144,145,141,141,141,142,142,142,143,143,143,144,144,144,145,145,145,140,139,141,142,143,144,145,140,139,141,142,143,144,145,140,141,142,143,144,145,140,139,141,142,143,144,145,140,139,141,142,143,144,145,141,139,141,141,142,143,144,145,139,141,141,142,143,144,145,140,139,141,142,143,144,145,140,139,141,142,143,144,145,143,144,145,140,139,141,142,143,144,145,140,139,141,142,143,144,145,139,139,139,139,140,140,0,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,0,0,155,155,155,155,155,155,155,155,0,155,155,157,155,155,155,0,155,155,0,0,0,0,0,0,78,161,160,161,160,160,161,160,161,160,161,160,161,160,161,78,161,160,161,160,161,161,161,161,161,160,161,160,161,160,161,160,161,160,160,161,160,159,161,161,161,161,160,161,160,161,160,161,160,0,0,0,14,6,14,6,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0],"f":"``````{{cb}d{}}0``{ce{}{}}000{ff}{hh}{{ce}d{}{}}0`{{jc}{{n{l}}}A`}`{{}h}{Abc{}}000{c{{Ad{f}}}Af}{c{{Ad{h}}}Af}{Abd}0`{{ff}Ah}{{hh}Ah}{{ce}Ah{}{}}00000{jAj}{Al{{B`{An}}}}{{lAn}{{B`{d}}}}{{fBb}Bd}{{hBb}Bd}{cc{}}0{{fc}dBf}{{hc}dBf}{{}Ab}0{ce{}{}}0`````{cAlBh}{clA`}{Bj{{B`{{Bn{Bl}}}}}}```````{{fc}AdC`}{{hc}AdC`}55{c{{Ad{e}}}{}{}}000{cCb{}}0`77````````{{cb}d{}}{{{Cd{c}}}{{B`{Cf}}}{BhCh}}999999{CjCj}{{ce}d{}{}}{Abc{}}00000{Abd}00{{CjCj}Ah}{{ce}Ah{}{}}00{{{Cd{c}}}{{B`{An}}}{BhCh}}{{{Cl{c}}An}{{B`{d}}}A`}{{CjBb}{{Ad{dCn}}}}{cc{}}00{{Cjc}dBf}{{}Ab}00{ce{}{}}00{c{{Cd{c}}}{BhCh}}{c{{Cl{c}}}A`}{{{Cd{c}}}{{B`{D`}}}{BhCh}}{{{Cd{c}}Ah}{{Cd{c}}}{BhCh}}4{c{{Ad{e}}}{}{}}00000{cCb{}}00666{{{Cd{c}}{Bn{{Dd{Db}}}}}{{Cd{c}}}{BhCh}}{{{Cl{c}}{Bn{Cj}}}{{Cl{c}}}A`}{{{Cd{c}}{Bn{Ab}}}{{Cd{c}}}{BhCh}}{{{Cl{c}}Db}{{Cl{c}}}A`}{{{Cd{c}}{Bn{{Dd{Ab}}}}}{{Cd{c}}}{BhCh}}```{{cb}d{}}<<<<<<`{{Df{Bn{Dh}}}{{B`{{E`{Dj{Dn{Dl}}}}}}}}{EbEb}{{ce}d{}{}}{{}Dj}{Abc{}}00000{Edd}{Abd}00{{DjDj}Ah}{{ce}{{Ad{gEf}}}{}Eh{}}`{Ed{{Ej{d}}}}{{DjBb}Bd}{{EbBb}Bd}{cc{}}00{El{{B`{Dj}}}}{{EbEn}{{B`{F`}}}}{{EbEn{Fb{Ab}}}{{B`{F`}}}}{{EbEn{Fd{{Fb{Ab}}}}}{{B`{{Dd{F`}}}}}}{{Df{Bn{Dh}}}{{B`{{Dd{Db}}}}}}{{EbEn}{{B`{Ff}}}}{{}Ab}00{ce{}{}}00{{Df{Bn{Dh}}}{{B`{Ed}}}}{Df{{B`{Dj}}}}{{{Dn{Dl}}}Eb}{{{Dn{Dl}}En}{{B`{Ed}}}}``{{ce}{{Ad{gEf}}}{}Eh{}}`{{ci}{{Ad{gEf}}}{}{}{}{{Fj{e}{{Fh{g}}}}}}6{c{{Ad{e}}}{}{}}00000{cCb{}}00888{{Ed{Fd{Fl}}}{{Ej{Ab}}}}{{ce}{{Ad{AbEf}}}{}Fn}``````````````````````````````````````````````````````{{cb}d{}}000{G`Df}{GbDf}{GdDf}>>>>>>>>>>{{DhDf}{{B`{{`{Dl}}}}}}00{DhDh}{G`G`}{GbGb}{GdGd}{{ce}d{}{}}000{{}Dh}{Abc{}}000000000{c{{Ad{Dh}}}Af}{c{{Ad{G`}}}Af}{c{{Ad{Gb}}}Af}{c{{Ad{Gd}}}Af}{Abd}0000{{DhDh}Ah}{{GfGf}Ah}{{G`G`}Ah}{{GbGb}Ah}{{GdGd}Ah}{{ce}Ah{}{}}00000000000{{DhBb}Bd}{{G`Bb}{{Ad{dCn}}}}{{GbBb}{{Ad{dCn}}}}{{GdBb}{{Ad{dCn}}}}{cc{}}0000{Df{{Ad{Gfc}}}{}}{Df{{Ad{G`}}}}{Df{{Ad{Gb}}}}{Df{{Ad{Gd}}}}{{Dfg}{{B`{Dh}}}{{Gh{Df}}}{{Gj{Db}}}{{Gn{}{{Gl{{E`{ce}}}}}}}}{{Dhc}dBf}{{G`c}dBf}{{Gbc}dBf}{{Gdc}dBf}{{}Ab}0000{ce{}{}}0000`{{Dhc}AdC`}{{G`c}AdC`}{{Gbc}AdC`}{{Gdc}AdC`}4444{c{{Ad{e}}}{}{}}000000000{cCb{}}000066666{{Dhe}Dh{{Gj{Db}}}{{Gn{}{{Gl{{E`{G`c}}}}}}}}{{Dhe}Dh{{Gj{Db}}}{{Gn{}{{Gl{{E`{Gbc}}}}}}}}{{Dhe}Dh{{Gj{Db}}}{{Gn{}{{Gl{{E`{Gdc}}}}}}}}``````````````````{{cb}d{}}000{{{H`{c}}{Bn{Hb}}}{{H`{c}}}Hd}{{{H`{c}}}{{B`{Hf}}}Hd}{{{H`{c}}}{{B`{Hh}}}Hd}{{{H`{{n{Hd}}}}{Bn{Hj}}}{{B`{Hl}}}}{{{H`{{n{Hd}}}}{Bn{Hj}}}{{B`{Hn}}}}??????????????????{I`I`}{IbIb}{HbHb}{IdId}{{ce}d{}{}}000`{{AjFl{Bn{Fl}}{Bn{Hb}}FlAh}{{B`{Ab}}}}`{{}I`}{{}Ib}{Abc{}}00000000000000000{c{{Ad{I`}}}Af}{c{{Ad{Ib}}}Af}{c{{Ad{Hb}}}Af}{c{{Ad{Id}}}Af}{Abd}{Hld}11{Hnd}222222``{{I`I`}Ah}{{IbIb}Ah}{{HbHb}Ah}{{IdId}Ah}{{ce}Ah{}{}}00000000000{{{H`{c}}}{{B`{An}}}Hd}{{I`Bb}Bd}{{IbBb}Bd}{{HbBb}Bd}{{IdBb}Bd}{cc{}}00000000{c{{B`{{H`{If}}}}}{{Gj{Aj}}}}{{{H`{c}}Ah}{{H`{c}}}Hd}`{{I`c}dBf}{{Ibc}dBf}{{Hbc}dBf}{{Idc}dBf}`{{IhFl{Bn{Ab}}Ah{Bn{D`}}AbAb{Bn{Hb}}{Bn{Fl}}Fl{Bn{Id}}AhAh{Bn{Ab}}Ah}{{B`{{E`{D`AbAb}}}}}}{{{H`{c}}{Bn{Ab}}}{{H`{c}}}Hd}`{{}Ab}00000000{ce{}{}}00000000{{{Fd{Fl}}}Ah}9``{c{{H`{c}}}Hd}{DfHb}{DbHb}{FlHb}{{HfAb}{{B`{{Bn{{Dd{An}}}}}}}}{{HlAb}{{B`{{Bn{{Dd{An}}}}}}}}{{HhAb}{{B`{{Bn{{Dd{An}}}}}}}}{{HnAb}{{B`{{Bn{{Dd{An}}}}}}}}``{{{H`{c}}Ah}{{H`{c}}}Hd}`{{{H`{c}}Ab}{{H`{c}}}Hd}```{{I`c}AdC`}{{Ibc}AdC`}{{Hbc}AdC`}{{Idc}AdC`}``????5`{c{{Ad{e}}}{}{}}00000000000000000`{cCb{}}00000000{ce{}{}}000000007{{{H`{c}}{Bn{{Dd{Db}}}}}{{H`{c}}}Hd}{{{H`{c}}{Bn{Df}}}{{H`{c}}}Hd}:{{{H`{c}}{Bn{Hj}}}{{H`{c}}}Hd}{{{H`{c}}{Bn{{Fd{Ij}}}}}{{H`{c}}}Hd}{{{H`{c}}Ib}{{H`{c}}}Hd}{{{H`{c}}Fl}{{H`{c}}}Hd}>>{{{H`{c}}{Bn{Ab}}}{{H`{c}}}Hd}0{{{H`{c}}{Bn{Id}}}{{H`{c}}}Hd}{{{H`{c}}I`}{{H`{c}}}Hd}{{{H`{c}}{Bn{e}}}{{H`{c}}}Hd{{Gj{Aj}}}}{{{H`{c}}{Bn{{Dn{Il}}}}}{{H`{c}}}Hd}{{{H`{c}}{Bn{{Dd{Ab}}}}}{{H`{c}}}Hd}{{{H`{c}}{Bn{Fl}}}{{H`{c}}}Hd}{{{H`{c}}Ah}{{H`{c}}}Hd}{{{H`{c}}{Bn{f}}}{{H`{c}}}Hd}<9{{{H`{c}}Ab}{{H`{c}}}Hd}02`````````{{cb}d{}}00`{{{In{c}}D`}{{B`{{J`{c}}}}}A`}{ce{}{}}000000000{JbJb}{JdJd}{JfJf}{{ce}d{}{}}00``{{}Jb}{{}Jd}{{}Jf}{Abc{}}000000000{c{{Ad{Jb}}}Af}{c{{Ad{Jd}}}Af}{c{{Ad{Jf}}}Af}{Abd}0000{{JbJb}Ah}{{JdJd}Ah}{{JfJf}Ah}{{ce}Ah{}{}}00000000{{{In{c}}An}{{B`{d}}}A`}{{{J`{c}}}{{B`{d}}}A`}`{{JbBb}Bd}{{JdBb}Bd}{{JfBb}Bd}{cc{}}0000{{Jbc}dBf}{{Jdc}dBf}{{Jfc}dBf}{{{In{c}}Ah}{{In{c}}}A`}`0`{{}Ab}0000{ce{}{}}0000``{{{In{c}}Ab}{{In{c}}}A`}{c{{In{c}}}A`}````{{Jbc}AdC`}{{Jdc}AdC`}{{Jfc}AdC`}``555{c{{Ad{e}}}{}{}}000000000{cCb{}}000077777{{{In{c}}Jh}{{In{c}}}A`}{{{In{c}}{Bn{Db}}}{{In{c}}}A`}0{{{In{c}}{Bn{Ab}}}{{In{c}}}A`}{{{In{c}}Db}{{In{c}}}A`}0{{{In{c}}Fl}{{In{c}}}A`}{{{In{c}}Jf}{{In{c}}}A`}14{{{J`{c}}An}{{B`{d}}}A`}``````````````{{cb}d{}}000{{{Jj{c}}}{{B`{Cf}}}Bh}{{{Jl{c}}D`}{{B`{{Jn{c}}}}}A`}{{{Jl{c}}D`}{{B`{{`{c}}}}}{K`KbKd}}{ce{}{}}00000000000000000000000{KfKf}{KhKh}{KjKj}{KlKl}{{ce}d{}{}}000`{{Kn{Bn{L`}}}{{B`{Lb}}}}{{Ldc}{{n{l}}}A`}{{Lfc}{{n{l}}}A`}{{Kn{Bn{L`}}KhAh}{{B`{An}}}}{{}Ld}{{}Lf}{{}Kh}{{}Kj}{{}Kl}{Abc{}}00000000000000000000000{c{{Ad{Kf}}}Af}{c{{Ad{Kj}}}Af}{c{{Ad{Kl}}}Af}{Abd}00000000000{{KfKf}Ah}{{KjKj}Ah}{{KlKl}Ah}{{ce}Ah{}{}}00000{LdAj}{LfAj}{{{Lh{c}}}{{B`{An}}}Hd}{{{Jj{c}}}{{B`{An}}}Bh}{{{Lj{c}}An}{{B`{d}}}A`}{{{Jl{c}}An}{{B`{d}}}A`}{{{Jn{c}}}{{B`{d}}}A`}{{{Lh{c}}{Bn{{Dn{Il}}}}Ah}{{B`{An}}}Hd}{{KfBb}Bd}{{KjBb}Bd}{{KlBb}Bd}{cc{}}00000000000{{Df{Bn{Dh}}}{{B`{Kn}}}}{{Kfc}dBf}{{Kjc}dBf}{{Klc}dBf}{{}Ab}00000000000{ce{}{}}00000000000``{{{Lh{c}}Ah}{{Lh{c}}}Hd}{Kn{{B`{L`}}}}{c{{Lh{c}}}Hd}{c{{Jj{c}}}Bh}{c{{Lj{c}}}A`}{{}Ld}{c{{Jl{c}}}A`}{{}Lf}{c{{Jl{c}}}{K`KbKd}}{{{Lh{c}}}{{B`{Ll}}}Hd}{{{Jj{c}}}{{B`{D`}}}Bh}{{Kfc}AdC`}{{Kjc}AdC`}{{Klc}AdC`}={{{Jj{c}}Ah}{{Jj{c}}}Bh}????{c{{Ad{e}}}{}{}}00000000000000000000000{cCb{}}00000000000{ce{}{}}00000000000{{{Lh{c}}{Bn{{Dd{Db}}}}}{{Lh{c}}}Hd}{{{Jj{c}}{Bn{{Dd{Db}}}}}{{Jj{c}}}Bh}{{{Lj{c}}{Bn{Kl}}}{{Lj{c}}}{}}{{Ld{Bn{Kl}}}Ld}{{{Jl{c}}{Bn{Kl}}}{{Jl{c}}}A`}{{Lf{Bn{Kl}}}Lf}{{LdAj}Ld}{{LfAj}Lf}{{{Lh{c}}{Bn{Ab}}}{{Lh{c}}}Hd}{{{Jj{c}}{Bn{Ab}}}{{Jj{c}}}Bh}{{{Lj{c}}Ah}{{Lj{c}}}{}}{{{Jl{c}}Ah}{{Jl{c}}}A`}{{Khc}Kh{{Gj{{Bn{{Dn{Il}}}}}}}}{{{Lh{c}}{Bn{{Dd{Ab}}}}}{{Lh{c}}}Hd}{{{Jj{c}}{Bn{{Dd{Ab}}}}}{{Jj{c}}}Bh}{{Khc}Kh{{Gj{{Bn{{Dd{Db}}}}}}}}{{{Lh{c}}{Bn{f}}}{{Lh{c}}}Hd}{{{Jj{c}}{Bn{f}}}{{Jj{c}}}Bh}{{Khc}Kh{{Gj{{Bn{f}}}}}}{{Khc}Kh{{Gj{{Bn{Ab}}}}}}{{{Jn{c}}An}{{B`{d}}}A`}```````{{cb}d{}}{ce{}{}}000000000{LnLn}{{ce}d{}{}}{{}Ln}{Abc{}}000000000{c{{Ad{Ln}}}Af}{Abd}0000{{LnLn}Ah}{{ce}Ah{}{}}00{{{M`{c}}An}{{B`{d}}}A`}{{{Mb{c}}}{{B`{An}}}Hd}{{LnBb}Bd}{cc{}}0000{{Lnc}dBf}{{{Mb{c}}{Bn{Ab}}}{{Mb{c}}}Hd}{{}Ab}0000?????`{c{{M`{c}}}A`}{c{{Md{c}}}A`}{c{{Mb{c}}}Hd}{{Lnc}AdC`}{{{Mb{c}}Ah}{{Mb{c}}}Hd}{ce{}{}}{c{{Ad{e}}}{}{}}000000000{cCb{}}000022222{{{Mb{c}}Jh}{{Mb{c}}}Hd}4{{{M`{c}}Mf}{{M`{c}}}A`}{{{Mb{c}}Mf}{{Mb{c}}}Hd}{{{Mb{c}}{Bn{{Dd{Db}}}}}{{Mb{c}}}Hd}{{{Mb{c}}Hj}{{Mb{c}}}Hd}{{{Mb{c}}D`}{{Mb{c}}}Hd}{{{Md{c}}An}{{B`{d}}}A`}`````99{Abc{}}{Ih{{Fd{Fl}}}}1{Abd}{cIhHd}{cc{}}{{}Ab}?{Hd{{Bn{{Fd{Fl}}}}}}{Hd{{Bn{If}}}}{c{{Ad{e}}}{}{}}0{cCb{}}{ce{}{}}`{{c{Bn{Ab}}}{{B`{D`}}}Mh}``{{cb}d{}}{Mj{{Dn{Ml}}}}{MjMn}04444{Mj{{n{Ml}}}}{MjMj}{{ce}d{}{}}{MjN`}{Abc{}}000{Abd}0{{MjMl}Ah}{{MjMj}Ah}{Mj{{Fd{Nb}}}}{{{Nd{c}}}{{B`{An}}}Hd}{{MjBb}{{Ad{dCn}}}}{cc{}}{NfMj}1{NhMj}{c{{B`{{Nd{If}}}}}{{Gj{Aj}}}}{N`{{Fd{Nb}}}}{{{Nd{c}}{Bn{Ab}}}{{Nd{c}}}Hd}{{}Ab}0{ce{}{}}0{Mj{{E`{{Dd{Nb}}{Dd{{n{Ml}}}}{Bn{Nj}}}}}}{Mj}{Mj{{Ob{{Dd{{n{Nl}}}}NnO`}}}}{MjAb}{{{Nd{c}}Ah}{{Nd{c}}}Hd}{c{{Nd{c}}}Hd}{{N`{Dd{{n{Ml}}}}{Bn{Nj}}}Mj}{N`Mj}{{N`Ab}Mj}{{Mj{Bn{Nj}}}d}{{MjAbAb}d}0{{cAbAb}e{}{}}011{{MjAbAb}Mj}0{Mj{{Bn{Nj}}}}{Mj{{n{Ml}}}}?{c{{Ad{e}}}{}{}}000{{N`{Dd{{n{Ml}}}}{Bn{Nj}}}{{Ad{MjOd}}}}{cCb{}}044{Mj{{Fd{{n{Ml}}}}}}{MjNn}{ce{}{}}0{{{Nd{c}}{Bn{Jh}}}{{Nd{c}}}Hd}{{{Nd{c}}Ah}{{Nd{c}}}Hd}{{{Nd{c}}{Bn{Ab}}}{{Nd{c}}}Hd}0{{{Nd{c}}{Bn{e}}}{{Nd{c}}}Hd{{Gj{Aj}}}}2{{{Nd{c}}Hj}{{Nd{c}}}Hd}{{{Nd{c}}D`}{{Nd{c}}}Hd}{{Mj{Bn{Nj}}}Mj}{{Mj{Bn{Nj}}}{{n{Ml}}}}``````{{cb}d{}}9999{OfOf}{{ce}d{}{}}{{OfAb}Oh}``{Abc{}}000{{NbOj}{{Ad{OlOd}}}}`{Abd}0{{OlOl}Ah}{{OlBb}{{Ad{dCn}}}}{{OfBb}{{Ad{dCn}}}}{OnOl}{cc{}}0{{}Ab}0{ce{}{}}0{OfA@`}{Of{{Bn{{Dd{A@b}}}}}}``````{OfA@d}`3{c{{Ad{e}}}{}{}}0{A@`{{Ad{OfA@f}}}}11{cCb{}}0`66`````````{{cb}d{}}0{{{A@h{c}}Ab}{{B`{A@j}}}Hd}{{A@lAb}{{B`{A@j}}}}9999999999{A@nA@n}{AA`AA`}{{ce}d{}{}}0{{}AA`}{Abc{}}000000000{c{{Ad{A@n}}}Af}{c{{Ad{AA`}}}Af}{Abd}0000{{A@nA@n}Ah}{{AA`AA`}Ah}{{ce}Ah{}{}}00000{{{A@h{c}}}{{B`{An}}}Hd}{A@l{{B`{An}}}}{{A@jAb}Ah}{{A@nBb}Bd}{{AA`Bb}Bd}{cc{}}0000{{Df{Bn{Dh}}{Bn{Ll}}{Bn{AAb}}}{{B`{A@l}}}}{{{A@h{c}}}{{B`{AAb}}}Hd}{A@l{{B`{AAb}}}}{{A@nc}dBf}{{AA`c}dBf}{{}Ab}0000{ce{}{}}0000{A@jAh}`0`{{{Bn{{Fd{Ab}}}}Cf{Bn{{Fd{AAd}}}}{Bn{f}}}An}`{c{{A@h{c}}}Hd}{{A@jAb}{{B`{{Bn{{Dd{An}}}}}}}}{{{A@h{c}}}{{B`{Ab}}}Hd}{A@l{{B`{Ab}}}}`{{{A@h{c}}AA`}{{A@h{c}}}Hd}{{A@lAA`}A@l}{A@jLl}{{{A@h{c}}}{{B`{Ll}}}Hd}{A@l{{B`{Ll}}}}{{A@nc}AdC`}{{AA`c}AdC`}{{{A@h{c}}Ah}{{A@h{c}}}Hd}0{{A@lAh}A@l}??{c{{Ad{e}}}{}{}}000000000{cCb{}}000032`{ce{}{}}0000{{{A@h{c}}{Bn{{Dd{Db}}}}}{{A@h{c}}}Hd}{{{A@h{c}}{Bn{{Dd{AAd}}}}}{{A@h{c}}}Hd}{{A@l{Bn{{Dd{AAd}}}}}A@l}{{{A@h{c}}{Bn{Ab}}}{{A@h{c}}}Hd}{{A@l{Bn{Ab}}}A@l}{{{A@h{c}}{Bn{{Dn{Il}}}}}{{A@h{c}}}Hd}{{A@l{Bn{{Dn{Il}}}}}A@l}{{{A@h{c}}{Bn{{Dd{Ab}}}}}{{A@h{c}}}Hd}{{A@l{Bn{{Dd{Ab}}}}}A@l}{{{A@h{c}}{Bn{f}}}{{A@h{c}}}Hd}{{A@l{Bn{f}}}A@l}{{{A@h{c}}{Bn{Ll}}}{{A@h{c}}}Hd}```````````````{{cb}d{}}0000{{{AAf{c}}D`}{{B`{{AAh{c}}}}}A`}>>>>>>>>>>>>>>{AAjAAj}{AAlAAl}{AAnAAn}{AB`AB`}{ABbABb}{{ce}d{}{}}0000``{{}AAj}{{}AAl}{Abc{}}0000000000000{c{{Ad{AAj}}}Af}{c{{Ad{AAl}}}Af}{c{{Ad{AAn}}}Af}{c{{Ad{AB`}}}Af}{c{{Ad{ABb}}}Af}{Abd}000000{{{AAh{c}}An}{{`{{ABf{}{{Gl{{B`{{ABd{Od}}}}}}}}}}}A`}{{AAjAAj}Ah}{{AAlAAl}Ah}{{AAnAAn}Ah}{{AB`AB`}Ah}{{ABbABb}Ah}{{ce}Ah{}{}}00000000000000{{{AAh{c}}}{{B`{ABh}}}A`}{{{AAf{c}}An}{{B`{ABh}}}A`}{{AAjBb}Bd}{{AAlBb}Bd}{{AAnBb}Bd}{{AB`Bb}Bd}{{ABbBb}Bd}{cc{}}000000{{{AAh{c}}}{{ABl{{ABj{c}}}}}A`}{{AAjc}dBf}{{AAlc}dBf}{{AAnc}dBf}{{AB`c}dBf}{{ABbc}dBf}{{}Ab}000000{ce{}{}}000000`{c{{AAf{c}}}{A`A`}}`{{AAjc}AdC`}{{AAlc}AdC`}{{AAnc}AdC`}{{AB`c}AdC`}{{ABbc}AdC`}{{{AAf{c}}Ah}{{AAf{c}}}A`}`77777{c{{Ad{e}}}{}{}}0000000000000{Fl{{B`{AAn}}}}{ABn{{B`{AB`}}}}{AC`{{B`{ABb}}}}{cCb{}}000000<<<<<<<{{{AAf{c}}AAl}{{AAf{c}}}A`}{{{AAf{c}}{Bn{Ab}}}{{AAf{c}}}A`}07{{{AAh{c}}An}{{B`{d}}}A`}{{{AAh{c}}{Dd{{ABd{Od}}}}}{{B`{d}}}A`}`{ce{}{}}0{Abc{}}0{Abd}{{{ACb{c}}An}{{B`{d}}}{jKdACd}}{cc{}}{{}Ab}5{{cei}{{ACb{c}}}{jKdACd}{{Gj{Aj}}}{{Gh{Df}}}{{Gn{}{{Gl{g}}}}}}??;6{{{ACb{c}}Ah}{{ACb{c}}}{jKdACd}}``{{ACfc}{}ACh}{{ACfc}{}{AChKd}}998875{{}ACf}5:{ACjABh}{{ACfc}ACl{AChKd}}{c{{Ad{e}}}{}{}}0{{ABne}{}ACh{{Fj{}{{Fh{c}}}}}}{cCb{}}?1````{{An{Bn{Il}}Ah}{{B`{d}}}}{Il{{Bn{ACn}}}}{ce{}{}}000{AD`{{Fd{ADb}}}}{Abc{}}000{c{{Ad{ADb}}}Af}{c{{Ad{AD`}}}Af}{Abd}0{ADbIj}{{IlAn}{{B`{AAd}}}}{{ADbBb}Bd}{{AD`Bb}Bd}{cc{}}0{AAdADb}{ADdADb}{ADb{{Bn{AAd}}}}00{{AD`Df}{{B`{ADb}}}}{{}Ab}0??{{ADd{Bn{AAd}}{Bn{AAd}}{Bn{AAd}}}ADb}{{Hj{Dd{ADb}}{Bn{Ab}}}AD`}{ADb{{Bn{Ab}}}}{AD`{{Bn{Ab}}}}{AD`Hj}{{ADbc}AdC`}{{AD`c}AdC`}{{ACnAD`}{{B`{Ah}}}}:::{c{{Ad{e}}}{}{}}000{cCb{}}0{ce{}{}}0```{Al{{B`{An}}}}{{lAn}{{B`{d}}}}{cAlBh}{clA`}{{AlAh}Al}00````{{CfCf{Bn{{Fd{Db}}}}Df}{{B`{d}}}}{{D`D`{Bn{{Fd{Db}}}}Df}{{B`{d}}}}0{c{{B`{Ih}}}{BhHdADf}}{{cAb}{{Dd{{E`{AbAb}}}}}{{ABf{}{{Gl{Ab}}}}}}{cAh{{Gh{ADh}}}}{{{Bn{{Fd{Db}}}}D`{Bn{{Fd{AAd}}}}Ah}{{Bn{{Dd{Ab}}}}}}{ADhAj}","D":"CJl","p":[[5,"Private",1719],[1,"unit"],[5,"RowIndex",0],[5,"HiveOptions",0],[10,"WriterFactory",0],[10,"SerWriter",1697],[5,"Box",1720],[10,"Write",1721],[1,"usize"],[6,"Result",1722],[10,"Deserializer",1723],[1,"bool"],[5,"PathBuf",1724],[10,"SerReader",1697],[5,"DataFrame",1725],[8,"PolarsResult",1726],[5,"Formatter",1727],[8,"Result",1727],[10,"Hasher",1728],[10,"Read",1721],[10,"ArrowReader",0],[8,"ArrowChunk",1729],[6,"Option",1730],[10,"Serializer",1731],[5,"TypeId",1732],[5,"AvroReader",80],[5,"ArrowSchema",1733],[10,"Seek",1721],[6,"AvroCompression",80],[5,"AvroWriter",80],[5,"Error",1727],[5,"Schema",1734],[5,"String",1735],[5,"Vec",1736],[1,"str"],[5,"CloudOptions",216],[5,"CloudLocation",146],[10,"ObjectStore",1737],[5,"Arc",1738],[1,"tuple"],[5,"PolarsObjectStore",146],[5,"CloudWriter",146],[5,"Error",1739],[10,"Command",1740],[8,"Result",1739],[5,"Url",1741],[5,"Path",1742],[5,"Bytes",1743],[5,"Range",1744],[1,"slice"],[5,"ObjectMeta",1737],[17,"Output"],[10,"FnOnce",1745],[1,"u8"],[10,"VarInt",1746],[6,"AmazonS3ConfigKey",216],[6,"AzureConfigKey",216],[6,"GoogleConfigKey",216],[6,"CloudType",216],[10,"AsRef",1747],[10,"Into",1747],[17,"Item"],[10,"IntoIterator",1748],[5,"CsvReader",397],[6,"CommentPrefix",397],[10,"MmapBytesReader",1130],[5,"BatchedCsvReaderMmap",397],[5,"BatchedCsvReaderRead",397],[8,"SchemaRef",1734],[5,"OwnedBatchedCsvReaderMmap",397],[5,"OwnedBatchedCsvReader",397],[5,"CsvReaderOptions",397],[6,"CsvEncoding",397],[6,"NullValues",397],[5,"File",1749],[6,"ReaderBytes",1130],[6,"DataType",1750],[10,"PhysicalIoExpr",1643],[5,"CsvWriter",641],[5,"BatchedWriter",641],[5,"CsvWriterOptions",641],[5,"SerializeOptions",641],[6,"QuoteStyle",641],[8,"NonZeroUsize",1751],[5,"IpcStreamReader",781],[5,"IpcWriter",781],[5,"BatchedWriter",781],[10,"AsyncWrite",1752],[10,"Unpin",1753],[10,"Send",1753],[5,"IpcScanOptions",781],[5,"IpcReadOptions",781],[5,"IpcWriterOptions",781],[6,"IpcCompression",781],[5,"IpcReaderAsync",781],[5,"FileMetadata",1754],[1,"i64"],[5,"IpcStreamWriterOption",781],[5,"IpcWriterOption",781],[5,"IpcReader",781],[5,"IpcStreamWriter",781],[8,"ArrowSchemaRef",1733],[5,"JsonWriterOptions",1034],[5,"JsonWriter",1034],[5,"JsonReader",1034],[5,"BatchedWriter",1034],[6,"JsonFormat",1034],[10,"BufRead",1721],[5,"StructArray",1153],[10,"Array",1755],[10,"Any",1732],[6,"ArrowDataType",1756],[5,"Field",1757],[5,"JsonLineReader",1153],[5,"GrowableStruct",1758],[5,"MutableStructArray",1759],[5,"Bitmap",1760],[10,"Scalar",1761],[5,"StructValueIter",1762],[5,"BitmapIter",1763],[6,"ZipValidity",1764],[6,"PolarsError",1726],[5,"FileMetaData",1236],[6,"ColumnOrder",1765],[5,"RowGroupMetaData",1766],[5,"ParquetStatistics",1236],[5,"MutableStatistics",1767],[5,"FileMetaData",1768],[5,"KeyValue",1768],[5,"SchemaDescriptor",1769],[6,"Error",1770],[5,"ParquetReader",1288],[5,"BatchedParquetReader",1288],[5,"ParquetAsyncReader",1288],[5,"ParquetOptions",1288],[6,"ParallelStrategy",1288],[8,"FileMetaDataRef",1236],[5,"Series",1771],[5,"ParquetWriter",1424],[5,"BatchedWriter",1424],[5,"ParquetWriteOptions",1424],[6,"ParquetCompression",1424],[5,"GzipLevel",1424],[5,"BrotliLevel",1424],[5,"ZstdLevel",1424],[8,"RowGroupIter",1424],[10,"Iterator",1772],[1,"u64"],[5,"FileWriter",1773],[5,"Mutex",1774],[1,"u32"],[1,"i32"],[5,"PartitionedWriter",1606],[10,"Sync",1753],[5,"RuntimeManager",1622],[10,"Future",1775],[10,"GetSize",1622],[5,"JoinHandle",1776],[10,"StatsEvaluator",1643],[5,"BatchStats",1643],[5,"ColumnStats",1643],[5,"Field",1777],[10,"Sized",1753],[5,"Path",1724]],"b":[[1173,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[1174,"impl-PartialEq-for-StructArray"],[1179,"impl-From%3CGrowableStruct%3C\'a%3E%3E-for-StructArray"],[1181,"impl-From%3CMutableStructArray%3E-for-StructArray"],[1199,"impl-Array-for-StructArray"],[1200,"impl-StructArray"],[1203,"impl-Array-for-StructArray"],[1204,"impl-StructArray"],[1217,"impl-StructArray"],[1218,"impl-Array-for-StructArray"],[1231,"impl-StructArray"],[1232,"impl-Array-for-StructArray"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAOEEoAAAAAEAAwAPABQAAAAWABIAKgACAC8AAwA1AAAANwACADsAAgBAABAAWQAAAFsAFwB2AAMAfQABAIAADQCRAAAAlgAGAJ8ADQCvAAIAtQADALsAAgDDAAAAxQAAAMoADgDfAAEA6wAAAPcAAQD6AAAADwEQACMBMABZAQMAXgEIAGwBHACQAQMAlQEAAJkBAgCeAQMAowEeAMMBNQD6AQMACQIFABECCQAmAgEALAIBAC8CAgAzAgAANQIMAEMCJQB4AgAAgwIAAIsCFACiAiEAxgICAM4CAgDSAgAA1AIFAOACAgDnAgMA7AIWAA4DAAAQAwAAEwMAABYDAAAYAwEAHAMDACEDIQBEAz4AhAMDAJQDDwCxAwAAswMHAL0DOAAABAIABQQAAAgEAQALBAAAEQQjADYEAAA8BAAAPgQEAEoEGABlBAEAawQBAG4ECAB4BAAAegQIAIQEAACGBAUAjQQKAJkEAQCcBAAAngQAAKEEAgCnBAAAqQQAALAEAACyBAIAuQQFAMAEAQDDBAAAxgQBAMoEBQDRBAAA1gQAANgEBgDiBAMA6AQFAPAEAQD+BAIAAgUDAAcFAQAKBQAADQUAAA8FAAASBTAASAUJAFcFAABZBQMAXgUAAGAFAQBjBQEAZgUCAGoFEgB/BQUAhgUBAIkFAgCNBQAAjwUAAJEFAQCUBQAAlgUBAJkFAACbBQMAoAUdAMAFMADzBQQA/wUMABYGBAAdBiMARgYAAEgGBQBPBgAAUQYEAFcGAgBbBgQAYQYBAGQGAABmBgUAbgYCAHIGAwB3BgcAgQYBAIsGAQCUBgIAmgYKAKYGAACoBgAArAYDALIGAQC2BgEA"}],\
["polars_lazy",{"t":"CQCCCCPPGPPPPPPPPPPPPFPPPPPKPGPPPGFPPFFPPPPPPPPPPPPPPFPPPPPPFPPPPPPPPGPPPGKFPFIPPPPPPPPGKPPPPPIPPPPPPPKPPPPPPPPPPPPPFPPPPPFKPPPPPPPPPPPPPFPPPPPPPPPPPPPPGPPPPPPPGPPPPPPPPPKPPPPPFPPPPPKKPPPPPPPPPFPPPFPFPPPPPFPPPPPKPPPFPPFPPGGPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNHOONNNNHNNHNNNHNHNNNNNNNNNNNNNNHNHONNNHHNCNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOMNMMNHNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHNNNNNNNNHNHNNNHNNNNHHHHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCNCNNNNNNNNMMNNMNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNHNHNNNNNNNNNHNNHNNNHNNNNNNNNNHNNNNNNNNNNHNNHNNNNNNHNNNHHNNHHNNNNOOOHNNNHOOONONNNNNONNONNNNNNNNNNNHNNONNNNNNNNNHNNNNNNCNNHNNNHNNNHNNNNONNNNNNHHNNNNNNNNNNNNNNOONNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNONCNNNNHNNNHNNNNNHNNHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNONNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOFNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPGPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPCCCCOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOGPPPGPPPPPPPPPGPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNFFHHOHHHHHHHHHHHHHHHHHHHHHHHHHHOOHHHHHOOHHHHHHHHOOOHOOOOHHHHHHHOOHHHHOOOOOJJFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFOOOOOIFKFFKFFFFIFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNOONNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNOONNNOONNNNNNMNNNNNNNNNNNNNNNNNNNNNONNNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNOONNONNNNNNONNMNNOOOONNNNNNNNNOMNNMNNCOONOONNMNNOONNNNOOMNNOOONNNNNNNNONNNNNOONNNNNNONOONNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNMNNMNNNNNMNNNMNNNNNNNNNNNNNNNNNHHCCCFKNNNNNMNNNNNNNNFKKFNNNNNNNNNNNNNNMNMMOMNNNNONNNNNMNNNNNNNNHKFFPPPPPPPFPPPPPGFPFPPPPPPPPPPPPPPFPFGGFPKGPPPPPSFPPPPPFKPPGFFFPPPPPPPPPPPPPPPFNNNNNNNNNNNNNNNNNNNNNNNMONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONONOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNONMNNNNNNNNNNNNNNNOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOMNNOOOONOONNNONNNNNOOOONONOOOOMOMNONNNNNNNNNNNNNNNNNOOOOONONNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONNOONOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO","n":["dsl","fallible","frame","physical_plan","prelude","utils","Abs","Agg","AggExpr","AggGroups","Alias","All","AllHorizontal","And","AnonymousFunction","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","ArrayExpr","ArrayNameSpace","AsStruct","Atan2","BackwardFill","BinaryExpr","BinaryExpr","BinaryUdfOutputField","Boolean","BooleanFunction","Business","Cast","Categorical","CategoricalFunction","CategoricalNameSpace","Cbrt","Ceil","ChainedThen","ChainedWhen","Clip","Coalesce","Column","Columns","ConcatExpr","Correlation","Count","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DateOffset","DatetimeArgs","Diff","Divide","DropNans","DropNulls","Dtype","DtypeColumn","DurationArgs","Entropy","Eq","EqValidity","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exclude","Excluded","Exp","Explode","Explode","Expr","ExprEvalExtension","ExprNameNameSpace","ExtendConstant","FieldsMapper","FieldsNameMapper","FillNull","FillNullWithStrategy","Filter","First","Floor","FloorDivide","ForwardFill","Function","FunctionExpr","FunctionOutputField","Fused","Gather","GatherEvery","Generic","GetCategories","GetOutput","GroupsToRows","Gt","GtEq","Hash","Hist","Implode","Interpolate","IntoListNameSpace","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","Join","JoinOptions","KeepName","Kurtosis","Last","Len","ListExpr","ListNameSpace","ListNameSpaceExtension","Literal","Log","Log1p","LogicalAnd","LogicalOr","LowerBound","Lt","LtEq","Max","MaxHorizontal","Mean","MeanHorizontal","Median","MetaNameSpace","Min","MinHorizontal","Minus","Mode","Modulus","Multiply","NUnique","Name","Negate","Not","NotEq","NotEqValidity","Nth","NullCount","Operator","Or","Over","PctChange","PeakMax","PeakMin","Plus","Pow","PowFunction","QCut","Quantile","RLE","RLEID","Random","Range","Rank","Reinterpret","RenameAlias","RenameAliasFn","RepeatBy","Replace","Reshape","Reverse","Rolling","RollingCovOptions","RollingExpr","Round","RoundSF","SearchSorted","Selector","SeriesBinaryUdf","SeriesUdf","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","Sort","SortBy","SpecialEq","Sqrt","Std","StringExpr","StrptimeOptions","StructExpr","StructNameSpace","SubPlan","Sum","SumHorizontal","TemporalExpr","Ternary","Then","ToPhysical","TopK","TopKBy","Trigonometry","TrueDivide","UdfSchema","Unique","UniqueCounts","UpperBound","UserDefinedFunction","ValueCounts","Var","When","Wildcard","Window","WindowMapping","WindowType","Xor","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_into_selector","_selector_add","_selector_and","_selector_sub","abs","add","agg_groups","alias","all","all","all","all","all_horizontal","allow_parallel","ambiguous","and","any","any","any","any_horizontal","append","apply","apply_binary","apply_children","apply_many","apply_many_private","apply_multiple","approx_n_unique","arange","arccos","arccosh","arcsin","arcsinh","arctan","arctan2","arctanh","arg_max","arg_max","arg_max","arg_min","arg_min","arg_min","arg_sort","arg_sort_by","arg_unique","arg_where","args","arr","as_any","as_ref","as_struct","avg","backward_fill","binary","binary","binary_expr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","bottom_k_by","business_day_count","cache","call","call","call_udf","call_udf","call_unchecked","cast","cast","cat","cat","cbrt","ceil","clip","clip_max","clip_min","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","coalesce","col","cols","concat_expr","concat_list","concat_str","contains","contains","cos","cosh","cot","count","count_matches","count_matches","cov","cum_count","cum_fold_exprs","cum_max","cum_min","cum_prod","cum_reduce_exprs","cum_sum","cumulative_eval","cumulative_eval","cut","date_ranges","datetime","datetime_range","datetime_ranges","day","days","ddof","default","default","default","default","default","default","default","default","default","default","degrees","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","diff","diff","div","dot","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_nans","drop_nulls","drop_nulls","dt","dt","dtype_col","dtype_cols","duration","entropy","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","eval","eval","ewm_mean","ewm_mean_by","ewm_std","ewm_var","exact","exclude","exclude_dtype","exp","explode","extend_constant","field_by_index","field_by_name","fill_nan","fill_null","fill_null_with_strategy","filter","first","first","first","flatten","float_type","floor","floor_div","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold_exprs","force_parallel","format","format_str","forward_fill","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_type","fun","function_expr","function_with_options","functions","gather","gather","gather_every","gather_every","get","get","get","get_categories","get_field","get_field","get_fields_lens","get_output","get_schema","gt","gt_eq","has_multiple_outputs","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","head","head","hist","hour","hours","implode","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","input_fields","int_range","int_ranges","interpolate","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_list_name_space","into_list_name_space","into_tree_formatter","is_between","is_column","is_duplicated","is_finite","is_first_distinct","is_in","is_infinite","is_last_distinct","is_nan","is_not_nan","is_not_null","is_not_null","is_null","is_null","is_regex_projection","is_simple_projection","is_unique","join","join","json_encode","keep","kurtosis","last","last","last","len","len","len","list","lit","log","log1p","logical_and","logical_or","lower_bound","lt","lt_eq","map","map","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","map_dtype","map_dtypes","map_expr","map_field","map_fields","map_fields","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_python","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","max","max","max","max","max_horizontal","mean","mean","mean","mean_horizontal","median","median","median","median","meta","microsecond","microseconds","milliseconds","min","min","min","min","min_horizontal","min_periods","minute","minutes","mode","month","mul","n_unique","n_unique","n_unique","name","name","nan_max","nan_min","nanoseconds","neg","neq","neq_missing","nested_sum_type","new","new","new","new","new","nodes","nodes_owned","not","not","null_count","options","or","otherwise","otherwise","output_name","over","over_with_options","pct_change","peak_max","peak_min","pearson_corr","pi","pop","pow","prefix","prefix_fields","product","python_udf","qcut","qcut_uniform","quantile","quantile","radians","rank","reduce_exprs","reinterpret","rem","rename_fields","repeat","repeat_by","replace","replace_dtype","reshape","return_type","reverse","reverse","reverse","rle","rle_id","rolling","rolling_corr","rolling_cov","rolling_map","rolling_map_float","rolling_max","rolling_mean","rolling_median","rolling_min","rolling_quantile","rolling_skew","rolling_std","rolling_sum","rolling_var","root_names","round","round_sig_figs","rows_left","rows_right","same_type","sample_frac","sample_fraction","sample_n","sample_n","search_sorted","second","seconds","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set_difference","set_intersection","set_sorted_flag","set_symmetric_difference","shift","shift","shift","shift_and_fill","shrink_dtype","shuffle","sign","sin","sinh","skew","slice","slice","sort","sort","sort","sort_by","spearman_rank_corr","sqrt","std","std","std","str","strict","strict_cast","string","struct_","sub","suffix","suffix_fields","sum","sum","sum","sum","sum_horizontal","super_type","tail","tail","tan","tanh","ternary_expr","then","then","time_ranges","time_unit","time_unit","time_zone","to_array","to_dot","to_field","to_list","to_lowercase","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string","to_string","to_string","to_struct","to_struct","to_uppercase","top_k","top_k_by","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_serialize","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","udf","undo_aliases","union","unique","unique","unique","unique_counts","unique_stable","unique_stable","unique_stable","upper_bound","value_counts","var","var","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weeks","when","when","when","window_size","with_ambiguous","with_day","with_days","with_dtype","with_fractional_seconds","with_hms","with_hms","with_hour","with_hours","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_month","with_nanoseconds","with_opt_dtype","with_same_dtype","with_second","with_seconds","with_time_unit","with_time_zone","with_weeks","with_year","xor","year","expr","input","input","interpol","propagate_nans","propagate_nans","quantile","closed","ignore_nulls","ignore_nulls","by","by","data_type","expr","expr","expr","expr","expr","falsy","function","function","function","function","idx","input","input","input","input","left","length","offset","op","options","options","options","options","output_type","partition_by","predicate","returns_scalar","right","sort_options","strict","truthy","allow_duplicates","base","base","bin_count","breaks","check_sorted","ddof","decimals","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","include_breaks","include_category","labels","labels","left_closed","left_closed","limit","limit","method","method","n","normalize","offset","options","options","options","options","parallel","probs","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","sort_options","sort_options","BinaryNameSpace","base64_decode","base64_encode","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","hex_decode","hex_encode","init","into","starts_with","try_from","try_into","type_id","vzip","CategoricalNameSpace","DateLikeNameSpace","add_business_days","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","month_end","month_start","nanosecond","offset_by","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","Abs","All","AllHorizontal","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","ArrayExpr","AsStruct","Atan2","BackwardFill","BinaryExpr","Boolean","BooleanFunction","Business","Categorical","CategoricalFunction","Cbrt","Ceil","Clip","Coalesce","ConcatExpr","Correlation","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DateOffset","Diff","DropNans","DropNulls","Entropy","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exp","ExtendConstant","FillNull","FillNullWithStrategy","Floor","ForwardFill","FunctionExpr","Fused","GatherEvery","Generic","GetCategories","Hash","Hist","Interpolate","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","Kurtosis","ListExpr","Log","Log1p","LowerBound","MaxHorizontal","MeanHorizontal","MinHorizontal","Mode","Negate","Not","NullCount","PctChange","PeakMax","PeakMin","Pow","PowFunction","QCut","RLE","RLEID","Random","Range","Rank","Reinterpret","RepeatBy","Replace","Reshape","Reverse","RollingExpr","Round","RoundSF","SearchSorted","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Sqrt","StringExpr","StructExpr","SumHorizontal","TemporalExpr","ToPhysical","TopK","TopKBy","Trigonometry","Unique","UniqueCounts","UpperBound","ValueCounts","cat","pow","rolling","trigonometry","closed","ignore_nulls","ignore_nulls","allow_duplicates","base","base","bin_count","breaks","check_sorted","ddof","decimals","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","include_breaks","include_category","labels","labels","left_closed","left_closed","limit","limit","method","method","n","normalize","offset","options","options","options","options","parallel","probs","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","sort_options","sort_options","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","Max","MaxBy","Mean","MeanBy","Min","MinBy","Quantile","QuantileBy","RollingFunction","Skew","Std","StdBy","Sum","SumBy","Var","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","fmt","fmt","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","ArcCos","ArcCosh","ArcSin","ArcSinh","ArcTan","ArcTanh","Cos","Cosh","Cot","Degrees","Radians","Sin","Sinh","Tan","Tanh","TrigonometricFunction","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","DatetimeArgs","DurationArgs","all","all_horizontal","ambiguous","any_horizontal","apply_binary","arange","arg_sort_by","arg_where","as_struct","avg","cast","coalesce","col","collect_all","cols","concat","concat_expr","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","cov","cum_fold_exprs","cum_reduce_exprs","date_range","date_ranges","datetime","datetime_range","datetime_ranges","day","days","dtype_col","dtype_cols","duration","fold_exprs","format_str","hour","hours","int_range","int_ranges","is_not_null","is_null","map_binary","max","mean","median","microsecond","microseconds","milliseconds","min","minute","minutes","month","nanoseconds","not","pearson_corr","quantile","reduce_exprs","repeat","rolling_corr","rolling_cov","second","seconds","spearman_rank_corr","sum","time_range","time_ranges","time_unit","time_unit","time_zone","weeks","year","CALL_DF_UDF_PYTHON","CALL_SERIES_UDF_PYTHON","PythonFunction","PythonUdfExpression","__clone_box","borrow","borrow","borrow_mut","borrow_mut","call_udf","call_udf","clone","clone_into","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","get_output","init","init","into","into","new","serialize","to_owned","try_from","try_from","try_into","try_into","try_serialize","type_id","type_id","vzip","vzip","StringNameSpace","base64_decode","base64_encode","borrow","borrow_mut","concat","contains","contains_literal","count_matches","deref","deref_mut","drop","ends_with","explode","extract","extract_all","extract_groups","find","find_literal","from","head","hex_decode","hex_encode","init","into","json_decode","json_path_match","len_bytes","len_chars","pad_end","pad_start","replace","replace_all","replace_n","reverse","slice","split","split_exact","split_exact_inclusive","split_inclusive","splitn","starts_with","strip_chars","strip_chars_end","strip_chars_start","strip_prefix","strip_suffix","strptime","tail","to_date","to_datetime","to_decimal","to_integer","to_lowercase","to_time","to_titlecase","to_uppercase","try_from","try_into","type_id","vzip","zfill","UserDefinedFunction","fun","input_fields","name","options","return_type","AllowedOptimizations","InProcessQuery","IntoLazy","JoinBuilder","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","OptState","PathIterator","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_collect_post_opt","_with_eager","agg","allow_parallel","allows_projection_pushdown","anonymous_scan","anti_join","apply","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","cache","cache","cache","cancel","cast","cast_all","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cloud_options","cloud_options","cloud_options","cloud_options","coalesce","collect","collect_concurrently","comm_subexpr_elim","comm_subexpr_elim","comm_subplan_elim","comm_subplan_elim","concat_impl","concat_impl","concat_impl","count","cross_join","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_nulls","eager","eager","explain","explode","fast_projection","fast_projection","fetch","fetch","fetch_blocking","file_caching","file_caching","fill_nan","fill_null","filter","finish","finish","finish","finish_no_glob","finish_no_glob","finish_no_glob","first","fmt","force_parallel","from","from","from","from","from","from","from","from","from","from","from","from","get_current_optimizations","glob","glob","glob","glob","group_by","group_by_dynamic","group_by_stable","has_header","head","hive_options","how","infer_schema_length","init","init","init","init","init","init","init","init","init","init","inner_join","into","into","into","into","into","into","into","into","into","into","iter_paths","iter_paths","join","join_builder","join_nulls","last","lazy","lazy","left_join","left_on","limit","logical_plan","logical_plan","low_memory","low_memory","low_memory","map","map_python","max","mean","median","melt","memory_map","merge_sorted","min","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","name","new","new","new","new_paths","new_paths","null_count","on","optimize","outer_join","parallel","path","path","path","paths","paths","paths","pivot","predicate_pushdown","predicate_pushdown","profile","projection_pushdown","projection_pushdown","quantile","raise_if_empty","rechunk","rechunk","rechunk","rechunk","rechunk","rename","reverse","right_on","rolling","row_estimate","row_estimate","row_index","row_index","row_index","row_index","row_index","row_index","scan","scan_from_python_function","scan_ipc","scan_ipc_files","scan_parquet","scan_parquet_files","schema","schema","schema","select","select_seq","semi_join","shift","shift_and_fill","simplify_expr","simplify_expr","sink_csv","sink_ipc","sink_ipc_cloud","sink_json","sink_parquet","sink_parquet_cloud","skip_rows","slice","slice_pushdown","slice_pushdown","sort","sort_by_exprs","std","streaming","streaming","suffix","sum","tail","tail","to_alp","to_alp_optimized","to_dot","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","top_k","truncate_ragged_lines","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_coercion","type_coercion","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unique","unique_stable","unnest","use_statistics","validate","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with","with_batch_size","with_cache","with_column","with_columns","with_columns_seq","with_comm_subexpr_elim","with_comm_subplan_elim","with_comment_prefix","with_context","with_decimal_comma","with_dtype_overwrite","with_encoding","with_end_of_line_char","with_glob","with_ignore_errors","with_ignore_errors","with_infer_schema_length","with_infer_schema_length","with_missing_is_null","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_null_values","with_optimizations","with_path","with_path","with_path","with_paths","with_paths","with_paths","with_predicate_pushdown","with_projection_pushdown","with_quote_char","with_rechunk","with_rechunk","with_rechunk","with_row_estimate","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_schema","with_schema","with_schema_modify","with_separator","with_simplify_expr","with_skip_rows","with_skip_rows_after_header","with_slice_pushdown","with_streaming","with_try_parse_dates","with_type_coercion","without_optimizations","pivot","pivot_stable","executors","expressions","planner","Dummy","Executor","borrow","borrow_mut","deref","deref_mut","drop","execute","execute","from","init","into","try_from","try_into","type_id","vzip","AggregationContext","PartitionedAggregation","PhysicalExpr","PhysicalIoHelper","as_expression","as_partitioned_aggregator","as_stats_evaluator","as_stats_evaluator","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","evaluate","evaluate_io","evaluate_on_groups","evaluate_partitioned","expr","finalize","fmt","fmt","from","from","has_window_function","init","init","into","into","is_literal","to_field","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","create_physical_plan","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Anti","AsOf","Average","Binary","Boolean","Cache","Cross","CsvWriterOptions","DataFrameScan","Date","DateTime","Dense","Distinct","DslPlan","Duration","Duration","DynamicGroupOptions","ExtContext","Filter","Float","Float32","Float64","GroupBy","HConcat","HStack","Inner","Int","Int16","Int32","Int64","Int8","IpcWriterOptions","Join","JoinArgs","JoinType","JoinValidation","JsonWriterOptions","Left","Literal","LiteralValue","ManyToMany","ManyToOne","MapFunction","Max","Min","NULL","Null","Null","OneToMany","OneToOne","Ordinal","Outer","ParquetWriteOptions","PolarsTemporalGroupby","PythonScan","Range","RankMethod","RankOptions","RollingGroupOptions","RollingOptions","Scan","Select","Semi","Series","Sink","Slice","Sort","StrCat","String","Time","UInt16","UInt32","UInt64","UInt8","Union","UnionArgs","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add_ms","add_ns","add_us","allows_predicate_pushdown","allows_projection_pushdown","allows_slice_pushdown","as_any","batch_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","by","center","check_sorted","check_sorted","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","closed_window","closed_window","closed_window","cmp","coalesce","compare","compression","compression","compute_schema","data_pagesize_limit","days","days_only","default","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","descending","describe","describe_tree_format","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","diagonal","dot","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","every","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_str","fn_params","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_partitioned_ds","get_datatype","group_by_dynamic","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","how","include_bom","include_boundaries","include_header","index_column","index_column","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_asof","is_constant_duration","is_full_days","is_zero","join_nulls","label","lit","lit","lit","maintain_order","maintain_order","maintain_order","maintain_order","materialize","method","min_periods","months","months_only","mul","n_rows","nanoseconds","needs_checks","negative","new","new","offset","offset","output_schema","parallel","parse","parsed_int","partial_cmp","period","period","predicate","rechunk","rolling","row_group_size","scan","schema","schema","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize_options","skip_rows","slice","start_by","statistics","suffix","suffix","to_alp","to_any_value","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_supertypes","truncate_impl","truncate_ms","truncate_ns","truncate_us","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validation","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","warn_if_unsorted","weeks","weeks_only","weights","window_size","with_coalesce","with_columns","aggs","apply","args","by_column","cache_hits","contexts","df","expr","exprs","file_info","file_options","function","id","input","input","input","input","input","input","input","input","input","input","input","input_left","input_right","inputs","inputs","keys","left_on","len","maintain_order","offset","options","options","options","options","options","options","options","output_schema","paths","payload","predicate","predicate","projection","right_on","scan_type","schema","selection","slice","sort_options","data_type","high","low"],"q":[[0,"polars_lazy"],[6,"polars_lazy::dsl"],[1286,"polars_lazy::dsl::AggExpr"],[1293,"polars_lazy::dsl::BooleanFunction"],[1296,"polars_lazy::dsl::Expr"],[1330,"polars_lazy::dsl::FunctionExpr"],[1374,"polars_lazy::dsl::binary"],[1394,"polars_lazy::dsl::cat"],[1395,"polars_lazy::dsl::dt"],[1451,"polars_lazy::dsl::function_expr"],[1571,"polars_lazy::dsl::function_expr::BooleanFunction"],[1574,"polars_lazy::dsl::function_expr::FunctionExpr"],[1618,"polars_lazy::dsl::function_expr::cat"],[1620,"polars_lazy::dsl::function_expr::pow"],[1624,"polars_lazy::dsl::function_expr::rolling"],[1663,"polars_lazy::dsl::function_expr::trigonometry"],[1705,"polars_lazy::dsl::functions"],[1779,"polars_lazy::dsl::python_udf"],[1824,"polars_lazy::dsl::string"],[1886,"polars_lazy::dsl::udf"],[1892,"polars_lazy::frame"],[2324,"polars_lazy::frame::pivot"],[2326,"polars_lazy::physical_plan"],[2329,"polars_lazy::physical_plan::executors"],[2345,"polars_lazy::physical_plan::expressions"],[2388,"polars_lazy::physical_plan::planner"],[2389,"polars_lazy::prelude"],[3008,"polars_lazy::prelude::DslPlan"],[3060,"polars_lazy::prelude::LiteralValue"],[3063,"dyn_clone::sealed"],[3064,"polars_error"],[3065,"core::result"],[3066,"core::convert"],[3067,"core::convert"],[3068,"polars_core::series"],[3069,"core::option"],[3070,"core::ops::function"],[3071,"core::marker"],[3072,"core::marker"],[3073,"core::ops::function"],[3074,"polars_core::chunked_array::ops::sort::options"],[3075,"polars_core::chunked_array::ops::sort::options"],[3076,"alloc::vec"],[3077,"core::clone"],[3078,"alloc::string"],[3079,"polars_core::utils"],[3080,"polars_time::windows::group_by"],[3081,"polars_core::datatypes::time_unit"],[3082,"serde::de"],[3083,"polars_core::series::ops"],[3084,"core::marker"],[3085,"polars_core::chunked_array::ops"],[3086,"core::fmt"],[3087,"core::fmt"],[3088,"polars_plan::dsl::function_expr::range"],[3089,"polars_plan::dsl::function_expr::list"],[3090,"polars_plan::dsl::function_expr::binary"],[3091,"polars_plan::dsl::function_expr::datetime"],[3092,"polars_plan::dsl::function_expr::struct_"],[3093,"polars_plan::dsl::function_expr::array"],[3094,"polars_plan::dsl::function_expr::business"],[3095,"polars_plan::logical_plan::options"],[3096,"polars_core::schema"],[3097,"polars_plan::logical_plan"],[3098,"polars_core::datatypes::field"],[3099,"core::hash"],[3100,"polars_ops::chunked_array::interpolate"],[3101,"core::fmt"],[3102,"core::ops::function"],[3103,"polars_arrow::legacy::kernels::rolling::no_nulls"],[3104,"polars_core::chunked_array::ops::rolling_window"],[3105,"polars_core::datatypes"],[3106,"polars_core::chunked_array"],[3107,"core::marker"],[3108,"serde::ser"],[3109,"polars_core::series::series_trait"],[3110,"polars_ops::chunked_array::list::to_struct"],[3111,"core::any"],[3112,"polars_arrow::legacy::kernels::time"],[3113,"polars_core::frame"],[3114,"polars_error"],[3115,"pyo3::types::any"],[3116,"pyo3::instance"],[3117,"polars_utils::arena"],[3118,"polars_plan::logical_plan::alp"],[3119,"polars_utils::arena"],[3120,"polars_core::schema"],[3121,"polars_utils::aliases"],[3122,"polars_io::cloud::options"],[3123,"polars_ops::frame::join::args"],[3124,"core::iter::traits::collect"],[3125,"polars_core::frame::explode"],[3126,"std::path"],[3127,"std::path"],[3128,"pyo3::instance"],[3129,"polars_core::frame"],[3130,"polars_io::csv::read::options"],[3131,"polars_io::csv::read::options"],[3132,"polars_core::frame::group_by::proxy"],[3133,"core::fmt"],[3134,"chrono_tz::timezones"],[3135,"core::cmp"],[3136,"polars_plan::dot"],[3137,"ahash::random_state"],[3138,"hashbrown::map"],[3139,"polars_core::datatypes::any_value"],[3140,"chrono::naive::datetime"]],"i":[0,0,0,0,0,0,25,4,0,32,4,50,50,36,4,50,50,25,25,25,25,0,25,25,25,4,25,0,25,0,25,4,25,0,0,52,25,0,0,25,25,4,4,25,25,32,25,25,25,25,25,25,25,0,25,36,25,25,49,4,0,25,36,36,25,25,25,25,4,0,25,4,59,0,0,0,25,0,0,25,25,4,32,25,36,25,4,0,0,25,4,25,52,51,0,59,36,36,25,25,32,25,0,50,50,50,50,50,50,50,50,50,50,50,50,59,0,4,25,32,4,25,0,0,4,25,25,36,36,25,36,36,32,25,32,25,32,0,32,25,36,25,36,36,32,49,25,50,36,36,4,25,0,36,58,25,25,25,36,25,0,25,32,25,25,25,25,25,25,4,0,25,25,25,25,58,0,25,25,25,25,4,0,0,25,25,25,25,25,25,4,4,4,0,52,32,25,0,25,0,4,32,25,25,4,0,25,25,25,25,36,0,25,25,25,0,25,32,0,4,4,0,0,36,45,46,47,48,32,4,49,36,16,50,51,52,25,53,54,55,56,57,58,59,42,3,3,3,3,4,4,4,4,0,8,9,4,0,57,53,4,8,9,4,0,4,4,0,4,4,4,0,4,0,4,4,4,4,4,4,4,8,9,4,8,9,4,4,0,4,0,57,4,30,32,0,0,4,0,4,0,44,8,98,9,3,104,76,45,46,47,48,32,4,49,36,16,50,51,52,25,53,54,55,56,57,58,59,42,44,8,98,9,3,104,76,45,46,47,48,32,4,49,36,16,50,51,52,25,53,54,55,56,57,58,59,42,4,4,0,56,40,42,30,43,42,0,4,0,4,4,4,4,4,4,45,46,47,48,32,4,49,36,16,50,51,52,25,53,54,55,56,57,58,59,42,45,46,47,48,32,4,49,36,16,50,51,52,25,53,54,55,56,57,58,59,42,0,0,0,0,0,0,8,9,4,4,4,4,8,9,0,4,0,4,4,4,0,4,62,62,4,0,0,0,0,53,54,55,4,16,16,16,53,54,56,57,58,59,4,44,8,98,9,3,104,76,45,46,47,48,32,4,49,36,16,16,50,51,52,25,53,54,55,56,57,58,59,42,44,8,98,9,3,104,76,45,46,47,48,32,4,49,36,16,50,51,52,25,53,54,55,56,57,58,59,42,32,4,49,36,16,16,16,50,51,52,25,55,56,57,58,59,9,4,4,4,44,8,98,9,3,104,76,45,46,47,48,32,4,49,36,16,50,51,52,25,53,54,55,56,57,58,59,42,4,9,4,0,4,0,0,0,4,32,4,4,49,36,16,16,50,51,52,25,55,56,57,58,59,4,4,4,4,49,49,49,36,36,36,50,50,50,51,51,51,52,52,52,55,55,55,56,56,56,57,57,57,58,58,58,59,59,59,74,74,4,4,4,4,56,4,4,4,4,4,76,76,4,4,4,4,0,9,4,4,16,4,4,30,43,40,80,4,4,49,36,36,16,50,50,51,51,52,52,25,25,53,54,55,56,57,58,59,42,0,57,56,0,4,44,8,98,9,3,104,76,45,46,47,48,32,4,4,4,4,4,4,4,4,4,4,4,4,4,4,49,36,16,16,16,16,16,16,16,16,16,16,16,16,50,51,52,25,25,25,25,25,53,54,55,56,57,58,58,59,42,16,42,0,4,0,9,4,9,4,8,9,4,44,68,14,98,30,80,4,4,3,32,4,4,49,36,50,51,52,25,55,56,57,58,59,9,4,4,53,54,4,44,8,98,9,3,104,76,45,46,47,48,32,4,49,36,16,50,51,52,25,53,54,55,56,57,58,59,42,42,0,0,4,44,8,98,9,3,104,76,45,46,47,48,32,4,49,36,16,50,51,52,25,53,54,55,56,57,58,59,42,4,101,9,3,4,3,4,4,4,4,4,4,4,4,0,4,0,4,3,3,4,8,9,76,104,4,0,9,4,0,9,4,4,0,4,4,4,4,4,4,4,104,4,0,4,98,98,16,16,4,16,104,16,4,0,4,4,0,98,4,98,98,98,98,0,8,9,4,0,0,9,4,0,0,8,9,4,4,53,54,54,0,8,9,4,0,55,53,54,4,53,4,8,9,4,4,42,4,4,54,4,4,4,98,98,16,53,54,42,4,4,0,4,4,42,4,46,48,3,4,4,4,4,4,0,4,3,4,104,104,4,0,4,4,0,4,4,4,0,4,4,76,0,4,4,98,4,42,8,9,4,4,4,4,0,0,4,4,4,4,4,4,4,4,4,4,4,3,4,4,57,57,16,4,9,9,4,4,53,54,32,4,49,36,16,16,16,50,51,52,25,55,56,57,58,59,9,9,4,9,8,9,4,4,4,4,4,4,4,4,9,4,8,9,4,4,0,4,8,9,4,4,56,4,0,4,4,104,104,0,8,9,4,0,16,9,4,4,4,0,45,47,0,53,54,53,9,4,4,8,104,45,46,47,48,32,4,49,36,16,50,51,52,25,53,54,55,56,57,58,59,42,4,98,4,36,50,51,52,25,8,9,104,4,4,44,8,98,9,3,104,76,45,46,47,48,32,4,49,36,16,50,51,52,25,53,54,55,56,57,58,59,42,44,8,98,9,3,104,76,45,46,47,48,32,4,49,36,16,50,51,52,25,53,54,55,56,57,58,59,42,98,98,4,98,30,44,8,98,9,3,104,76,45,46,47,48,32,4,49,36,16,50,51,52,25,53,54,55,56,57,58,59,42,0,3,9,8,9,4,4,8,9,4,4,4,8,9,4,44,8,98,9,3,104,76,45,46,47,48,32,4,49,36,16,50,51,52,25,53,54,55,56,57,58,59,42,54,0,46,48,55,53,53,54,98,54,53,54,53,54,53,54,54,53,54,53,54,98,98,53,54,53,53,54,53,4,53,203,204,205,203,204,205,203,206,207,208,209,210,211,211,212,213,209,214,215,216,217,218,214,213,216,210,219,218,220,219,219,220,212,216,217,218,218,217,215,213,220,209,211,215,221,222,223,224,225,226,227,228,229,226,230,230,224,225,221,224,225,221,225,221,231,232,227,233,234,222,234,235,236,237,238,239,221,240,241,242,243,244,245,235,233,239,246,247,0,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,0,0,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,25,50,50,50,50,25,25,25,25,25,25,25,25,25,0,25,25,0,52,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,0,25,25,52,51,25,25,25,50,50,50,50,50,50,50,50,50,50,50,50,25,25,25,25,25,25,25,25,25,25,50,25,25,25,25,25,0,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,52,25,25,25,25,25,25,25,25,25,25,25,25,0,0,0,0,206,207,208,221,222,223,224,225,226,227,228,229,226,230,230,224,225,221,224,225,221,225,221,231,232,227,233,234,222,234,235,236,237,238,239,221,240,241,242,243,244,245,235,233,239,246,247,0,51,52,52,0,52,125,125,125,125,125,125,125,125,0,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,0,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,0,0,0,0,53,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,53,54,0,0,0,0,0,53,54,0,0,0,0,0,0,0,0,53,54,54,0,53,54,53,54,0,0,0,0,0,0,0,53,54,0,0,0,0,53,54,53,54,53,0,0,0,0,133,107,133,107,133,107,133,133,133,107,133,107,133,133,107,133,133,133,133,133,133,107,133,133,107,107,133,107,133,107,133,133,107,133,107,133,107,107,133,107,133,0,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,42,42,42,42,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,148,130,141,145,150,151,143,152,153,130,130,141,142,143,130,130,141,143,142,148,130,141,145,150,151,143,152,153,142,148,130,141,145,150,151,143,152,153,130,130,151,152,148,130,130,148,130,141,145,150,151,143,152,153,148,130,141,145,150,151,143,152,153,154,154,151,152,142,130,130,163,153,163,153,154,154,150,130,130,130,145,151,152,153,142,148,130,141,145,150,151,143,152,153,142,148,130,141,145,150,151,143,152,153,130,130,130,130,142,148,148,130,130,141,145,150,151,143,152,153,130,163,153,130,130,163,153,148,130,148,163,153,130,130,130,142,154,154,154,150,143,130,153,142,142,148,130,130,130,141,145,150,151,143,152,153,130,154,154,150,152,130,130,130,150,141,152,142,145,142,148,130,141,145,150,151,143,152,153,130,142,148,130,141,145,150,151,143,152,153,154,154,130,130,142,130,162,130,130,142,130,130,141,150,143,152,130,130,130,130,130,130,151,130,130,154,150,143,145,151,152,145,142,150,143,150,143,130,142,130,130,152,154,150,143,154,150,143,0,163,153,130,163,153,130,150,154,150,143,151,152,130,130,142,130,163,153,154,150,143,145,151,152,143,130,130,130,130,130,130,143,145,130,130,130,130,130,163,153,130,130,130,130,130,130,145,130,163,153,130,130,130,163,153,142,130,130,141,130,130,130,148,130,141,145,150,151,143,152,153,130,150,142,148,130,141,145,150,151,143,152,153,142,148,130,141,145,150,151,143,152,153,163,153,142,148,130,141,145,150,151,143,152,153,130,130,130,152,142,130,142,148,130,141,145,150,151,143,152,153,142,143,150,130,130,130,130,130,150,130,150,150,150,150,150,150,143,150,143,150,154,150,150,143,143,150,130,154,150,143,154,150,143,130,130,150,154,150,143,130,154,130,150,150,143,143,150,143,150,150,130,150,150,130,130,150,130,130,0,0,0,0,0,0,0,182,182,182,182,182,181,182,182,182,182,182,182,182,182,0,0,0,0,183,183,183,186,186,188,186,188,186,188,186,188,186,188,183,186,183,184,186,184,183,188,186,188,186,186,188,186,188,183,183,186,188,186,188,186,188,186,188,0,0,0,0,159,159,192,193,193,70,159,0,70,193,193,192,70,0,0,193,0,70,70,193,193,193,70,70,70,159,193,193,193,193,193,0,70,0,0,0,0,159,0,0,177,177,70,192,192,0,0,193,177,177,192,159,0,0,70,193,0,0,0,0,70,70,159,193,70,70,70,193,193,193,193,193,193,193,70,0,116,158,111,65,171,172,173,161,159,177,174,192,110,193,194,132,70,65,65,65,144,144,144,144,171,116,158,111,65,169,171,172,200,173,161,159,177,174,192,110,193,194,132,70,116,158,111,65,169,171,172,200,173,161,159,177,174,192,110,193,194,132,70,116,116,158,111,116,158,111,65,171,172,173,161,159,177,174,192,110,193,194,132,70,116,158,111,65,171,172,173,161,159,177,174,192,110,193,194,132,70,116,158,111,65,161,65,172,174,70,174,65,65,116,158,111,171,172,173,161,177,174,110,194,132,70,116,158,111,65,169,171,172,200,173,161,159,177,174,192,110,193,194,132,70,116,158,111,65,169,171,172,200,173,161,159,177,174,192,110,193,194,132,70,110,70,70,116,158,111,65,171,172,173,161,159,177,174,192,110,193,194,132,70,132,70,116,158,111,65,169,171,172,200,173,161,159,177,174,192,110,193,194,132,70,116,158,111,65,171,172,173,161,159,177,174,192,110,193,194,132,158,158,158,111,111,111,65,65,65,171,171,171,172,172,172,173,173,173,161,161,161,159,159,159,177,177,177,174,174,174,194,194,194,132,132,132,158,116,158,111,65,65,144,171,172,173,161,159,159,177,177,174,192,110,193,194,132,70,194,116,116,158,111,65,169,171,172,200,173,161,161,159,177,174,192,110,193,194,132,70,132,193,199,158,111,65,171,172,173,161,159,177,174,192,110,193,194,132,161,171,158,171,158,111,116,158,111,65,169,171,172,200,173,161,159,177,174,192,110,193,194,132,70,116,158,111,65,169,171,172,200,173,161,159,177,174,192,110,193,194,132,70,159,65,65,65,161,158,105,200,193,171,172,173,174,193,110,116,65,65,65,169,65,177,65,65,161,158,111,169,132,65,65,65,158,111,169,132,199,174,144,144,169,116,158,111,65,171,172,173,161,159,177,174,192,110,193,194,132,70,171,194,161,158,174,161,161,70,193,116,158,111,65,171,172,173,161,159,177,174,192,110,193,194,132,70,65,159,177,132,65,65,65,65,116,158,111,65,169,171,172,200,173,161,159,177,174,192,110,193,193,194,132,70,116,158,111,65,169,171,172,200,173,161,159,177,174,192,110,193,194,132,70,116,158,111,65,169,171,172,200,173,161,159,177,174,192,110,193,194,132,70,161,116,158,111,65,169,171,172,200,173,161,159,177,174,192,110,193,194,132,70,116,65,65,116,116,161,169,248,248,249,250,251,252,253,254,255,256,256,257,251,258,251,254,248,255,259,250,260,257,252,261,262,262,249,263,248,262,260,248,260,264,254,248,262,255,259,263,253,256,261,258,256,253,262,256,253,253,250,250,265,265,265],"f":"````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{cb}d{}}00000000000000000000{fh}{{fh}{{l{hj}}}}00{hh}{{hh}}1{{hn}h}{{}h}{A`h}{Abh}{{hAd}h}{c{{l{hj}}}{{Ah{{Af{h}}}}}}``{{hc}h{{Aj{h}}}}4321{{hcAd}h{{Aj{h}}}}{{hc{B`{{An{Al}}}}}h{{Bh{Bb}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBl}}{{hhc{B`{{An{Al}}}}}h{{Bh{BbBb}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBl}}{{hc}{{l{Bnj}}}{{C`{h}{{Bd{{l{Bnj}}}}}}}}{{hc{Af{h}}{B`{{An{Al}}}}}h{{Bh{{Af{Bb}}}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBl}}{{hCb{Af{h}}AdAd}h}{{ce{B`{{An{Al}}}}Ad}h{{Bh{{Af{Bb}}}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBl}{{Ah{{Af{h}}}}}}?{{hhCdCf}h}{hh}0000{{hh}h}1>=1>=1{{hCh}h}{{cCj}h{{Ah{{Af{h}}}}}}3{ch{{Aj{h}}}}`{hA`}{ClCn}{D`h}{{{Db{h}}}h}{nh}{{h{Bf{Dd}}}h}`{hDf}{{hDhh}h}{ce{}{}}0000000000000000000000000000000000000000000000000000000{{hhCh}h}{{hcgCj}h{{Aj{h}}}{{Aj{h}}Dj}{{Ah{{Af{e}}}}}}{{hh{Dl{Ad}}{Db{Dn}}}h}`{{E`n}{{l{Ebj}}}}{{Ed{Db{h}}}{{l{hj}}}}{{Cl{Af{Bb}}}{{l{{Bf{Bb}}j}}}}{{EfBbBb}{{l{Bbj}}}}{{Ed{Db{h}}}h}{{hCf}h}0`{hEh}{hh}0{{hhh}h}{{hh}h}0{EjEj}{ElEl}{EnEn}{F`F`}{D`D`}7{FbFb}{DhDh}{{{B`{c}}}{{B`{c}}}Dj}{FdFd}{FfFf}{FhFh}{CbCb}{FjFj}{FlFl}{FnFn}{G`G`}{GbGb}{GdGd}{GfGf}{EdEd}{{ce}d{}{}}00000000000000000000{{{Af{h}}}h}{nh}{ch{{Gh{Eb}}}}{{eAd}{{l{hj}}}{{Aj{h}}Dj}{{Ah{{Af{c}}}}}}{e{{l{hj}}}{{Aj{h}}Dj}{{Ah{{Af{c}}}}}}{{cnAd}h{{Ah{{Af{h}}}}}}{{A`c}h{{Aj{h}}}}{{Abc}h{{Aj{h}}}}{hh}00021{{hhGj}h}{{hAd}h}{{hceAd}h{{Bh{BbBb}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBlDj}{{Ah{{Af{h}}}}}}111{{ce}h{{Bh{BbBb}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBlDj}{{Ah{{Af{h}}}}}}2{{GlhGnAd}h}0{{h{Db{H`}}{Bf{{Db{Eb}}}}AdAd}h}{{hhHbHd{Bf{Hf}}{Bf{Eb}}}h}{Fjh}11```{{}h}{{}{{B`{{An{Ef}}}}}}{{}{{B`{{An{Al}}}}}}{{}{{B`{{An{Hh}}}}}}{{}Fj}{{}Fl}{{}G`}{{}Gb}{{}Gd}{{}Gf}{hh}{Gnc{}}00000000000000{{{B`{c}}}{}{}}11111111111111111111111111111111111111111{c{{l{D`}}}Hj}{c{{l{h}}}Hj}{c{{l{Fb}}}Hj}{c{{l{Dh}}}Hj}{c{{l{{B`{{An{Cl}}}}}}}Hj}{c{{l{{B`{{An{Hl}}}}}}}Hj}{c{{l{{B`{Bb}}}}}Hj}{c{{l{Fd}}}Hj}{c{{l{Ff}}}Hj}{c{{l{Fh}}}Hj}{c{{l{Cb}}}Hj}{c{{l{Fn}}}Hj}{c{{l{G`}}}Hj}{c{{l{Gb}}}Hj}{c{{l{Gd}}}Hj}{c{{l{Gf}}}Hj}{{AbCdHn}h}{{hCdHn}h}{{hh}}{{hc}h{{Aj{h}}}}{Gnd}000000000000000000000000000{hh}{Abh}1`{hI`}{Cfh}{ch{{Ah{{Af{Cf}}}}}}{Flh}{{hH`Ad}h}{{D`D`}Ad}9{{hh}Ad}{{FbFb}Ad}{{DhDh}Ad}{{{B`{Bb}}{B`{Bb}}}Ad}{{{B`{{An{c}}}}{B`{{An{c}}}}}AdIb}{{FdFd}Ad}{{FfFf}Ad}{{FhFh}Ad}{{CbCb}Ad}{{FnFn}Ad}{{G`G`}Ad}{{GbGb}Ad}{{GdGd}Ad}{{GfGf}Ad}{{hc}h{{Aj{h}}}}{{ce}Ad{}{}}00000000000000000000000000000000{{IdhAd}h}0{{hIf}h}{{hhHbAd}h}11`{{hc}h{{Gh{Eb}}}}{{hc}h{{Ah{{Af{Cf}}}}}}{hh}0{{hhh}h}{{IhCd}h}{{Ihn}h}::{{hIj}h};{{}h}{Abh}66{{}{{B`{{An{Al}}}}}}7{{hh}h}{{ClIl}{{l{dIn}}}}{{EfIl}{{l{dIn}}}}{{E`Il}{{l{dIn}}}}{{J`Il}{{l{dIn}}}}{{hIl}{{l{dIn}}}}0{{FbIl}{{l{dIn}}}}{{DhIl}{{l{dIn}}}}0{{{B`{c}}Il}{{l{dIn}}}{}}{{FdIl}{{l{dIn}}}}0{{FfIl}{{l{dIn}}}}0{{FhIl}{{l{dIn}}}}0{{CbIl}{{l{dIn}}}}0{{FjIl}{{l{dIn}}}}{{FlIl}{{l{dIn}}}}{{FnIl}{{l{dIn}}}}{{G`Il}{{l{dIn}}}}{{GbIl}{{l{dIn}}}}{{GdIl}{{l{dIn}}}}{{GfIl}{{l{dIn}}}}{{EdIl}{{l{dIn}}}}{{hce}h{{Bh{BbBb}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBlDj}{{Ah{{Af{h}}}}}}``{{nc}{{l{hj}}}{{Ah{{Af{h}}}}}}{{h{Bf{Dd}}}h}{cc{}}00000000000{Gjh}{Jbh}{Jdh}{Jfh}{Jhh}{D`h}{H`h}7{Adh}{nh}{Ddh}{Jjh}{Cdh}{Dnh}=={Jl{{B`{{An{Cl}}}}}}{Jn{{B`{{An{Cl}}}}}}?{Ff{{B`{{An{Cl}}}}}}{K`{{B`{{An{Cl}}}}}}{Kb{{B`{{An{Cl}}}}}}{Kd{{B`{{An{Cl}}}}}}{Kf{{B`{{An{Cl}}}}}}{Kh{{B`{{An{Cl}}}}}}{Kj{{B`{{An{Cl}}}}}}{Cb{{B`{{An{Cl}}}}}}{Fd{{B`{{An{Cl}}}}}}{cc{}}00{FdCb}{JlCb}{FfCb}3{KbCb}444444{GfGd}55{Cf{{B`{{An{Al}}}}}}``{{hc{B`{{An{Al}}}}Kl}h{{Bh{Bb}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBl}}`{{AbhAd}h}{{hc}h{{Aj{h}}}}{{Abhh}h}{{hGnGn}h}{{A`hAd}h}43{Ehh}{{HhKnL`LbLb}{{Bf{Lb}}}}{{AlKnL`{Af{Lb}}}Lb}{LdGn}{Cl{{Bf{{B`{{An{Al}}}}}}}}{{J`Kn}{{l{{An{Kn}}j}}}}99{fAd}{{D`c}dLf}{{hDdDdDdDd}h}{{hc}dLf}{{Fbc}dLf}{{Dhc}dLf}{{Fdc}dLf}{{Ffc}dLf}{{Fhc}dLf}{{Cbc}dLf}{{Fnc}dLf}{{G`c}dLf}{{Gbc}dLf}{{Gdc}dLf}{{Gfc}dLf}{{Abh}h}{{h{Bf{Gn}}}h}{{h{Bf{h}}{Bf{Gn}}AdAd}h}``{hh}{{}Gn}000000000000000000000000000`{{hhCdCf}h}{{hhh}h}{{hLh}h}{ce{}{}}000000000000000000000000000{h}{LjAb}{AbAb}{f{{l{{`{Ll}}j}}}}{{hccLn}h{{Aj{h}}}}{fAd};;;{{hc}h{{Aj{h}}}}<<<<<<<<11<{{A`hAd}h}{{AbhAd}h}{Ihh}{M`h}{{hAdAd}h}{{}h}{Abh}{hh}210{hAb}{chMb}{{hH`}h}3;;3;;{{M`c}h{{Bh{n}{{Bd{{l{Ebj}}}}}}BjBl}}{{hc{B`{{An{Al}}}}}h{{Bh{Bb}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBl}}{{hhc{B`{{An{Al}}}}}h{{Bh{BbBb}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBl}}{{hc}{{l{hj}}}{{C`{h}{{Bd{{l{hj}}}}}}}}{{Ld{Bf{Eb}}}{{l{Lbj}}}}{{Ldc}{{l{Lbj}}}{{Md{Cf}{{Bd{Cf}}}}}}{c{{B`{{An{Al}}}}}{{Bh{Cf}{{Bd{Cf}}}}BjBl}}{c{{B`{{An{Al}}}}}{{Bh{{Af{Cf}}}{{Bd{Cf}}}}BjBl}}{{hc}h{{C`{h}{{Bd{h}}}}}}{c{{B`{{An{Al}}}}}{{Bh{Lb}{{Bd{Lb}}}}BjBl}}{{M`{An{Bh}}}h}{c{{B`{{An{Al}}}}}{{Bh{{Af{Lb}}}{{Bd{Lb}}}}BjBl}}:{{ce{B`{{An{Al}}}}}h{{Bh{{Af{Bb}}}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBl}{{Ah{{Af{h}}}}}}{{hc{Af{h}}{B`{{An{Al}}}}}h{{Bh{{Af{Bb}}}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBl}}{{hCb{Af{h}}AdAd}h}2{Ld{{l{Lbj}}}}{{hMfAd}h}1111{nh}{A`h}{Abh}{hh}{c{{l{hj}}}{{Ah{{Af{h}}}}}}42104321{hf}```54321```2`{{hh}}543{hM`}`44`{h}{{hc}h{{Aj{h}}}}0;{{{Af{Lb}}}Ld}{c{{B`{c}}}{}}{{hhh}Fj}{{}Fl}{{n{Db{Lb}}{B`{{An{Al}}}}c}EdCl}{{h{Mh{h}}}d}0<<<`6{{Elc}h{{Aj{h}}}}{{F`c}h{{Aj{h}}}}{f{{l{{An{n}}j}}}}{{he}h{{Aj{h}}Dj}{{Ah{{Af{c}}}}}}{{heGf}h{{Aj{h}}Dj}{{Ah{{Af{c}}}}}}{{hh}h}{hh}0{{hhGj}h}{{}h}{f{{Db{h}}}}{{hc}h{{Aj{h}}}}{{M`n}h}05`{{h{Db{H`}}{Bf{{Db{Eb}}}}AdAdAd}h}{{hGn{Bf{{Db{Eb}}}}AdAdAd}h}{{nhMj}h}{{hhMj}h}9{{hMl{Bf{Dd}}}h}{{ce}h{{Bh{BbBb}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBlDj}{{Ah{{Af{h}}}}}}{{hAd}h}{{hh}}{{Ih{Db{Eb}}}h}{{ch}h{{Aj{h}}}};{{hcc{Bf{c}}{Bf{Cf}}}h{{Aj{h}}}}{{Ld{Bf{Cf}}}{{l{Lbj}}}}{{h{Af{Cd}}}h}`{A`h}{Abh}{hh}00{{hMn}h}{{hhFn}h}0{{h{An{Bh}}{B`{{An{Al}}}}N`}h}{{hGnc}h{{C`{{Nd{Nb}}}{{Bd{{Bf{H`}}}}}}BjBlNf}}{{hNh}h}000{{hMjH`Nh}h}{{hGnAd}h}222{f{{Db{{An{n}}}}}}{{hJj}h}{{hDn}h}``{{}{{B`{{An{Al}}}}}}{{hhAdAd{Bf{Dd}}}h}{{AbhAdAd{Bf{Dd}}}h}01{{hcNj}h{{Aj{h}}}}``{{D`c}lNl}{{hc}lNl}{{Fbc}lNl}{{Dhc}lNl}{{{B`{Bb}}c}lNl}{{{B`{{An{Hl}}}}c}lNl}{{{B`{{An{Cl}}}}c}lNl}{{Fdc}lNl}{{Ffc}lNl}{{Fhc}lNl}{{Cbc}lNl}{{Fnc}lNl}{{G`c}lNl}{{Gbc}lNl}{{Gdc}lNl}{{Gfc}lNl}{{Abc}h{{Aj{h}}}}0{{hNn}h}1{{A`h}h}{{Abh}h}{{hh}h}{{hce}h{{Aj{h}}}{{Aj{h}}}}{hh}{{h{Bf{Dd}}}h}111{{hAd}h}{{Abhh}h}4{{A`Ch}h}{{AbCh}h}{{hCh}h}{{heCj}h{{Aj{h}}Dj}{{Ah{{Af{c}}}}}}{{hhGjAd}h}8{{A`Gj}h}{{AbGj}h}{{hGj}h}{hO`}`{{hCf}h}`{hIh}{{hh}}{{M`n}h}0{nh}{A`h}{Abh}{hh}{c{{l{hj}}}{{Ah{{Af{h}}}}}}{{}{{B`{{An{Al}}}}}}{{Abh}h}{{h{Bf{Gn}}}h}44{{hhh}h}{{Ejc}El{{Aj{h}}}}{{Enc}F`{{Aj{h}}}}{{hhHbHd}h}```{{AbGn}h}{h{{l{Ebj}}}}{{hKnL`}{{l{Lbj}}}}={M`h}{ce{}{}}00000000000000000000={Ld{{l{Lbj}}}}{cEb{}}00000{{A`{Bf{{An{Bh}}}}}h}{{AbOb{Bf{{An{Bh}}}}Gn}h}5{{hhCh}h}{{hcgCj}h{{Aj{h}}}{{Aj{h}}Dj}{{Ah{{Af{e}}}}}}{c{{l{e}}}{}{}}0000000000000000000000000000000000000000000000000000000{{Ldc}{{l{Lbj}}}{{Md{Cf}{{Bd{{l{Cfj}}}}}}}}{{Ldc}{{l{Lbj}}}{{Md{{Af{Cf}}}{{Bd{{l{Cfj}}}}}}}}{{hc}{{l{hj}}}{{C`{h}{{Bd{{l{hj}}}}}}}}{{Ldc}{{l{Lbj}}}{{Md{Lb}{{Bd{{l{Lbj}}}}}}}}{{Cl{Db{Gj}}}{{l{dj}}}}{cOd{}}000000000000000000000000000`{fh}{{Abc}h{{Aj{h}}}}{A`h}{Abh}{hh}02100{{hAdAd}h}{{A`Gj}h}{{AbGj}h}{{hGj}h}{ce{}{}}000000000000000000000000000`{cEj{{Aj{h}}}}{{Elc}En{{Aj{h}}}}{{F`c}En{{Aj{h}}}}`{{Fjh}Fj}0{{Flh}Fl}{{LdCf}{{l{Lbj}}}}{{Flhhh}Fl}{{Fjhhh}Fj}1434334343{{Ld{Bf{Cf}}}{{l{Lbj}}}}{Ld{{l{Lbj}}}}65{{FjHf}Fj}{{Fj{Bf{Eb}}}Fj}78{{hc}h{{Aj{h}}}}``````````````````````````````````````````````````````````````````````````````````````````{{DfAd}h}{Dfh}??{{Dfh}h}{Gnc{}}0{Gnd}2{cc{}}54{{}Gn}{ce{}{}}5{c{{l{e}}}{}{}}0{cOd{}}2``{{I`h{Dl{Ad}}{Db{Dn}}Of}h}{I`h}44{{I`Hf}h}1{{I`hHf}h}{{I`Eb}h}333;;:393873333333333{{I`h}h}44{{I`{Bf{Eb}}hOh}h}{{I`hc}h{{Ah{n}}}}6{{I`n}h}7607777777{{I`hEb}h};;:<8878`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{cb}d{}}=={OjOj}{{ce}d{}{}}{Gnc{}}0{c{{l{Oj}}}Hj}{Gnd}{{OjOj}Ad}{{OjIl}{{l{dIn}}}}0{cc{}}{{Ojc}dLf}{{}Gn}{ce{}{}}{{Ojc}lNl}1{cEb{}}{c{{l{e}}}{}{}}0{cOd{}}4````````````````?44{OlOl}>=={c{{l{Ol}}}Hj}<{{OlOl}Ad}{{ce}Ad{}{}}00{{OlIl}{{l{dIn}}}}0<{{Olc}dLf};:{{Olc}lNl};9887;``{{}h}{c{{l{hj}}}{{Ah{{Af{h}}}}}}`0{{hhc{B`{{An{Al}}}}}h{{Bh{BbBb}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBl}}{{hhCdCf}h}{{cCj}h{{Ah{{Af{h}}}}}}{ch{{Aj{h}}}}{{{Db{h}}}h}{nh}{{hCf}h}{{{Af{h}}}h}2{c{{A@`{{Db{On}}}}}{{A@f{}{{A@b{A@d}}}}}}{ch{{Gh{Eb}}}}{{cA@h}{{A@`{A@d}}}{{Ah{{Af{A@d}}}}}}{{eAd}{{l{hj}}}{{Aj{h}}Dj}{{Ah{{Af{c}}}}}}11{e{{l{hj}}}{{Aj{h}}Dj}{{Ah{{Af{c}}}}}}{{cnAd}h{{Ah{{Af{h}}}}}}{{hhGj}h}{{hceAd}h{{Bh{BbBb}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBlDj}{{Ah{{Af{h}}}}}}{{ce}h{{Bh{BbBb}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBlDj}{{Ah{{Af{h}}}}}}{{hhHbHd{Bf{Hf}}{Bf{Eb}}}h}0{Fjh}11``{Cfh}{ch{{Ah{{Af{Cf}}}}}}{Flh}{{hce}h{{Bh{BbBb}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBlDj}{{Ah{{Af{h}}}}}}{{nc}{{l{hj}}}{{Ah{{Af{h}}}}}}``{{hhCdCf}h}{{hhh}h}{hh}0{{hhc{B`{{An{Al}}}}}h{{Bh{BbBb}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBl}}{nh}00```0````2>{{nhMj}h}={{ch}h{{Aj{h}}}}{{hhFn}h}0``{{hhGjAd}h}4{{hhHbHd}h}0`````````{{cb}d{}}{ce{}{}}000{{Mf{Af{Bb}}}{{l{{Bf{Bb}}j}}}}{{A@jOn}{{l{Onj}}}}{A@jA@j}{{ce}d{}{}}{Gnc{}}000{c{{l{A@j}}}Hj}{Gnd}0{{A@jA@j}Ad}{{ce}Ad{}{}}00{{A@jIl}{{l{dIn}}}}{cc{}}{{{A@n{A@l}}}A@j}1{Mf{{Bf{{B`{{An{Al}}}}}}}}{{}Gn}0>>{{{A@n{A@l}}{Bf{Cf}}Ad}Mf}{{A@jc}lNl}{ce{}{}}{c{{l{e}}}{}{}}000{{Mf{Db{Gj}}}{{l{dj}}}}{cOd{}}033`{{O`Ad}h}{O`h}55{{O`nAd}h}{{O`hAd}h}{{O`h}h}1{Gnc{}}0{Gnd}25{{O`hGn}h}3{{O`n}{{l{hj}}}}54{cc{}}598{{}Gn}>{{O`{Bf{Cf}}{Bf{Gn}}}h}7::{{O`GnAA`}h}0{{O`hhAd}h}0{{O`hhAdCd}h}={{O`hh}h};88;8;;;;;;{{O`CfG`h}h}<{{O`G`}h}{{O`{Bf{Hf}}{Bf{Eb}}G`h}h}{{O`Gn}h}{{O`hAd}h}{O`h}400{c{{l{e}}}{}{}}0{cOd{}}{ce{}{}}{{O`h}h}````````````````````{{cb}d{}}00000000{{A@dc}{{A@`{On}}}{{Bh{AAb{AAf{AAd}}{AAf{AAh}}}{{Bd{{A@`{d}}}}}}}}{{A@dAd}A@d}{{AAjc}A@d{{Ah{{Af{h}}}}}}{{AAlAd}AAl}{AAnAd}{{{An{AB`}}ABb}{{A@`{A@d}}}}{{A@dA@dcc}A@d{{Aj{h}}}}{{AAjcABd}A@d{{Bh{On}{{Bd{{A@`{On}}}}}}BjBl}}{AAnCn};;;;;;;;;;;;;;;;;;;;{{A@dABfcCj}A@d{{Ah{{Af{h}}}}}}{A@dA@d}``{ABhd}{{A@d{ABj{nCf}}Ad}A@d}{{A@dCfAd}A@d}{ABhABh}4{AAjAAj}{ABbABb}{ABlABl}{ABnABn}{AAnAAn}{AC`AC`}{ACbACb}{{ce}d{}{}}00000000{ACd{{Bf{ACf}}}}0``{{AAlACh}AAl}{A@d{{A@`{On}}}}{A@d{{A@`{ABh}}}}````{{ACd{Db{A@d}}}{{A@`{A@d}}}}0{{ABl{Db{A@d}}}{{A@`{A@d}}}}{A@dA@d}{{A@dA@d}A@d}{{}A@d}{{}ABb}{{}ABn}{{}AC`}{{}ACb}{Gnc{}}0000000000000000000{A@d{{A@`{Eb}}}}0{A@dEb}0{Gnd}{ABhd}1{{A@de}A@d{{Ah{n}}}{{ACj{}{{A@b{c}}}}}}22222222{{A@d{Bf{{Db{h}}}}}A@d}``{{A@dAd}{{A@`{Eb}}}}{{A@de}A@d{{Aj{h}}Dj}{{Ah{{Af{c}}}}}}``{ABh{{Bf{{A@`{On}}}}}}{{A@dGn}{{A@`{On}}}}{ABh{{A@`{On}}}}``{{A@dc}A@d{{Aj{h}}}}0{{A@dh}A@d}{AAlA@d}{ACd{{A@`{A@d}}}}00{ABl{{A@`{A@d}}}}{AAn{{A@`{A@d}}}}{A@dA@d}{{ACbIl}{{l{dIn}}}}{{AAlAd}AAl}{cc{}}0{HlA@d}1{AAjA@d}2222222{A@dACb}{ACdAd}0{ABlAd}`{{A@de}AAj{{Aj{h}}Dj}{{Ah{{Af{c}}}}}}{{A@dhcACl}AAj{{Ah{{Af{h}}}}}}1{{ABlAd}ABl}{{AAj{Bf{Gn}}}A@d}`{{AAlACn}AAl}`{{}Gn}000000000{{A@dA@dcc}A@d{{Aj{h}}}}{ce{}{}}000000000{ACd{{A@`{{Bf{AD`}}}}}}0{{A@dA@dccADb}A@d{{Ah{{Af{h}}}}}}{A@dAAl}{{AAlAd}AAl}{A@dA@d}{ADdA@d}17{{AAlc}AAl{{Ah{{Af{h}}}}}}{{A@dABf}A@d}``={{AAnAd}AAn}`{{A@dcADf{Bf{{An{J`}}}}{Bf{n}}}A@d{{Bh{On}{{Bd{{A@`{On}}}}}}BjBl}}{{A@dA@jADf{Bf{ABd}}Ad}A@d}666{{A@dADh}A@d}`{{A@dA@dn}{{A@`{A@d}}}}8{ACd{{Bf{Gn}}}}{ABl{{Bf{Gn}}}}{AAn{{Bf{Gn}}}}````={cABl{{Ah{ADj}}}}{cAAn{{Ah{ADj}}}}{{{An{{Af{ADl}}}}}ABl}{{{An{{Af{ADl}}}}}AAn}?={{A@d{AAf{AAd}}{AAf{AAh}}}{{A@`{AAb}}}}{{A@dA@dcc}A@d{{Aj{h}}}}`{ACdADj}{ABlADj}{AAnADj}{ACd{{Af{ADl}}}}{ABl{{Af{ADl}}}}{AAn{{Af{ADl}}}}```{A@d{{A@`{{ADn{OnOn}}}}}}``{{A@dhMj}A@d}{{ABlAd}ABl}{ACdAd}{ABlAd}{AAnAd}``{{A@dei}A@d{{Ah{n}}}{{ACj{}{{A@b{c}}}}}{{Ah{n}}}{{ACj{}{{A@b{g}}}}}}{A@dA@d}{{AAlc}AAl{{Ah{{Af{h}}}}}}{{A@dhcMn}AAj{{Ah{{Af{h}}}}}}``{ACd{{Bf{AE`}}}}{ABl{{Bf{AE`}}}}{AAn{{Bf{AE`}}}}```{{AAnAEb}{{A@`{On}}}}{{KnAEdAd}A@d}{{cABn}{{A@`{A@d}}}{{Ah{ADj}}}}{{{An{{Af{ADl}}}}ABn}{{A@`{A@d}}}}{{cAC`}{{A@`{A@d}}}{{Ah{ADj}}}}{{{An{{Af{ADl}}}}AC`}{{A@`{A@d}}}}{A@d{{A@`{ABd}}}}{{AAn{Bf{Gn}}}{{A@`{ABd}}}}`{{A@dc}A@d{{Ah{{Af{h}}}}}}0{{A@dA@dcc}A@d{{Aj{h}}}}{{A@dc}A@d{{Aj{h}}}}{{A@dce}A@d{{Aj{h}}}{{Aj{h}}}}``{{A@dADlAEf}{{A@`{d}}}}{{A@dADlAEh}{{A@`{d}}}}{{A@dEb{Bf{ACf}}AEh}{{A@`{d}}}}{{A@dADlAEj}{{A@`{d}}}}{{A@dADlAEl}{{A@`{d}}}}{{A@dEb{Bf{ACf}}AEl}{{A@`{d}}}}`{{A@dCdABf}A@d}``{{A@dcCj}A@d{{Gh{AEn}}}}{{A@dcCj}A@d{{Ah{{Af{h}}}}}}{{A@dGj}A@d}``{{AAlc}AAl{{Ah{n}}}}{A@dA@d}{{A@dABf}A@d}{{AAj{Bf{Gn}}}A@d}{A@d{{A@`{{ADn{AAb{AAf{AAd}}{AAf{AAh}}}}}}}}0{{A@dAd}{{A@`{Eb}}}}{ce{}{}}00000000{{A@dABfcCj}A@d{{Ah{{Af{h}}}}}}{{ABlAd}ABl}{c{{l{e}}}{}{}}0000000000000000000``{cOd{}}000000000{{A@d{Bf{{Db{Eb}}}}AF`}A@d}0{{A@de}A@d{{Ah{n}}}{{ACj{}{{A@b{c}}}}}}`{{AAlAFb}AAl}>7777777777{{AAlA@d}AAl}{{AAn{Bf{AFd}}}AAn}7{{A@dh}A@d}{{A@dc}A@d{{Ah{{Af{h}}}}}}0{{A@dAd}A@d}0{{ABl{Bf{n}}}ABl}{{A@dc}A@d{{Ah{{Af{A@d}}}}}}<{{ABl{Bf{ABd}}}ABl}{{ABlAFf}ABl}{{ABlGj}ABl}??{{AAnAd}AAn}{{ABl{Bf{Gn}}}ABl}{{AAn{Bf{Gn}}}AAn}{{ABlAd}ABl}{{ACdc}ACd{{Aj{{Bf{Gn}}}}}}{{ABlc}ABl{{Aj{{Bf{Gn}}}}}}4{{AAnc}AAn{{Aj{{Bf{Gn}}}}}}4{{ABl{Bf{AFh}}}ABl}{{A@dACb}A@d}{{ACdADl}ACd}{{ABlADl}ABl}{{AAnADl}AAn}{{ACd{An{{Af{ADl}}}}}ACd}{{ABl{An{{Af{ADl}}}}}ABl}{{AAn{An{{Af{ADl}}}}}AAn}{{A@dAd}A@d}0{{ABl{Bf{Gj}}}ABl}{{ACdAd}ACd}>{{AAnAd}AAn}3{{ACdc}ACd{{Aj{{Bf{AE`}}}}}}{{A@dn{Bf{ABf}}}A@d}{{ABlc}ABl{{Aj{{Bf{AE`}}}}}}{{ABl{Bf{AE`}}}ABl}{{AAn{Bf{AE`}}}AAn}{{AAnc}AAn{{Aj{{Bf{AE`}}}}}}{{ABl{Bf{ABd}}}ABl}{{AAn{Bf{ABd}}}AAn}{{ABlc}{{A@`{ABl}}}{{Bh{Kn}{{Bd{{A@`{Kn}}}}}}}}{{ABlGj}ABl}={{ABlGn}ABl}0>>{{ABlAd}ABl}?{A@dA@d}{{Onei{Bf{m}}Ad{Bf{h}}{Bf{n}}}{{A@`{On}}}{{Ah{n}}}{{ACj{}{{A@b{c}}}}}{{Ah{n}}}{{ACj{}{{A@b{g}}}}}{{Ah{n}}}{{ACj{}{{A@b{k}}}}}}0`````{ce{}{}}0{Gnc{}}0{Gnd}``{cc{}}{{}Gn}4{c{{l{e}}}{}{}}0{cOd{}}6````{AFn{{Bf{h}}}}{AFn{{Bf{AG`}}}}{AFn{{Bf{AGb}}}}{AGd{{Bf{AGb}}}}::::999988`{{AGdOn}{{A@`{Bb}}}}````{{AFnIl}AGj}{{AGhIl}AGj}::`99=={AFnAd}{{AFnKn}{{A@`{Lb}}}}::::99??{{AAb{AAf{AAd}}{AAf{AAh}}}{{A@`{{AGl{AFj}}}}}}```````````````````````````````````````````````````````````````````````````````{{cb}d{}}0000000000000000{{HbCd{Bf{AGn}}}{{l{Cdj}}}}00{AB`Ad}00{AB`Cn}`{ce{}{}}0000000000000000000000000000000000000````{NhNh}{AClACl}{MnMn}{HbHb}{AEfAEf}{AEhAEh}{AEjAEj}{ADbADb}{ACnACn}{AFbAFb}{AElAEl}{AH`AH`}{MlMl}{AHbAHb}{AHdAHd}{A@hA@h}{HlHl}{{ce}d{}{}}0000000000000000```{{HbHb}AHf}`{{ce}AHf{}{}}``{Hl{{l{{An{Kn}}j}}}}`{HbCd}{HbAd}{{}Nh}{{}ACl}{{}Mn}{{}AEf}{{}AEh}{{}AEj}{{}ADb}{{}AFb}{{}AEl}{{}Ml}{{}AHd}{{}A@h}{{}Hl}{Gnc{}}0000000000000000000000000000000000000`{HlEb}0{c{{l{Nh}}}Hj}{c{{l{ACl}}}Hj}{c{{l{Mn}}}Hj}{c{{l{Hb}}}Hj}{c{{l{AEf}}}Hj}{c{{l{AEh}}}Hj}{c{{l{AEj}}}Hj}{c{{l{ADb}}}Hj}{c{{l{ACn}}}Hj}{c{{l{AFb}}}Hj}{c{{l{AEl}}}Hj}{c{{l{AH`}}}Hj}{c{{l{Ml}}}Hj}{c{{l{AHb}}}Hj}{c{{l{AHd}}}Hj}{c{{l{A@h}}}Hj}{c{{l{Hl}}}Hj}`{{HlEb{ADn{GnGn}}AHh{AHl{EbEbAHj}}}{{l{dIn}}}}{Gnd}000000000000000000{{NhNh}Ad}{{AClACl}Ad}{{MnMn}Ad}{{HbHb}Ad}{{AEfAEf}Ad}{{AEhAEh}Ad}{{AEjAEj}Ad}{{ADbADb}Ad}{{ACnACn}Ad}{{AFbAFb}Ad}{{AElAEl}Ad}{{AH`AH`}Ad}{{MlMl}Ad}{{AHbAHb}Ad}{{AHdAHd}Ad}{{A@hA@h}Ad}{{ce}Ad{}{}}00000000000000000000000000000000000`{{NhIl}{{l{dIn}}}}{{AClIl}{{l{dIn}}}}{{MnIl}{{l{dIn}}}}{{HbIl}{{l{dIn}}}}0{{AB`Il}{{l{dIn}}}}{{AEfIl}{{l{dIn}}}}{{AEhIl}{{l{dIn}}}}{{AEjIl}{{l{dIn}}}}{{ADbIl}{{l{dIn}}}}{{ACnIl}{{l{dIn}}}}0{{AFbIl}{{l{dIn}}}}0{{AElIl}{{l{dIn}}}}{{AH`Il}{{l{dIn}}}}{{MlIl}{{l{dIn}}}}{{AHbIl}{{l{dIn}}}}{{AHdIl}{{l{dIn}}}}{{A@hIl}{{l{dIn}}}}{{HlIl}{{l{dIn}}}}``{cc{}}00000000{ACnADb}1111111111`{AHbCf}{{AHn{Db{Bb}}ACl}{{l{{ADn{Bb{Db{Bb}}AGf}}j}}}}{{AClc}dLf}{{Mnc}dLf}{{Hbc}dLf}{{AEfc}dLf}{{AEhc}dLf}{{AEjc}dLf}{{ADbc}dLf}{{ACnc}dLf}{{AFbc}dLf}{{AElc}dLf}{{AH`c}dLf}{{Mlc}dLf}{{AHbc}dLf}{{AHdc}dLf}{{A@hc}dLf}``````{{}Gn}000000000000000000{ce{}{}}000000000000000000{ACnAd}{{Hb{Bf{n}}}Ad}{HbAd}0``{Mbh}{AI`h}{AHbh}````{AHbAHb}``{HbCd}5{{HbCd}Hb}`1{AFbAd}7{CdHb}{ACnADb}````{nHb}`{{HbHb}{{Bf{AHf}}}}````{{AHn{Db{Bb}}Mn}{{l{{ADn{Bb{Db{Bb}}AGf}}j}}}}`{{AB`AEb}{{l{Onj}}}}{{AB`{Bf{Gn}}}{{l{{An{Kn}}j}}}}`{{Nhc}lNl}{{AClc}lNl}{{Mnc}lNl}{{Hbc}lNl}{{AEfc}lNl}{{AEhc}lNl}{{AEjc}lNl}{{ADbc}lNl}{{ACnc}lNl}{{AFbc}lNl}{{AElc}lNl}{{AH`c}lNl}{{Mlc}lNl}{{AHbc}lNl}{{AHdc}lNl}{{A@hc}lNl}{{Hlc}lNl}`````{ADbn}`{Hl{{l{{ADn{AAb{AAf{AAd}}{AAf{AAh}}}}j}}}}{AHb{{Bf{AIb}}}}{ce{}{}}0000000000000000{cEb{}}00`{{HbCd{Bf{AGn}}ceg}{{l{Cdj}}}{{Bh{Cd}{{Bd{Cd}}}}}{{Bh{Cd}{{Bd{AId}}}}}{{Bh{AId}{{Bd{Cd}}}}}}{{HbCd{Bf{AGn}}}{{l{Cdj}}}}00{c{{l{e}}}{}{}}00000000000000{AIb{{l{AHbj}}}}11111111111111111111111{cOd{}}000000000000000000`6666666666666666666`{HbCd}{HbAd}``{{ADbACh}ADb}````````````````````````````````````````````````````````","D":"GEj","p":[[5,"Private",3063],[1,"unit"],[5,"MetaNameSpace",6],[6,"Expr",6],[6,"PolarsError",3064],[6,"Result",3065],[1,"str"],[5,"ArrayNameSpace",6],[5,"ListNameSpace",6],[1,"bool"],[1,"slice"],[10,"AsRef",3066],[10,"Into",3066],[10,"FunctionOutputField",6],[5,"Arc",3067],[5,"SpecialEq",6],[5,"Series",3068],[17,"Output"],[6,"Option",3069],[10,"Fn",3070],[10,"Send",3071],[10,"Sync",3071],[6,"VisitRecursion",3072],[10,"FnMut",3070],[6,"FunctionExpr",6],[1,"i64"],[6,"DataType",3073],[5,"SortOptions",3074],[5,"SortMultipleOptions",3074],[10,"SeriesUdf",6],[10,"Any",3075],[6,"AggExpr",6],[5,"Vec",3076],[1,"u64"],[5,"BinaryNameSpace",1374],[6,"Operator",6],[10,"Clone",3077],[1,"array"],[1,"i32"],[10,"RenameAliasFn",6],[5,"String",3078],[5,"UserDefinedFunction",6],[10,"SeriesBinaryUdf",6],[5,"CategoricalNameSpace",6],[5,"When",6],[5,"Then",6],[5,"ChainedWhen",6],[5,"ChainedThen",6],[6,"Excluded",6],[6,"BooleanFunction",6],[6,"CategoricalFunction",6],[6,"PowFunction",6],[5,"DatetimeArgs",6],[5,"DurationArgs",6],[5,"RollingCovOptions",6],[5,"StrptimeOptions",6],[5,"JoinOptions",6],[6,"WindowType",6],[6,"WindowMapping",6],[10,"IntoVec",3079],[1,"u8"],[10,"ExprEvalExtension",6],[1,"usize"],[1,"f64"],[5,"Duration",2389],[6,"ClosedWindow",3080],[6,"TimeUnit",3081],[10,"BinaryUdfOutputField",6],[10,"Deserializer",3082],[6,"DslPlan",2389],[6,"NullBehavior",3083],[5,"DateLikeNameSpace",1395],[10,"Sized",3071],[10,"ListNameSpaceExtension",6],[5,"EWMOptions",3084],[5,"StructNameSpace",6],[6,"FillNullStrategy",3085],[5,"Formatter",3086],[5,"Error",3086],[10,"UdfSchema",6],[1,"i8"],[1,"u16"],[1,"i16"],[1,"f32"],[1,"u32"],[6,"StringFunction",3087],[6,"RangeFunction",3088],[6,"ListFunction",3089],[6,"BinaryFunction",3090],[6,"TemporalFunction",3091],[6,"StructFunction",3092],[6,"ArrayFunction",3093],[6,"BusinessFunction",3094],[5,"FunctionOptions",3095],[5,"Schema",3096],[6,"Context",3097],[5,"Field",3098],[5,"FieldsMapper",6],[10,"Hasher",3099],[6,"InterpolationMethod",3100],[10,"IntoListNameSpace",6],[10,"Display",3086],[6,"ClosedInterval",3101],[5,"ExprNameNameSpace",6],[10,"Literal",2389],[10,"FnOnce",3070],[5,"PythonUdfExpression",1779],[5,"UnitVec",3102],[6,"QuantileInterpolOptions",3103],[5,"RankOptions",2389],[5,"RollingGroupOptions",2389],[5,"RollingOptionsFixedWindow",3104],[5,"Float64Type",3105],[5,"ChunkedArray",3106],[10,"Copy",3071],[5,"RollingOptions",2389],[6,"SearchSortedSide",3107],[10,"Serializer",3108],[6,"IsSorted",3109],[5,"StringNameSpace",1824],[6,"ListToStructWidthStrategy",3110],[5,"TypeId",3075],[6,"Roll",3111],[6,"NonExistent",3112],[6,"RollingFunction",1624],[6,"TrigonometricFunction",1663],[5,"DataFrame",3113],[8,"PolarsResult",3064],[17,"Item"],[5,"LazyFrame",1892],[10,"IntoParallelIterator",3114],[5,"UnionArgs",2389],[5,"PythonFunction",1779],[5,"PyAny",3115],[5,"Py",3116],[1,"char"],[5,"Node",3117],[6,"IR",3118],[5,"Arena",3117],[6,"AExpr",3119],[5,"LazyGroupBy",1892],[5,"JoinBuilder",1892],[5,"LazyJsonLineReader",1892],[10,"AnonymousScan",2389],[5,"ScanArgsAnonymous",1892],[8,"SchemaRef",3096],[8,"IdxSize",3120],[5,"InProcessQuery",1892],[8,"PlHashMap",3121],[5,"LazyCsvReader",1892],[5,"ScanArgsIpc",1892],[5,"ScanArgsParquet",1892],[5,"OptState",1892],[10,"LazyFileListReader",1892],[5,"CloudOptions",3122],[6,"JoinCoalesce",3123],[10,"IntoIterator",3124],[5,"DynamicGroupOptions",2389],[6,"JoinType",2389],[8,"PathIterator",1892],[5,"JoinArgs",2389],[10,"IntoLazy",1892],[8,"AllowedOptimizations",1892],[5,"MeltArgs",3125],[5,"Path",3126],[5,"PathBuf",3126],[1,"tuple"],[5,"RowIndex",3127],[5,"AnonymousScanArgs",2389],[8,"PyObject",3116],[5,"CsvWriterOptions",2389],[5,"IpcWriterOptions",2389],[5,"JsonWriterOptions",2389],[5,"ParquetWriteOptions",2389],[8,"String",3128],[6,"UniqueKeepStrategy",3113],[6,"JoinValidation",2389],[8,"NonZeroUsize",3129],[6,"CsvEncoding",3130],[6,"NullValues",3130],[10,"Executor",2329],[5,"Dummy",2329],[10,"PhysicalExpr",2345],[10,"PartitionedAggregation",2345],[10,"StatsEvaluator",3131],[5,"PhysicalIoHelper",2345],[6,"GroupsProxy",3132],[5,"AggregationContext",2345],[8,"Result",3086],[5,"Box",3133],[6,"Tz",3134],[6,"RankMethod",2389],[6,"LiteralValue",2389],[5,"AnonymousScanOptions",2389],[6,"Ordering",3135],[5,"DotNode",3136],[5,"RandomState",3137],[5,"HashMap",3138],[10,"PolarsTemporalGroupby",2389],[5,"Null",2389],[6,"AnyValue",3139],[5,"NaiveDateTime",3140],[15,"Quantile",1286],[15,"Min",1286],[15,"Max",1286],[15,"IsBetween",1571],[15,"Any",1571],[15,"All",1571],[15,"SortBy",1296],[15,"Filter",1296],[15,"Cast",1296],[15,"Sort",1296],[15,"Gather",1296],[15,"RenameAlias",1296],[15,"Ternary",1296],[15,"Function",1296],[15,"Window",1296],[15,"AnonymousFunction",1296],[15,"Slice",1296],[15,"BinaryExpr",1296],[15,"QCut",1574],[15,"Entropy",1574],[15,"Log",1574],[15,"Hist",1574],[15,"Cut",1574],[15,"EwmMeanBy",1574],[15,"Correlation",1574],[15,"Round",1574],[15,"RoundSF",1574],[15,"Clip",1574],[15,"BackwardFill",1574],[15,"ForwardFill",1574],[15,"Random",1574],[15,"GatherEvery",1574],[15,"Rank",1574],[15,"EwmMean",1574],[15,"EwmStd",1574],[15,"EwmVar",1574],[15,"ValueCounts",1574],[15,"Replace",1574],[15,"CumCount",1574],[15,"CumSum",1574],[15,"CumProd",1574],[15,"CumMin",1574],[15,"CumMax",1574],[15,"TopK",1574],[15,"TopKBy",1574],[15,"GroupBy",3008],[15,"Union",3008],[15,"Sort",3008],[15,"Cache",3008],[15,"ExtContext",3008],[15,"DataFrameScan",3008],[15,"Select",3008],[15,"HStack",3008],[15,"Scan",3008],[15,"MapFunction",3008],[15,"Filter",3008],[15,"Distinct",3008],[15,"Slice",3008],[15,"Sink",3008],[15,"Join",3008],[15,"HConcat",3008],[15,"PythonScan",3008],[15,"Range",3060]],"b":[[450,"impl-Default-for-SpecialEq%3CArc%3Cdyn+SeriesBinaryUdf%3E%3E"],[451,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[452,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[521,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[522,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[523,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CSeries%3E"],[575,"impl-Expr"],[576,"impl-PartialEq-for-Expr"],[579,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[580,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[653,"impl-Debug-for-Expr"],[654,"impl-Display-for-Expr"],[656,"impl-Display-for-Operator"],[657,"impl-Debug-for-Operator"],[659,"impl-Display-for-BooleanFunction"],[660,"impl-Debug-for-BooleanFunction"],[661,"impl-Display-for-CategoricalFunction"],[662,"impl-Debug-for-CategoricalFunction"],[663,"impl-Display-for-PowFunction"],[664,"impl-Debug-for-PowFunction"],[665,"impl-Debug-for-FunctionExpr"],[666,"impl-Display-for-FunctionExpr"],[692,"impl-From%3Cu8%3E-for-Expr"],[693,"impl-From%3Ci8%3E-for-Expr"],[694,"impl-From%3Cu16%3E-for-Expr"],[695,"impl-From%3Ci16%3E-for-Expr"],[696,"impl-From%3Cf32%3E-for-Expr"],[697,"impl-From%3CAggExpr%3E-for-Expr"],[698,"impl-From%3Cf64%3E-for-Expr"],[700,"impl-From%3Cbool%3E-for-Expr"],[701,"impl-From%3C%26str%3E-for-Expr"],[702,"impl-From%3Cu64%3E-for-Expr"],[703,"impl-From%3Cu32%3E-for-Expr"],[704,"impl-From%3Ci64%3E-for-Expr"],[705,"impl-From%3Ci32%3E-for-Expr"],[708,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[709,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[711,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[712,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[713,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[714,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[715,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[716,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[717,"impl-From%3CBusinessFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[718,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[719,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[723,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[724,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[725,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[727,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[759,"impl-Expr"],[760,"impl-Hash-for-Expr"],[1022,"impl-Serialize-for-SpecialEq%3CSeries%3E"],[1023,"impl-Serialize-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[1024,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[1650,"impl-Display-for-RollingFunction"],[1651,"impl-Debug-for-RollingFunction"],[1692,"impl-Display-for-TrigonometricFunction"],[1693,"impl-Debug-for-TrigonometricFunction"],[2052,"impl-From%3CDslPlan%3E-for-LazyFrame"],[2054,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[2287,"impl-LazyFileListReader-for-LazyCsvReader"],[2288,"impl-LazyCsvReader"],[2289,"impl-LazyFileListReader-for-LazyJsonLineReader"],[2290,"impl-LazyJsonLineReader"],[2308,"impl-LazyFileListReader-for-LazyCsvReader"],[2309,"impl-LazyCsvReader"],[2310,"impl-LazyJsonLineReader"],[2311,"impl-LazyFileListReader-for-LazyJsonLineReader"],[2729,"impl-Debug-for-Duration"],[2730,"impl-Display-for-Duration"],[2736,"impl-Display-for-JoinType"],[2737,"impl-Debug-for-JoinType"],[2738,"impl-Debug-for-JoinValidation"],[2739,"impl-Display-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEoIAAEEABEAFwALACQAAQAoAA0ANwAFAD4ABgBGAAIASwAAAE0AEgBhABIAdQAAAHcAAwB8AA0AiwALAJgAAgCcABkAuQAIAMMABADJAAMAzwAIANkAAQDcAAAA3gAbAPsAAAAAAQAAAwEBAAcBAAANAQAADwEAABoBAAAdAQAAJAEAACYBAQArAQAALgE3AGgBAABqAQAAbAEBAHEBAAB4ASkApQEAAL8BDADNAUgAGAIAABoCGwA3AgAAOQIAAD8CAABBAg0AUAIgAHkCAAB8AgEAgQIAAIcCAACKAhkApQIAALUCBgC9AgUAxQIBAMgCCADUAgIA2AIAAN8CAADiAgAA5AIAAOkCAQDuAgUA9wIAAPkCCwAIAwEACwMbAEcDAgBLAwAAXgMAAGYDAABzAwAAdgMFAH8DAACCAwAAkgMAAJUDAgCdAwIAoQMDAKoDAQCuAwIAtAMBAL8DAADBAwEAyAMAAMoDAADSAwEA2AMBANsDAADgAwIA8gMFAPkDEQAUBAAAGwQAACIEAAAnBAAAKQQAACsEAAAxBAAANgQAADgEAAA6BAIAQgQVAFkEBgBkBDcAngQAAKAEHQDKBAAAzAQcAOwEAQD9BAAAAQUBAAYFEwAdBQEAIAUBACMFAQAmBQQALAUyAGAFAwBlBQIAagUCAG8FAwB3BQEAgAUCAIYFAACIBQAAlQUAAKQFAwCsBcgAdgYBAHkGJQCgBgEAowYGAK4GAAC8BgAAyQYBANAGAQDaBgIA3gYDAOcGAwDvBh0ADgcAABAHAgAVBwsAIgcDACoHAgAuBwAAMQcAADYHAgA6BwEAWgcDAGYHAwBtBwAAbwcNAIAHAQCEBxUAmwcBAKAHEQC0BwEAuAcAAL8HAADCBxgA3wcCAOMHBwD+BwEAAQgAAAUIAAAHCAAAEAgCABkIAAAbCAoANwgBADwIAQBACAAAQggAAEcIAQBNCAMAUggDAFgIAABaCAAAXAgEAGoIAwB3CAQAfQgAAIEIAQCECAAAkAgAAJ0IAQCgCAkAqwgTAMEICQDOCAEA0QgJANwIAADkCAEA8AgAAPIIAAD3CAEA+ggBAAUJAAAICQAAFQkFABwJBgAkCQAAJgkFAC4JAAAxCQoAPQkAAEAJAABCCQEARgkCAEsJAABNCQ4AXwkAAGIJAgBmCQMAbAkAAHIJAQB4CQAAegkGAIQJAgCICQAAiwkKAJcJAgCcCQAAngkAAKQJFAC8CScA6AkhAAsKBAAUCkkAXwpGAKcKFQDHCgAA0goAANQKEQDnCgAA6goSABALAQAUCwAAFwsCAB0LAQAgCwMAJQsAACgLAAAqCwIALgsBADILAgA4CxUATwtqALsLAQC/CzgA"}],\
["polars_ops",{"t":"CCCCKKKMNNNNNNNNCMNNNNCKKMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKMKKCMIIPPKKPIFGKPGGPPIPPPPPKNNNNHNNENNHNNNNNNNNNNNNNNNNNNNNNONNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNONNNNHONONNNNNNNNNNNNNNNNNNONEEPKPPGKKNMMMNNHHHNNHHNNNNNNNNNNNNNHNNHHHHHHHNNNNNN","n":["chunked_array","frame","prelude","series","AsBinary","BinaryNameSpaceImpl","ChunkedSet","as_binary","contains","contains","contains_chunked","contains_chunked","ends_with","ends_with","ends_with_chunked","ends_with_chunked","list","scatter","starts_with","starts_with","starts_with_chunked","starts_with_chunked","strings","AsList","ListNameSpaceImpl","as_list","join_literal","join_literal","join_many","join_many","lst_arg_max","lst_arg_max","lst_arg_min","lst_arg_min","lst_concat","lst_concat","lst_get","lst_get","lst_join","lst_join","lst_lengths","lst_lengths","lst_max","lst_max","lst_mean","lst_mean","lst_median","lst_median","lst_min","lst_min","lst_n_unique","lst_n_unique","lst_reverse","lst_reverse","lst_shift","lst_shift","lst_slice","lst_slice","lst_sort","lst_sort","lst_std","lst_std","lst_sum","lst_sum","lst_unique","lst_unique","lst_unique_stable","lst_unique_stable","lst_var","lst_var","same_type","same_type","AsString","as_string","DataFrameOps","IntoDf","join","to_df","ChunkJoinIds","ChunkJoinOptIds","CoalesceColumns","Cross","CrossJoin","DataFrameJoinOps","Inner","InnerJoinIds","JoinArgs","JoinCoalesce","JoinDispatch","JoinSpecific","JoinType","JoinValidation","KeepColumns","Left","LeftJoinIds","ManyToMany","ManyToOne","OneToMany","OneToOne","Outer","SeriesJoin","__clone_box","__clone_box","__clone_box","__clone_box","_coalesce_outer_join","_create_left_df_from_slice","_create_left_df_from_slice","_finish_join","_finish_left_join","_finish_left_join","_join_suffix_name","_left_join_from_series","_left_join_from_series","_outer_join_from_series","_outer_join_from_series","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","coalesce","coalesce","cross_join","cross_join","cross_join_dfs","cross_join_dfs","default","default","default","default_join_ids","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","hash","hash","hash","hash","hash_join_inner","hash_join_inner","hash_join_outer","hash_join_outer","how","init","init","init","init","inner_join","into","into","into","into","is_asof","join","join_nulls","left_join","needs_checks","new","outer_join","private_left_join_multiple_keys","slice","suffix","suffix","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","validation","with_coalesce","DataFrameJoinOps","DataFrameOps","Any","ArgAgg","Left","Right","SearchSortedSide","SeriesMethods","SeriesSealed","__clone_box","arg_max","arg_min","as_series","borrow","borrow_mut","clip","clip_max","clip_min","clone","clone_into","coalesce_series","convert_to_unsigned_index","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","is_positive_idx_uncertain","is_sorted","is_sorted","max_horizontal","mean_horizontal","min_horizontal","negate","negate_bitwise","new_int_range","sum_horizontal","to_owned","try_from","try_into","type_id","value_counts","value_counts"],"q":[[0,"polars_ops"],[4,"polars_ops::chunked_array"],[23,"polars_ops::chunked_array::list"],[72,"polars_ops::chunked_array::strings"],[74,"polars_ops::frame"],[78,"polars_ops::frame::join"],[230,"polars_ops::prelude"],[232,"polars_ops::series"],[281,"polars_core::datatypes"],[282,"polars_core::datatypes"],[283,"polars_core::series"],[284,"polars_error"],[285,"core::marker"],[286,"core::option"],[287,"core::iter::traits::collect"],[288,"polars_core::datatypes"],[289,"polars_core::chunked_array::ops::sort::options"],[290,"polars_core::frame"],[291,"dyn_clone::sealed"],[292,"alloc::string"],[293,"core::fmt"],[294,"core::fmt"],[295,"polars_arrow::array::primitive"],[296,"core::convert"],[297,"core::result"],[298,"core::any"],[299,"core::fmt"]],"i":[0,0,0,0,0,0,0,1,3,3,3,3,3,3,3,3,0,7,3,3,3,3,0,0,0,15,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,25,0,0,0,26,0,0,34,35,0,0,35,0,0,0,0,34,0,0,34,35,0,36,36,36,36,35,0,32,34,35,36,0,30,30,0,30,30,0,30,30,30,30,32,34,35,36,32,34,35,36,32,34,35,36,32,34,35,36,34,32,37,37,37,37,32,34,36,0,32,34,35,36,32,34,35,36,32,34,35,36,32,34,35,36,32,32,32,34,34,34,35,35,35,36,36,36,32,34,35,35,36,36,32,32,34,35,36,32,34,35,36,43,43,43,43,32,32,34,35,36,46,32,34,35,36,35,46,32,46,36,32,46,0,32,32,32,32,34,35,36,35,36,32,34,35,36,32,34,35,36,32,34,35,36,32,32,0,0,52,0,52,52,0,0,0,52,50,50,51,52,52,0,0,0,52,52,0,0,52,52,52,52,52,52,52,52,52,52,52,52,52,0,54,54,0,0,0,0,0,0,0,52,52,52,52,54,54],"f":"```````{bd}{{f{j{h}}}l}0{{fd}l}01100`{{n{j{A`}}e}{{Ad{Ab}}}Af{{Al{}{{Ah{{Aj{c}}}}}}}}2211```{AnB`}{{BbBdBf}{{Ad{Bh}}}}0{{BbBhBf}{{Ad{Bh}}}}0{BbBj}000{{Bb{j{Ab}}}{{Ad{B`}}}}0{{BbBlBf}{{Ad{Ab}}}}03322{Bb{{Ad{Ab}}}}0{BbAb}00011{Bb{{Ad{Bj}}}}0{BbB`}0{{BbAb}{{Ad{B`}}}}0{{BbBlBn}B`}0{{BbC`}{{Ad{B`}}}}0{{Bbh}Ab}077{Bb{{Ad{B`}}}}00011{{BbB`}B`}0`{CbBh}```{CdCf}```````````````````````{{cCh}Cj{}}000{{Cf{j{Bd}}{j{Bd}}{Aj{Bd}}Cf}Cf}{{Cl{j{A`}}BfBf}Cf}0`{{ClCnCfD`}{{Ad{Cf}}}}0{{BdBd}Db}{{ClCfAbAbD`Bf{Aj{{j{Bd}}}}}{{Ad{Cf}}}}0{{ClCfAbAbD`}{{Ad{Cf}}}}0{ce{}{}}0000000{D`D`}{DdDd}{DfDf}{DhDh}{{ce}Cj{}{}}000{{DdDf}Bf}`{{DjCf{Aj{Bd}}{Aj{{Dl{BlBn}}}}}{{Ad{Cf}}}}0{{DjCf{Aj{{Dl{BlBn}}}}Bf}{{Ad{{Dl{CfCf}}}}}}0{{}D`}{{}Dd}{{}Dh}{{}Dn}{Bnc{}}0000000{BnCj}000{{D`D`}Bf}{{DdDd}Bf}{{DfDf}Bf}{{DhDh}Bf}{{ce}Bf{}{}}00000000000{{D`E`}Eb}{{DdE`}Eb}{{DfE`}Eb}0{{DhE`}Eb}0{DfD`}{cc{}}000{{D`c}CjEd}{{Ddc}CjEd}{{Dfc}CjEd}{{Dhc}CjEd}{{EfAbDhBf}{{Ad{{Dl{EhBf}}}}}}0{{EfAbDhBf}{{Ad{{Dl{{Ej{A`}}{Ej{A`}}}}}}}}0`{{}Bn}000{{ElCfee}{{Ad{Cf}}}{{En{Bd}}}{{Al{}{{Ah{c}}}}}}{ce{}{}}000{DfBf}{{ElCfeeD`}{{Ad{Cf}}}{{En{Bd}}}{{Al{}{{Ah{c}}}}}}`3{DhBf}=4{{CfCfBf}{{Ad{Cn}}}}`{D`Bd}`5555{cDb{}}0{c{{F`{e}}}{}{}}0000000{cFb{}}000`{{D`Dd}D`}`````````{{cCh}Cj{}}{Fd{{Aj{Bn}}}}0{FfAb}<<{{AbAbAb}{{Ad{Ab}}}}{{AbAb}{{Ad{Ab}}}}0{FhFh}{{ce}Cj{}{}}{{{j{Ab}}}{{Ad{Ab}}}}{{AbBn}{{Ad{Bj}}}}{{}Fh}{Bnc{}}0{BnCj}{{FhFh}Bf}{{ce}Bf{}{}}00{{FhE`}{{F`{CjFj}}}}{cc{}}{{Fhc}CjEd}{{}Bn}{ce{}{}}{AbBf}{{FlC`}{{Ad{Bf}}}}0{{{j{Ab}}}{{Ad{{Aj{Ab}}}}}}00{Ab{{Ad{Ab}}}}0{{BlBd}{{Ad{Ab}}}}25{c{{F`{e}}}{}{}}0{cFb{}}{{FlBfBf}{{Ad{Cf}}}}0","D":"Eb","p":[[10,"AsBinary",4],[8,"BinaryChunked",281],[10,"BinaryNameSpaceImpl",4],[1,"u8"],[1,"slice"],[8,"BooleanChunked",281],[10,"ChunkedSet",4],[8,"IdxSize",282],[5,"Series",283],[8,"PolarsResult",284],[10,"Copy",285],[17,"Item"],[6,"Option",286],[10,"IntoIterator",287],[10,"AsList",23],[8,"ListChunked",281],[10,"ListNameSpaceImpl",23],[1,"str"],[1,"bool"],[8,"StringChunked",281],[8,"IdxCa",288],[1,"i64"],[1,"usize"],[5,"SortOptions",289],[10,"AsString",72],[10,"IntoDf",74],[5,"DataFrame",290],[5,"Private",291],[1,"unit"],[10,"JoinDispatch",78],[8,"LeftJoinIds",78],[5,"JoinArgs",78],[5,"String",292],[6,"JoinCoalesce",78],[6,"JoinType",78],[6,"JoinValidation",78],[10,"CrossJoin",78],[1,"tuple"],[8,"ChunkJoinOptIds",78],[5,"Formatter",293],[8,"Result",293],[10,"Hasher",294],[10,"SeriesJoin",78],[8,"InnerJoinIds",78],[5,"PrimitiveArray",295],[10,"DataFrameJoinOps",78],[10,"AsRef",296],[6,"Result",297],[5,"TypeId",298],[10,"ArgAgg",232],[10,"SeriesSealed",232],[6,"SearchSortedSide",232],[5,"Error",293],[10,"SeriesMethods",232]],"b":[[172,"impl-Debug-for-JoinType"],[173,"impl-Display-for-JoinType"],[174,"impl-Debug-for-JoinValidation"],[175,"impl-Display-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPAAEgAAAAgACwABAA8AAwAVAA8AKQA2AGQABgBtABkAiQAoALYADADIAAAAygAAAMwAAQDPABoA6wAFAPMAAgD5AAwABwEBAAsBDAA="}],\
["polars_sql",{"t":"FNNNNNNNNNNNCNNNNCNNNNNHNNNNNNNPGPFFKNNOONNNNNNOONONNNNOMNNNNNNNNNNNNNNNNNONNNMNNNNNONNNNOMNONNNNNNNNNNNNNNHH","n":["SQLContext","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","execute","from","function_registry","get_table_map","get_tables","init","into","keywords","new","new_from_table_map","register","registry","registry_mut","sql_expr","to_owned","try_from","try_into","type_id","unregister","vzip","with_function_registry","Aggregation","Context","Default","DefaultFunctionRegistry","FunctionOptions","FunctionRegistry","__clone_box","__clone_box","allow_group_aware","allow_rename","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_to_supertypes","changes_length","check_lengths","check_lengths","clone","clone","clone_into","clone_into","collect_groups","contains","contains","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt_str","from","from","from","get_udf","get_udf","hash","init","init","init","input_wildcard_expansion","into","into","into","is_groups_sensitive","pass_name_to_apply","register","register","returns_scalar","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","all_functions","all_keywords"],"q":[[0,"polars_sql"],[31,"polars_sql::function_registry"],[107,"polars_sql::keywords"],[109,"dyn_clone::sealed"],[110,"polars_lazy::frame"],[111,"polars_error"],[112,"alloc::string"],[113,"polars_utils::aliases"],[114,"alloc::vec"],[115,"alloc::sync"],[116,"polars_plan::dsl::expr"],[117,"core::convert"],[118,"core::result"],[119,"core::any"],[120,"core::fmt"],[121,"core::fmt"],[122,"core::option"],[123,"core::hash"]],"i":[0,3,3,3,3,3,3,3,3,3,3,3,0,3,3,3,3,0,3,3,3,3,3,0,3,3,3,3,3,3,3,19,0,19,0,0,0,17,19,17,17,20,17,19,20,17,19,17,17,17,17,17,19,17,19,17,11,20,17,20,17,19,20,17,19,20,17,19,17,17,17,17,17,19,17,20,17,19,11,20,17,20,17,19,17,20,17,19,17,17,11,20,17,17,19,20,17,19,20,17,19,20,17,19,20,17,19,0,0],"f":"`{{cb}d{}}{ce{}{}}0{ff}{{ce}d{}{}}{{}f}{hc{}}0{hd}{{fj}{{n{l}}}}{cc{}}`{f{{Ab{A`l}}}}{f{{Ad{A`}}}}{{}h}:`7{{{Ab{A`l}}}f}{{fjl}d}{f{{Ah{Af}}}}{fAf}{c{{n{Aj}}}{{Al{j}}}}?{c{{An{e}}}{}{}}0{cB`{}}{{fj}d}{ce{}{}}{{f{Ah{Af}}}f}``````{{cb}d{}}0``222222``{BbBd}`{BbBb}{BfBf}{{ce}d{}{}}0`{{Afj}Bd}{{Bhj}Bd}{{}Bb}{hc{}}00000{hd}00{{BbBb}Bd}{{ce}Bd{}{}}00{{BbBj}{{An{dBl}}}}{{BfBj}{{An{dBl}}}}`{cc{}}00{{Afj}{{n{{C`{Bn}}}}}}{{Bhj}{{n{{C`{Bn}}}}}}{{Bbc}dCb}{{}h}00`{ce{}{}}00{BbBd}`{{AfjBn}{{n{d}}}}{{BhjBn}{{n{d}}}}`33{c{{An{e}}}{}{}}00000{cB`{}}00555{{}{{Ad{j}}}}0","D":"Dh","p":[[5,"Private",109],[1,"unit"],[5,"SQLContext",0],[1,"usize"],[1,"str"],[5,"LazyFrame",110],[8,"PolarsResult",111],[5,"String",112],[8,"PlHashMap",113],[5,"Vec",114],[10,"FunctionRegistry",31],[5,"Arc",115],[6,"Expr",116],[10,"AsRef",117],[6,"Result",118],[5,"TypeId",119],[5,"FunctionOptions",31],[1,"bool"],[6,"Context",31],[5,"DefaultFunctionRegistry",31],[5,"Formatter",120],[5,"Error",120],[5,"UserDefinedFunction",121],[6,"Option",122],[10,"Hasher",123]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEkADAACAAgAEAAAABkAAwAeAAAAIQAAACQAAAAmABEAOgARAFAABABaAAAAXAAAAF4ADQA="}],\
["polars_time",{"t":"PGFPPKKKKKPFCHHMMOOCMCHMMMECKPPPPPGKNMNNNNNNNNNNNNNNCNNNNNNNFRKKNNNNNNNNNHNNONMONNMNNPFFGPPFPGPPPPPPPGPEPPPFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKKMNNNNNNNNNNNNNNNNNN","n":["Both","ClosedWindow","Duration","Left","None","PolarsMonthEnd","PolarsMonthStart","PolarsRound","PolarsTruncate","PolarsUpsample","Right","Window","chunkedarray","date_range","in_nanoseconds_window","month_end","month_start","offset","parsed_int","prelude","round","series","time_range","truncate","upsample","upsample_stable","StringMethods","string","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","__clone_box","as_string","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","pattern","to_owned","try_from","try_from_with_unit","try_into","type_id","Both","Bounds","BoundsIter","ClosedWindow","DataPoint","DataPoint","Duration","Friday","Label","Left","Left","Monday","None","Right","Right","Saturday","StartBy","Sunday","TemporalMethods","Thursday","Tuesday","Wednesday","Window","WindowBound","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add_ms","add_ns","add_us","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","compare","days","days_only","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","ensure_duration_matches_data_type","ensure_is_constant_duration","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_overlapping_bounds_iter","group_by_values","group_by_windows","hash","hash","hash","hash","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_iter","is_constant_duration","is_full_days","is_zero","months","months_only","mul","nanoseconds","negative","new","new","next","offset","parse","parsed_int","partial_cmp","round_ms","round_ns","round_us","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","truncate_impl","truncate_ms","truncate_ms","truncate_no_offset_ms","truncate_no_offset_ns","truncate_no_offset_us","truncate_ns","truncate_ns","truncate_us","truncate_us","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","weekday","weeks","weeks_only","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","to_string","week","weekday","year"],"q":[[0,"polars_time"],[26,"polars_time::chunkedarray"],[28,"polars_time::chunkedarray::string"],[60,"polars_time::chunkedarray::string::infer"],[85,"polars_time::prelude"],[285,"polars_time::series"],[306,"chrono::naive::datetime"],[307,"polars_core::datatypes::time_unit"],[308,"polars_arrow::legacy::time_zone"],[309,"core::option"],[310,"polars_core::chunked_array::logical::datetime"],[311,"polars_error"],[312,"polars_core::datatypes"],[313,"chrono::naive::time"],[314,"polars_core::chunked_array::logical::time"],[315,"polars_core::frame"],[316,"alloc::string"],[317,"polars_core::utils"],[318,"dyn_clone::sealed"],[319,"core::fmt"],[320,"core::fmt"],[321,"core::result"],[322,"core::any"],[323,"core::clone"],[324,"polars_core::datatypes"],[325,"polars_core::datatypes::dtype"],[326,"polars_core::frame::group_by::proxy"],[327,"polars_core::datatypes::dtype"],[328,"core::ops::function"],[329,"polars_core::series"],[330,"polars_core::datatypes"]],"i":[4,0,0,4,4,0,0,0,0,0,4,0,0,0,0,11,12,44,3,0,13,0,0,17,18,18,0,0,0,25,25,25,25,25,0,0,25,24,25,25,25,25,25,25,25,25,25,25,25,25,25,25,0,25,25,25,25,25,25,25,0,39,0,0,32,32,32,32,32,32,32,32,32,0,32,32,32,32,35,32,32,32,39,32,32,4,0,0,0,42,43,0,43,0,4,42,43,4,4,42,43,0,43,0,43,43,43,0,43,41,3,4,42,43,44,3,3,3,47,41,3,4,42,43,44,47,41,3,4,42,43,44,41,3,4,42,43,44,41,3,4,42,43,44,3,3,3,3,43,47,41,3,4,42,43,44,47,41,3,4,42,43,44,47,41,3,4,42,43,44,0,0,3,4,42,43,3,3,3,4,4,4,42,42,42,43,43,43,41,3,3,4,42,43,47,41,3,4,42,43,44,44,44,44,44,0,0,3,4,42,43,47,41,3,4,42,43,44,47,41,3,4,42,43,44,47,3,3,3,3,3,3,3,3,3,44,47,44,3,3,3,44,44,44,41,3,4,42,43,44,3,3,3,44,44,44,44,3,44,3,44,47,41,3,4,42,43,44,47,41,3,4,42,43,44,47,41,3,4,42,43,44,43,3,3,0,0,55,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57],"f":"`````````````{{bddfhj{n{l}}}{{Ab{A`}}}}{dAd}{{Af{n{l}}}{{Ab{Af}}}}{{Ah{n{l}}}{{Ab{Ah}}}}```{{AjAlf{n{l}}}{{Ab{Aj}}}}`{{bAnAnfh}{{Ab{B`}}}}{{Bb{n{l}}Alb}{{Ab{Bb}}}}{{Bdcbff}{{Ab{Bf}}}{{Bj{Bh}}}}0``````````{{cBl}Bn{}}{C`Al}{ce{}{}}0{CbCb}{{ce}Bn{}{}}{Cdc{}}0{CdBn}{{CbCb}Ad}{{ce}Ad{}{}}00{{CbCf}Ch}{cc{}}{{Cbc}BnCj}`{{}Cd}:{{Cbb}Ad};{c{{Cl{e}}}{}{}}0{cCn{}}````?=={{{D`{c}}}{{D`{c}}}{DbDd}}<;;:6{b{{n{Cb}}}}5?`{{{D`{c}}b}nDd}{{Df{Dj{Dh}}{n{j}}}{{n{c}}}{}}`{ce{}{}}6{{c{n{j}}}{{Ab{{Dn{}{{Dl{e}}}}}}}{}{}}76````````````````````````{{cBl}Bn{}}00000{{fE`{n{l}}}{{Ab{E`}}}}0033333333333333{EbEb}{ff}{hh}{EdEd}{EfEf}{EhEh}{{ce}Bn{}{}}00000{{ff}Ej}{{ce}Ej{}{}}{fE`}{fAd}{{}Ef}{Cdc{}}0000000000000{CdBn}000000{{fElb}{{Ab{Bn}}}}{{f{n{b}}b}{{Ab{Bn}}}}{{ff}Ad}{{hh}Ad}{{EdEd}Ad}{{EfEf}Ad}{{ce}Ad{}{}}00000000000{{EbCf}Ch}{{fCf}Ch}0{{hCf}Ch}{{EdCf}Ch}{{EfCf}Ch}{cc{}}000000{{EhE`h{n{l}}}{{Ab{Eb}}}}00{{EhEbhj{n{l}}Ef}{{Ab{En}}}}{{ff{Dj{E`}}hj{n{l}}}{{Ab{F`}}}}{{Eh{Dj{E`}}hj{n{Fb}}AdAdEf}{{Ff{F`{Fd{E`}}{Fd{E`}}}}}}{{fc}BnCj}{{hc}BnCj}{{Edc}BnCj}{{Efc}BnCj}{{}Cd}000000{ce{}{}}0000000{{f{n{b}}}Ad}{fAd}0{fE`}1{{fE`}f}12{E`f}{{fff}Eh}{En{{n{c}}}{}}`{bf}`{{ff}{{n{Ej}}}}{{EhE`{n{l}}}{{Ab{E`}}}}00::::::{cBh{}}{{fE`{n{l}}ceg}{{Ab{E`}}}{{Fj{E`}{{Fh{E`}}}}}{{Fj{E`}{{Fh{d}}}}}{{Fj{d}{{Fh{E`}}}}}}{{fE`{n{l}}}{{Ab{E`}}}}33330303{c{{Cl{e}}}{}{}}0000000000000{cCn{}}000000{Ef{{n{Fl}}}}=>``{FnG`}{Gb{{Ab{Gd}}}}{Gb{{Ab{Gf}}}}0{Gb{{Ab{Gh}}}}22112{Gb{{Ab{Gj}}}}322{{Gbb}{{Ab{G`}}}}0334","D":"Gb","p":[[1,"str"],[5,"NaiveDateTime",306],[5,"Duration",85],[6,"ClosedWindow",85],[6,"TimeUnit",307],[6,"Tz",308],[6,"Option",309],[8,"DatetimeChunked",310],[8,"PolarsResult",311],[1,"bool"],[10,"PolarsMonthEnd",0],[10,"PolarsMonthStart",0],[10,"PolarsRound",0],[8,"StringChunked",312],[5,"NaiveTime",313],[8,"TimeChunked",314],[10,"PolarsTruncate",0],[10,"PolarsUpsample",0],[5,"DataFrame",315],[5,"String",316],[10,"IntoVec",317],[5,"Private",318],[1,"unit"],[10,"AsString",28],[6,"Pattern",28],[1,"usize"],[5,"Formatter",319],[8,"Result",319],[10,"Hasher",320],[6,"Result",321],[5,"TypeId",322],[5,"DatetimeInfer",60],[10,"Clone",323],[10,"PolarsNumericType",312],[10,"StrpTimeParser",60],[1,"u8"],[1,"slice"],[17,"Error"],[10,"TryFromWithUnit",60],[1,"i64"],[5,"Bounds",85],[6,"Label",85],[6,"StartBy",85],[5,"Window",85],[6,"Ordering",324],[6,"DataType",325],[5,"BoundsIter",85],[8,"GroupsSlice",326],[8,"TimeZone",325],[5,"Vec",327],[1,"tuple"],[17,"Output"],[10,"Fn",328],[1,"u32"],[10,"AsSeries",285],[5,"Series",329],[10,"TemporalMethods",285],[8,"Int32Chunked",312],[8,"Int8Chunked",312],[8,"BooleanChunked",312],[8,"Int16Chunked",312]],"b":[[189,"impl-Debug-for-Duration"],[190,"impl-Display-for-Duration"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPkAFQAAAAsADwAHABgAAAAbABcANAACADgAEABKAAEATQATAGIACQBtAFUAygAAAMwAAQDQAAoA4gABAOYAAgDsAAIA8AABAPUADQAEAQAABgEaACUBAAA="}],\
["polars_utils",{"t":"EECCCCCCCCCCCCCQCCCCCCCQCCCECCCCCCCQQCCRKMMRKIIIIMNNNNMNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNHHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNHHHHFNNNNNNNNNNNNNNHHKNNNNNKMHHHHFKNNNNNNMNNNNNNNNNHNNNNNNNNNNNNNIFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKFIKRKIFKNNNNHNNNNNNNNNNNNNNNNNNNNMMNNNONNNNNNNMNNNNMNNNNNNNNNHKKKRKRNNNNMMMHKNNNNMMTRKMMHHFNNNNNNNNNNNNNNNNNNKKKKKMMMMHMMMMHHFNNNNNNNNNNNNNNNNNNNNNNJFNNNNNNNNNNNNRKKKKRFNNHHNNNNNNNNNNNNNNNNNNNNNNNMNMMMNNMNNNNNNNNKMKKKRKKMMMMMMM","n":["IdxSize","NullableIdxSize","abs_diff","aliases","arena","atomic","binary_search","cache","cell","clmul","contention_pool","cpuid","float","floor_divmod","fmt","format_smartstring","functions","hashing","idx_vec","index","io","iter","macros","matches_any_order","mem","min_max","nulls","open_file","ord","partitioned","slice","sort","sync","sys","total_ord","unitvec","unreachable_unchecked_release","unwrap","vec","Abs","AbsDiff","abs_diff","max_abs_diff","HashMap","InitHashMaps","PlHashMap","PlHashSet","PlIndexMap","PlIndexSet","new","new","new","new","new","with_capacity","with_capacity","with_capacity","with_capacity","with_capacity","Arena","Node","add","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","cmp","compare","default","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","get","get_mut","get_node","get_unchecked","hash","init","init","into","into","is_empty","len","new","partial_cmp","pop","replace","replace_with","swap","take","to_owned","to_owned","try_from","try_from","try_into","try_into","try_replace_with","type_id","type_id","with_capacity","SyncCounter","borrow","borrow_mut","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","from","init","into","manual_drop","new","to_owned","try_from","try_into","type_id","find_first_ge_index","find_first_gt_index","FastCachedFunc","FastFixedCache","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","eval","from","from","get","get_mut","get_or_insert_with","init","init","insert","into","into","new","new","to_owned","try_from","try_from","try_get_or_insert_with","try_into","try_into","type_id","type_id","SyncUnsafeCell","borrow","borrow_mut","default","deref","deref_mut","drop","from","from","from","get","get_mut","init","into","into_inner","new","raw_get","try_from","try_into","type_id","clmul64","portable_clmul64","portable_prefix_xorsum","prefix_xorsum","LowContentionPool","borrow","borrow_mut","deref","deref_mut","drop","from","get","init","into","new","set","try_from","try_into","type_id","has_fast_bmi2","is_avx512_enabled","IsFloat","is_f32","is_f64","is_finite","is_float","is_nan","FloorDivMod","wrapping_floor_div_mod","arc_map","flatten","range_portion","try_arc_map","BytesHash","DirtyHash","borrow","borrow_mut","clone","clone_into","deref","deref_mut","dirty_hash","dirty_hash","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","hash_to_partition","init","into","is_null","new","peel_total_ord","to_owned","to_total_ord","tot_eq","tot_hash","try_from","try_into","type_id","unwrap_inner","IdxVec","UnitVec","as_mut","as_mut_slice","as_ref","as_slice","borrow","borrow_mut","capacity","clone","clone_into","default","deref","deref","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","extend","fmt","from","from","from","from_fallible_iter","from_iter","init","into","is_empty","iter","iter_mut","len","new","pop","push","push_unchecked","reserve","to_owned","try_from","try_into","type_id","with_capacity","Bounded","ChunkId","IdxSize","Indexable","Item","NullCount","NullableChunkId","NullableIdxSize","ToIdx","borrow","borrow","borrow_mut","borrow_mut","check_bounds","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","extract","fmt","fmt","from","from","from","get","get_unchecked","idx","init","init","inner","inner_mut","into","into","is_empty","is_null","is_null_idx","is_valid_bit_pattern","len","null","null","null_count","store","to_idx","to_opt","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","open_file","EnumerateIdxTrait","FallibleIterator","FromFallibleIterator","IntoIterCopied","IntoIteratorCopied","OwnedItem","enumerate_idx","enumerate_idx","enumerate_u32","enumerate_u32","from_fallible_iter","get_result","into_iter","to_mutable_slice","MinMax","max_ignore_nan","max_propagate_nan","min_ignore_nan","min_propagate_nan","nan_max_lt","nan_min_lt","HAS_NULLS","Inner","IsNull","is_null","unwrap_inner","compare_fn_nan_max","compare_fn_nan_min","PartitionedHashMap","borrow","borrow_mut","deref","deref_mut","drop","from","init","inner","inner_mut","into","new","raw_entry","raw_entry_and_partition","raw_entry_and_partition_mut","raw_entry_mut","try_from","try_into","type_id","Extrema","GetSaferUnchecked","Slice2Uninit","SliceAble","SortedSlice","as_uninit","get_unchecked_release","get_unchecked_release_mut","is_sorted_ascending","load_padded_le_u64","max_value","min_value","slice","slice_unchecked","arg_sort_ascending","perfect_sort","SyncPtr","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deref_unchecked","drop","fmt","from","from","from_const","get","init","into","is_null","new","new_null","to_owned","try_from","try_into","type_id","MEMINFO","MemInfo","borrow","borrow_mut","deref","deref_mut","drop","free","from","init","into","try_from","try_into","type_id","SourceItem","ToTotalOrd","TotalEq","TotalHash","TotalOrd","TotalOrdItem","TotalOrdWrap","borrow","borrow_mut","canonical_f32","canonical_f64","clone","clone_into","cmp","compare","deref","deref_mut","dirty_hash","drop","eq","equivalent","equivalent","equivalent","from","ge","gt","hash","init","into","is_null","le","lt","ne","partial_cmp","peel_total_ord","to_owned","to_total_ord","tot_cmp","tot_eq","tot_ge","tot_gt","tot_hash","tot_hash_slice","tot_le","tot_lt","tot_ne","try_from","try_into","type_id","unwrap_inner","UnwrapUncheckedRelease","unwrap_unchecked_release","CapacityByFactor","ConvertVec","IntoRawParts","ItemIn","PushUnchecked","ResizeFaster","convert","convert_owned","fill_or_alloc","into_raw_parts","push_unchecked","raw_parts","with_capacity_by_factor"],"q":[[0,"polars_utils"],[39,"polars_utils::abs_diff"],[43,"polars_utils::aliases"],[59,"polars_utils::arena"],[116,"polars_utils::atomic"],[136,"polars_utils::binary_search"],[138,"polars_utils::cache"],[174,"polars_utils::cell"],[194,"polars_utils::clmul"],[198,"polars_utils::contention_pool"],[213,"polars_utils::cpuid"],[215,"polars_utils::float"],[221,"polars_utils::floor_divmod"],[223,"polars_utils::functions"],[227,"polars_utils::hashing"],[259,"polars_utils::idx_vec"],[303,"polars_utils::index"],[365,"polars_utils::io"],[366,"polars_utils::iter"],[379,"polars_utils::mem"],[380,"polars_utils::min_max"],[387,"polars_utils::nulls"],[392,"polars_utils::ord"],[394,"polars_utils::partitioned"],[413,"polars_utils::slice"],[427,"polars_utils::sort"],[429,"polars_utils::sync"],[452,"polars_utils::sys"],[466,"polars_utils::total_ord"],[516,"polars_utils::unwrap"],[518,"polars_utils::vec"],[531,"num_traits"],[532,"core::cmp"],[533,"core::marker"],[534,"core::fmt"],[535,"core::marker"],[536,"core::cmp"],[537,"core::hash"],[538,"core::default"],[539,"core::ops::function"],[540,"core::result"],[541,"core::ops::function"],[542,"core::cmp"],[543,"alloc::borrow"],[544,"alloc::sync"],[545,"alloc::vec"],[546,"core::convert"],[547,"core::ops::range"],[548,"core::cmp"],[549,"core::slice::iter"],[550,"core::slice::iter"],[551,"std::fs"],[552,"std::path"],[553,"core::error"],[554,"core::iter::traits::iterator"],[555,"hashbrown::map"],[556,"hashbrown::map"],[557,"core::slice::index"],[558,"num_traits::cast"],[559,"rayon_core::thread_pool"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,2,112,0,0,0,0,0,112,10,11,113,114,112,10,11,113,114,0,0,12,13,12,13,12,12,13,12,13,12,13,13,13,12,13,12,13,12,13,12,13,13,13,13,13,13,12,12,12,12,12,13,13,12,13,12,12,12,12,13,12,12,12,12,12,13,12,13,12,13,12,12,13,12,12,0,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,0,0,0,0,34,31,34,31,31,31,31,34,31,34,31,34,31,34,34,31,31,31,31,34,31,31,34,31,34,31,31,34,31,31,34,31,34,31,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,0,0,0,0,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42,0,0,0,43,43,43,43,43,0,44,0,0,0,0,0,0,50,50,50,50,50,50,51,50,50,50,50,50,50,50,50,50,0,50,50,50,50,50,50,50,50,50,50,50,50,50,0,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,0,0,0,0,64,0,0,0,0,62,63,62,63,0,62,63,62,63,62,63,62,63,62,63,62,62,62,62,63,62,63,62,62,63,64,64,62,62,63,62,63,62,63,66,63,62,62,66,62,63,67,63,68,62,62,63,62,63,62,63,62,63,0,0,0,0,77,0,77,71,71,71,71,73,57,77,0,0,79,79,79,79,79,79,65,65,0,65,65,0,0,0,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,0,0,0,0,0,85,87,87,89,0,90,90,91,91,0,0,0,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,0,0,96,96,96,96,96,96,96,96,96,96,96,96,104,0,0,0,0,104,0,99,99,0,0,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,104,99,104,92,100,92,92,101,101,92,92,100,99,99,99,99,0,105,0,0,0,107,0,0,107,107,108,109,110,109,111],"f":"`````````````````````````````````````````{{{d{}{{b{c}}}}{d{}{{b{c}}}}}c{fhjlnA`}}{{}c{}}``````00000{Abc{}}{Ab{{Ad{ce}}}{}{}}{Ab{{Af{c}}}{}}22``{{{Ah{c}}c}Aj{}}{ce{}{}}000{{{Ah{c}}}Al{}}{AjAj}{{{Ah{c}}}{{Ah{c}}}An}{{ce}Al{}{}}0{{AjAj}B`}{{ce}B`{}{}}{{}Aj}{{}{{Ah{c}}}{}}<<<<{AbAl}0{{AjAj}Bb}{{ce}Bb{}{}}00{{AjBd}Bf}{cc{}}0{{{Ah{c}}Aj}c{}}0{{{Ah{c}}c}{{Bh{Aj}}}{}}1{{Ajc}AlBj}{{}Ab}0{ce{}{}}0{{{Ah{c}}}Bb{}}{{{Ah{c}}}Ab{}}<{{AjAj}{{Bh{B`}}}}{{{Ah{c}}}{{Bh{c}}}{}}{{{Ah{c}}Ajc}Al{}}{{{Ah{c}}Aje}AlBl{{C`{c}{{Bn{c}}}}}}{{{Ah{c}}AjAj}Al{}}{{{Ah{c}}Aj}cBl}88{c{{Cb{e}}}{}{}}000{{{Ah{c}}Aje}{{Cb{Al`}}}Bl{{Cd{c}{{Bn{{Cb{c`}}}}}}}}{cCf{}}0{Ab{{Ah{c}}}{}}`<<{ChCh}{{ce}Al{}{}}{{}Ch}{Chc{}}{Abc{}}10{AbAl}{cc{}}{{}Ab}{ce{}{}}{ChAl}{AbCh}2>><{{{Cj{c}}c}AbCl}0``3333{{{Cn{ce}}}{{Cn{ce}}}AnAn};{{}{{Cn{ce}}}{D`Db}{}}999988{{{Dd{ceg}}cBb}e{D`DbAn}j{{Cd{c}{{Bn{e}}}}}}88{{{Cn{eg}}c}{{Bh{g}}}{D`DbDf}{{Dh{c}}D`Db}{}}0{{{Cn{eg}}ci}g{D`Db{Dl{}{{Dj{}}}}Df}{{Dh{c}}D`Db}{}{{C`{e}{{Bn{g}}}}}}99{{{Cn{ce}}ce}e{D`Db}{}}99{{gAb}{{Dd{ceg}}}{D`DbAn}j{{Cd{c}{{Bn{e}}}}}}{Ab{{Cn{ce}}}{D`Db}{}};{c{{Cb{e}}}{}{}}0{{{Cn{eg}}ck}{{Cb{gi}}}{D`Db{Dl{}{{Dj{}}}}Df}{{Dh{c}}D`Db}{}{}{{C`{e}{{Bn{{Cb{gi}}}}}}}}11{cCf{}}0`>>{{}{{Dn{c}}}Bl}{Abc{}}0{AbAl}{c{{Dn{c}}}{}}{cc{}}{E`c{}}{{{Dn{c}}}{}Df}{{{Dn{c}}}cDf}{{}Ab}{ce{}{}}{{{Dn{c}}}c{}}7{{}}>><{{EbEb}Eb}0{EbEb}0`44<<;9{{{Ed{c}}}cBl}65{Ab{{Ed{c}}}Bl}{{{Ed{c}}c}AlBl}{c{{Cb{e}}}{}{}}0{cCf{}}{{}Bb}0`00{EfBb}10`{{EhEh}{{Ej{EhEh}}}}{{{El{c}}e}{{El{c}}}An{{Cd{c}{{Bn{c}}}}}}{{{Cj{e}}{Bh{Ab}}}{{En{c}}}An{{F`{{Cj{c}}}}}}{{AbAb{Fb{Ab}}}{{Fb{Ab}}}}{{{El{c}}g}{{Cb{{El{c}}e}}}An{}{{Cd{c}{{Bn{{Cb{ce}}}}}}}}``{ce{}{}}0{FdFd}{{ce}Al{}{}}{Abc{}}0{FfEb}{FdEb}{AbAl}{{FdFd}Bb}{{ce}Bb{}{}}00{{FdBd}Bf}{cc{}}{{Fdc}AlBj}{{EbAb}Ab}{{}Ab}={FdBb}{{{Bh{{Cj{Fh}}}}Eb}Fd}??{Fdc{}}95{c{{Cb{e}}}{}{}}0{cCf{}}2``{{{Fj{c}}}{{Cj{c}}}{}}000{ce{}{}}0{{{Fj{c}}}Ab{}}{{{Fj{c}}}{{Fj{c}}}{}}{{ce}Al{}{}}{{}{{Fj{c}}}{}}{{{Fj{c}}}e{}{}}{Abc{}}0{AbAl}{{{Fj{c}}}Al{}}{{{Fj{c}}{Fj{c}}}BbFl}{{ce}Bb{}{}}00{{{Fj{c}}e}Al{}{{G`{}{{Fn{c}}}}}}{{{Fj{c}}Bd}Bfl}{cc{}}{{{En{c}}}{{Fj{c}}}{}}{{{Cj{c}}}{{Fj{c}}}An}{g{{Cb{ic}}}{}{}{{Gb{c}{{Fn{e}}}}}{}}{e{{Fj{c}}}{}{{G`{}{{Fn{c}}}}}}{{}Ab}{ce{}{}}{{{Fj{c}}}Bb{}}{{{Fj{c}}}{{Gd{c}}}{}}{{{Fj{c}}}{{Gf{c}}}{}}{{{Fj{c}}}Ab{}}{{}{{Fj{c}}}{}}{{{Fj{c}}}{{Bh{c}}}{}}{{{Fj{c}}c}Al{}}0{{{Fj{c}}Ab}Al{}}8{c{{Cb{e}}}{}{}}0{cCf{}}{Ab{{Fj{c}}}{}}`````````;;;;{{{Cj{Gh}}Gh}{{Gj{Al}}}}{GlGl}{GnGn}{{ce}Al{}{}}0{Abc{}}000{AbAl}0{{GlGl}Bb}{{ce}Bb{}{}}00{Gn{{Ej{GhGh}}}}{{GlBd}Bf}{{GnBd}Bf}{GhGl}{cc{}}0{{{H`{}{{Fn{c}}}}Ab}cHb}0{GlGh}{{}Ab}0`{GnEb}{ce{}{}}0{HdBb}{GnBb}{GlBb}{cBb{}}{HdAb}{{}Gl}{{}Gn}{HfAb}{{GhGh}Gn}{{HhEb}Gh}{Gl{{Bh{Gh}}}};;{c{{Cb{e}}}{}{}}000{cCf{}}0{c{{Gj{Hj}}}{{F`{Hl}}}}``````{Hn{{`{HnGh}}}}0{Hn{{`{HnI`}}}}0{g{{Cb{Ibc}}}Id{}{{Gb{c}{{Fn{e}}}}}}{Gb{{Cb{Alc}}}Id}{{{Ij{}{{If{c}}{Ih{e}}}}}e{}{{Il{}{{Fn{c}}}}}}{{{Cj{c}}}{{Cj{c}}}j}`{{InIn}In}000{{InIn}Bb}0```{{{Hb{}{{J`{c}}}}}Bb{}}{{{Hb{}{{J`{c}}}}}c{}}{{cc}B`{hEf}}0`{ce{}{}}0{Abc{}}0{AbAl}{cc{}}{{}Ab}{{{Jb{ceg}}}{{Cj{{Jd{ceg}}}}}{}{}{}}{{{Jb{ceg}}}{{En{{Jd{ceg}}}}}{}{}{}}6{{{En{{Jd{ceg}}}}}{{Jb{ceg}}}{}{}{}}{{{Jb{ceg}}Eb}{{Jf{ceg}}}{}{}{}}{{{Jb{ceg}}Eb}{{Ej{{Jf{ceg}}Ab}}}{}{}{}}{{{Jb{ceg}}Eb}{{Ej{{Jh{ceg}}Ab}}}{}{}{}}{{{Jb{ceg}}Eb}{{Jh{ceg}}}{}{}{}}{c{{Cb{e}}}{}{}}0{cCf{}}`````{Jj{{Cj{{Jl{c}}}}}{}}{{Jne}{}{}{{K`{{Cj{c}}}}}}0{KbBb}{{{Cj{Fh}}}Eb}{Kd{{Bh{c}}}{}}0{{Kf{Fb{Ab}}}Kf}0{{e{En{Fh}}Ab}{{Cj{g}}}{Khj}{{G`{}{{Fn{c}}}}}{Kjj}}{{Kl{Cj{{Ej{GhGh}}}}{En{Gh}}}Al}`{ce{}{}}0{{{Kn{c}}}{{Kn{c}}}An}{{ce}Al{}{}}{Abc{}}0{{{Kn{c}}}c{}}{AbAl}{{{Kn{c}}Bd}Bfl}{{}{{Kn{c}}}{}}{cc{}}1{{{Kn{c}}}{}{}}{{}Ab}:{{{Kn{c}}}Bb{}}44;{c{{Cb{e}}}{}{}}0{cCf{}}``==::8{L`Eb}64>221```````>>{LbLb}{LdLd}{{{Lf{c}}}{{Lf{c}}}An}?{{{Lf{c}}{Lf{c}}}B`Kh}{{ce}B`{}{}}{Abc{}}0{{{Lf{c}}}EbFf}{AbAl}{{{Lf{c}}{Lf{c}}}BbLh}{{ce}Bb{}{}}00{cc{}}{{{Lf{c}}{Lf{c}}}BbKh}0{{{Lf{c}}e}AlLjBj}{{}Ab}{ce{}{}}{{{Lf{c}}}BbHb}447{{{Lf{c}}{Lf{c}}}{{Bh{B`}}}Kh}22{{{M`{}{{Ll{c}}{Ln{e}}}}}c{}{}}{{KhKh}B`}{{LhLh}Bb}{{KhKh}Bb}0{{Ljc}AlBj}{{{Cj{Lj}}c}AlBj}223{c{{Cb{e}}}{}{}}0{cCf{}}{{{Lf{c}}}eHb{}}`{Mbc{}}``````{{{Mf{}{{Md{c}}}}g}{{En{e}}}{}{}{{Cd{c}{{Bn{e}}}}}}0{{MhAbc}Alj}{Mj{{Ej{AbAb}}}}{{Mlc}Al{}}1{{AbLd}Mn}","D":"Ib","p":[[17,"Abs"],[10,"AbsDiff",39],[10,"Num",531],[10,"PartialOrd",532],[10,"Copy",533],[10,"Debug",534],[10,"Send",533],[10,"Sync",533],[1,"usize"],[8,"PlHashMap",43],[8,"PlHashSet",43],[5,"Arena",59],[5,"Node",59],[1,"unit"],[10,"Clone",535],[6,"Ordering",532],[1,"bool"],[5,"Formatter",534],[8,"Result",534],[6,"Option",536],[10,"Hasher",537],[10,"Default",538],[17,"Output"],[10,"FnOnce",539],[6,"Result",540],[10,"FnMut",539],[5,"TypeId",541],[5,"SyncCounter",116],[1,"slice"],[10,"Ord",532],[5,"FastFixedCache",138],[10,"Hash",537],[10,"Eq",532],[5,"FastCachedFunc",138],[10,"Sized",533],[10,"Borrow",542],[17,"Owned"],[10,"ToOwned",543],[5,"SyncUnsafeCell",174],[1,"never"],[1,"u64"],[5,"LowContentionPool",198],[10,"IsFloat",215],[10,"FloorDivMod",221],[1,"tuple"],[5,"Arc",544],[5,"Vec",545],[10,"AsRef",546],[5,"Range",547],[5,"BytesHash",227],[10,"DirtyHash",227],[1,"u8"],[5,"UnitVec",259],[10,"PartialEq",532],[17,"Item"],[10,"IntoIterator",548],[10,"FallibleIterator",366],[5,"Iter",549],[5,"IterMut",549],[8,"IdxSize",303],[8,"PolarsResult",550],[5,"NullableIdxSize",303],[5,"ChunkId",303],[10,"Indexable",303],[10,"IsNull",387],[10,"Bounded",303],[10,"NullCount",303],[10,"ToIdx",303],[5,"File",551],[5,"Path",552],[10,"EnumerateIdxTrait",366],[1,"u32"],[10,"FromFallibleIterator",366],[10,"Error",553],[17,"OwnedItem"],[17,"IntoIterCopied"],[10,"IntoIteratorCopied",366],[10,"Iterator",554],[10,"MinMax",380],[17,"Inner"],[5,"PartitionedHashMap",394],[5,"HashMap",555],[5,"RawEntryBuilder",555],[5,"RawEntryBuilderMut",555],[10,"Slice2Uninit",413],[20,"MaybeUninit",556],[10,"GetSaferUnchecked",413],[10,"SliceIndex",557],[10,"SortedSlice",413],[10,"Extrema",413],[10,"SliceAble",413],[10,"TotalOrd",466],[10,"FromPrimitive",558],[5,"ThreadPool",559],[5,"SyncPtr",429],[5,"MemInfo",452],[1,"f32"],[1,"f64"],[5,"TotalOrdWrap",466],[10,"TotalEq",466],[10,"TotalHash",466],[17,"TotalOrdItem"],[17,"SourceItem"],[10,"ToTotalOrd",466],[10,"UnwrapUncheckedRelease",516],[17,"ItemIn"],[10,"ConvertVec",518],[10,"ResizeFaster",518],[10,"IntoRawParts",518],[10,"PushUnchecked",518],[10,"CapacityByFactor",518],[10,"InitHashMaps",43],[8,"PlIndexMap",43],[8,"PlIndexSet",43]],"b":[[283,"impl-From%3CVec%3CT%3E%3E-for-UnitVec%3CT%3E"],[284,"impl-From%3C%26%5BT%5D%3E-for-UnitVec%3CT%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAMoBNAAAAAgACgBMAFkAAgBdAAIAYgASAHYACQCBAAAAhAAEAIwADgCdAAUApQAJALAAAQCzAAIAuAAAALsAAADAAAwAzgABANEABgDZAAoA5QAOAPUAAgD5AAsABgEUABwBBAAiAQYAKgElAFIBAABUAQQAWwEWAHMBAAB1AQYAfQELAIsBBQCSAQIAlgENAKYBBACsAQAArwEFALYBAgC6AQIAvgEAAMABBQDHAQQAzgEAANABAwDYAQMA3gELAOsBAwDwARUABwIEAA0CAwASAgEA"}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
